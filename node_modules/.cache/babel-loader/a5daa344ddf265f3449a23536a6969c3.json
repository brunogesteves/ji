{"ast":null,"code":"import{base_url}from\"../config\";var Category={get:function get(){return fetch(\"\".concat(base_url,\"/category/\")).then(function(res){return res.json();}).then(function(res){return res;});},add:function add(wordInput){return fetch(\"\".concat(base_url,\"/category\"),{method:\"post\",headers:{\"Content-type\":\"application/json\"},body:JSON.stringify({name:wordInput})});},delete:function _delete(name){return fetch(\"\".concat(base_url,\"/category\"),{method:\"delete\",headers:{\"Content-type\":\"application/json\"},body:JSON.stringify({name:name})});},random:function random(){return fetch(\"\".concat(base_url,\"/category/random\")).then(function(res){return res.json();}).then(function(res){return res;});}};export default Category;","map":{"version":3,"sources":["/home/bruno/trabalho/ji/frontend/src/Services/Category.js"],"names":["base_url","Category","get","fetch","then","res","json","add","wordInput","method","headers","body","JSON","stringify","name","delete","random"],"mappings":"AAAA,OAASA,QAAT,KAAyB,WAAzB,CAEA,GAAMC,CAAAA,QAAQ,CAAG,CACfC,GAAG,CAAE,cAAM,CACT,MAAOC,CAAAA,KAAK,WAAIH,QAAJ,eAAL,CACJI,IADI,CACC,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,IAAJ,EAAT,EADD,EAEJF,IAFI,CAEC,SAACC,GAAD,CAAS,CACb,MAAOA,CAAAA,GAAP,CACD,CAJI,CAAP,CAKD,CAPc,CAQfE,GAAG,CAAE,aAACC,SAAD,CAAe,CAClB,MAAOL,CAAAA,KAAK,WAAIH,QAAJ,cAAyB,CACnCS,MAAM,CAAE,MAD2B,CAEnCC,OAAO,CAAE,CACP,eAAgB,kBADT,CAF0B,CAKnCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACnBC,IAAI,CAAEN,SADa,CAAf,CAL6B,CAAzB,CAAZ,CASD,CAlBc,CAmBfO,MAAM,CAAE,iBAACD,IAAD,CAAU,CAChB,MAAOX,CAAAA,KAAK,WAAIH,QAAJ,cAAyB,CACnCS,MAAM,CAAE,QAD2B,CAEnCC,OAAO,CAAE,CACP,eAAgB,kBADT,CAF0B,CAKnCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACnBC,IAAI,CAAEA,IADa,CAAf,CAL6B,CAAzB,CAAZ,CASD,CA7Bc,CA8BfE,MAAM,CAAE,iBAAM,CACZ,MAAOb,CAAAA,KAAK,WAAIH,QAAJ,qBAAL,CACJI,IADI,CACC,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,IAAJ,EAAT,EADD,EAEJF,IAFI,CAEC,SAACC,GAAD,CAAS,CACb,MAAOA,CAAAA,GAAP,CACD,CAJI,CAAP,CAKD,CApCc,CAAjB,CAuCA,cAAeJ,CAAAA,QAAf","sourcesContent":["import { base_url } from \"../config\";\n\nconst Category = {\n  get: () => {\n    return fetch(`${base_url}/category/`)\n      .then((res) => res.json())\n      .then((res) => {\n        return res;\n      });\n  },\n  add: (wordInput) => {\n    return fetch(`${base_url}/category`, {\n      method: \"post\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name: wordInput,\n      }),\n    });\n  },\n  delete: (name) => {\n    return fetch(`${base_url}/category`, {\n      method: \"delete\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name: name,\n      }),\n    });\n  },\n  random: () => {\n    return fetch(`${base_url}/category/random`)\n      .then((res) => res.json())\n      .then((res) => {\n        return res;\n      });\n  },\n};\n\nexport default Category;\n"]},"metadata":{},"sourceType":"module"}