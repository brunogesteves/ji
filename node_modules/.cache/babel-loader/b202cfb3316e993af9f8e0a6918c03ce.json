{"ast":null,"code":"var _jsxFileName = \"/home/bruno/trabalho/ji/src/Components/FileDrop/FileDrop.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\"; // import \"react-dropzone-uploader/dist/styles.css\";\n\nimport \"./FileDrop.css\";\nimport { base_url } from \"../../config\";\nimport { useMutation } from \"@apollo/client\";\nimport { UPLOAD_IMAGE } from \"../../Graphql/Mutations\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function FileDrop(props) {\n  _s();\n\n  const [file, setFile] = useState(\"\");\n  const [fileName, setFileName] = useState(\"\");\n  const [uploadedFile, setUploadedFile] = useState({});\n  const [message, setMessage] = useState(\"\");\n  const [uploadPercentage, setUploadPercentage] = useState();\n\n  function onChange(e) {\n    setFile(e.target.files[0]);\n    console.log(file);\n    setFileName(e.target.files[0].name);\n  }\n\n  const [sendFile, {\n    data\n  }] = useMutation(UPLOAD_IMAGE);\n\n  async function uploadFile(e) {// sendFile({variables: })\n    //   e.preventDefault();\n    //   const data = new FormData();\n    //   data.append(\"file\", file);\n    //   try {\n    //     const res = await axios.post(`${base_url}/images`, data, {\n    //       headers: {\n    //         \"Content-Type\": \"multipart/form-data\",\n    //       },\n    //       onUploadProgress: (progressEvent) => {\n    //         setUploadPercentage(\n    //           parseInt(\n    //             Math.round((progressEvent.loaded * 100) / progressEvent.total)\n    //           )\n    //         );\n    //         setTimeout(() => {\n    //           setUploadPercentage(0);\n    //         }, 10000);\n    //       },\n    //     });\n    //     const { fileName, filePath } = res.data;\n    //     setUploadedFile({ fileName, filePath });\n    //     setMessage(\"Foto Adicionada\");\n    //   } catch (err) {\n    //     if (err.response.status === 500) {\n    //       setMessage(\"erro no servidor\");\n    //     } else {\n    //       setMessage(err.response.data.msg);\n    //     }\n    //   }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"mb-3\",\n      children: [message ? message : null, /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control\",\n        type: \"file\",\n        id: \"formFile\",\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        htmlFor: \"formFile\",\n        children: fileName ? fileName : \"Selecione um arquivo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Adicionar\",\n        class: \"btn btn-primary btn-block mt-4 col-12\",\n        onClick: uploadFile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"progress\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"progress-bar\",\n        style: {\n          width: `${uploadPercentage}%`\n        },\n        role: \"progressbar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), uploadedFile ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6 m-auto \",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-center\",\n          children: uploadedFile.fileName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          style: {\n            width: \"100%\"\n          },\n          src: uploadedFile.filePath,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true);\n}\n\n_s(FileDrop, \"gaI2igdaVuGfolUaYKzRp+UV5+E=\", false, function () {\n  return [useMutation];\n});\n\n_c = FileDrop;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileDrop\");","map":{"version":3,"sources":["/home/bruno/trabalho/ji/src/Components/FileDrop/FileDrop.js"],"names":["React","useState","axios","base_url","useMutation","UPLOAD_IMAGE","FileDrop","props","file","setFile","fileName","setFileName","uploadedFile","setUploadedFile","message","setMessage","uploadPercentage","setUploadPercentage","onChange","e","target","files","console","log","name","sendFile","data","uploadFile","width","filePath"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport axios from \"axios\";\n// import \"react-dropzone-uploader/dist/styles.css\";\nimport \"./FileDrop.css\";\nimport { base_url } from \"../../config\";\nimport { useMutation } from \"@apollo/client\";\nimport { UPLOAD_IMAGE } from \"../../Graphql/Mutations\";\n\nexport default function FileDrop(props) {\n  const [file, setFile] = useState(\"\");\n  const [fileName, setFileName] = useState(\"\");\n  const [uploadedFile, setUploadedFile] = useState({});\n  const [message, setMessage] = useState(\"\");\n  const [uploadPercentage, setUploadPercentage] = useState();\n\n  function onChange(e) {\n    setFile(e.target.files[0]);\n    console.log(file);\n    setFileName(e.target.files[0].name);\n  }\n\n  const [sendFile, { data }] = useMutation(UPLOAD_IMAGE);\n\n  async function uploadFile(e) {\n    // sendFile({variables: })\n    //   e.preventDefault();\n    //   const data = new FormData();\n    //   data.append(\"file\", file);\n    //   try {\n    //     const res = await axios.post(`${base_url}/images`, data, {\n    //       headers: {\n    //         \"Content-Type\": \"multipart/form-data\",\n    //       },\n    //       onUploadProgress: (progressEvent) => {\n    //         setUploadPercentage(\n    //           parseInt(\n    //             Math.round((progressEvent.loaded * 100) / progressEvent.total)\n    //           )\n    //         );\n    //         setTimeout(() => {\n    //           setUploadPercentage(0);\n    //         }, 10000);\n    //       },\n    //     });\n    //     const { fileName, filePath } = res.data;\n    //     setUploadedFile({ fileName, filePath });\n    //     setMessage(\"Foto Adicionada\");\n    //   } catch (err) {\n    //     if (err.response.status === 500) {\n    //       setMessage(\"erro no servidor\");\n    //     } else {\n    //       setMessage(err.response.data.msg);\n    //     }\n    //   }\n  }\n\n  return (\n    <>\n      <div class=\"mb-3\">\n        {message ? message : null}\n        <input className=\"form-control\" type=\"file\" id=\"formFile\" onChange={onChange} />\n        <label className=\"form-label\" htmlFor=\"formFile\">\n          {fileName ? fileName : \"Selecione um arquivo\"}\n        </label>\n        <input\n          type=\"submit\"\n          value=\"Adicionar\"\n          class=\"btn btn-primary btn-block mt-4 col-12\"\n          onClick={uploadFile}\n        />\n      </div>\n      <div class=\"progress\">\n        <div\n          class=\"progress-bar\"\n          style={{ width: `${uploadPercentage}%` }}\n          role=\"progressbar\"\n        ></div>\n      </div>\n      {uploadedFile ? (\n        <div className=\"row mt-5\">\n          <div className=\"col-md-6 m-auto \">\n            <h3 className=\"text-center\">{uploadedFile.fileName}</h3>\n            <img style={{ width: \"100%\" }} src={uploadedFile.filePath} alt=\"\" />\n          </div>\n        </div>\n      ) : null}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}