{"ast":null,"code":"var _jsxFileName = \"/home/bruno/trabalho/ji/src/Components/Container/Header/Menu/Drawer/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { styled } from \"@mui/material/styles\";\nimport MuiDrawer from \"@mui/material/Drawer\";\nimport List from \"@mui/material/List\";\nimport IconButton from \"@mui/material/IconButton\";\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport \"./Drawer.css\";\nimport Link from \"@material-ui/core/Link\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_ALL_CATEGORIES } from \"../../../../../Graphql/Queries\";\nimport { InfoContext } from \"../../../../../Contexts/Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 240;\n\nconst openedMixin = theme => ({\n  width: drawerWidth,\n  transition: theme.transitions.create(\"width\", {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.enteringScreen\n  }),\n  overflowX: \"hidden\"\n});\n\nconst closedMixin = theme => ({\n  transition: theme.transitions.create(\"width\", {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen\n  }),\n  overflowX: \"hidden\",\n  width: `calc(${theme.spacing(7)} + 1px)`,\n  [theme.breakpoints.up(\"sm\")]: {\n    width: `calc(${theme.spacing(0)} + 1px)`\n  }\n});\n\nconst DrawerHeader = styled(\"div\")(({\n  theme\n}) => ({\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"flex-end\",\n  padding: theme.spacing(0, 1),\n  // necessary for content to be below app bar\n  ...theme.mixins.toolbar\n}));\nconst Drawer = styled(MuiDrawer, {\n  shouldForwardProp: prop => prop !== \"open\"\n})(({\n  theme,\n  open\n}) => ({\n  width: drawerWidth,\n  flexShrink: 0,\n  whiteSpace: \"nowrap\",\n  boxSizing: \"border-box\",\n  ...(open && { ...openedMixin(theme),\n    \"& .MuiDrawer-paper\": openedMixin(theme)\n  }),\n  ...(!open && { ...closedMixin(theme),\n    \"& .MuiDrawer-paper\": closedMixin(theme)\n  })\n}));\nexport default function MenuDrawer() {\n  _s();\n\n  const {\n    openDrawer,\n    setOpenDrawer\n  } = useContext(InfoContext);\n\n  const handleDrawerClose = () => {\n    setOpenDrawer(false);\n  };\n\n  const {\n    data\n  } = useQuery(GET_ALL_CATEGORIES);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"drawer-body \",\n    children: /*#__PURE__*/_jsxDEV(Drawer, {\n      variant: \"permanent\",\n      open: openDrawer,\n      PaperProps: {\n        sx: {\n          backgroundColor: \"red\",\n          color: \"white\"\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(DrawerHeader, {\n        children: openDrawer === true ? /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleDrawerClose,\n          sx: {\n            color: \"white\"\n          },\n          children: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: data && data.getAllCategories.map((res, i) => /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          component: Link,\n          href: `/categories/${res.name}`,\n          style: {\n            textDecoration: \"none\"\n          },\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: res.name // className=\"list-name\"\n            ,\n            style: {\n              textDecoration: \"none\",\n              color: \"fff\",\n              textTransform: \"uppercase\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MenuDrawer, \"WhyDD/hopnMq1bPszHRxtnQp6oc=\", false, function () {\n  return [useQuery];\n});\n\n_c = MenuDrawer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MenuDrawer\");","map":{"version":3,"sources":["/home/bruno/trabalho/ji/src/Components/Container/Header/Menu/Drawer/index.js"],"names":["React","useContext","styled","MuiDrawer","List","IconButton","ChevronLeftIcon","ListItem","ListItemText","Link","useQuery","GET_ALL_CATEGORIES","InfoContext","drawerWidth","openedMixin","theme","width","transition","transitions","create","easing","sharp","duration","enteringScreen","overflowX","closedMixin","leavingScreen","spacing","breakpoints","up","DrawerHeader","display","alignItems","justifyContent","padding","mixins","toolbar","Drawer","shouldForwardProp","prop","open","flexShrink","whiteSpace","boxSizing","MenuDrawer","openDrawer","setOpenDrawer","handleDrawerClose","data","sx","backgroundColor","color","getAllCategories","map","res","i","name","textDecoration","textTransform"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport { styled } from \"@mui/material/styles\";\nimport MuiDrawer from \"@mui/material/Drawer\";\nimport List from \"@mui/material/List\";\nimport IconButton from \"@mui/material/IconButton\";\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\n\nimport \"./Drawer.css\";\nimport Link from \"@material-ui/core/Link\";\n\nimport { useQuery } from \"@apollo/client\";\nimport { GET_ALL_CATEGORIES } from \"../../../../../Graphql/Queries\";\nimport { InfoContext } from \"../../../../../Contexts/Context\";\n\nconst drawerWidth = 240;\n\nconst openedMixin = (theme) => ({\n  width: drawerWidth,\n  transition: theme.transitions.create(\"width\", {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.enteringScreen,\n  }),\n  overflowX: \"hidden\",\n});\n\nconst closedMixin = (theme) => ({\n  transition: theme.transitions.create(\"width\", {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  overflowX: \"hidden\",\n  width: `calc(${theme.spacing(7)} + 1px)`,\n  [theme.breakpoints.up(\"sm\")]: {\n    width: `calc(${theme.spacing(0)} + 1px)`,\n  },\n});\n\nconst DrawerHeader = styled(\"div\")(({ theme }) => ({\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"flex-end\",\n  padding: theme.spacing(0, 1),\n  // necessary for content to be below app bar\n  ...theme.mixins.toolbar,\n}));\n\nconst Drawer = styled(MuiDrawer, { shouldForwardProp: (prop) => prop !== \"open\" })(\n  ({ theme, open }) => ({\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: \"nowrap\",\n    boxSizing: \"border-box\",\n    ...(open && {\n      ...openedMixin(theme),\n      \"& .MuiDrawer-paper\": openedMixin(theme),\n    }),\n    ...(!open && {\n      ...closedMixin(theme),\n      \"& .MuiDrawer-paper\": closedMixin(theme),\n    }),\n  }),\n);\n\nexport default function MenuDrawer() {\n  const { openDrawer, setOpenDrawer } = useContext(InfoContext);\n\n  const handleDrawerClose = () => {\n    setOpenDrawer(false);\n  };\n\n  const { data } = useQuery(GET_ALL_CATEGORIES);\n\n  return (\n    <div className=\"drawer-body \">\n      <Drawer\n        variant=\"permanent\"\n        open={openDrawer}\n        PaperProps={{\n          sx: {\n            backgroundColor: \"red\",\n            color: \"white\",\n          },\n        }}\n      >\n        <DrawerHeader>\n          {openDrawer === true ? (\n            <IconButton\n              onClick={handleDrawerClose}\n              sx={{\n                color: \"white\",\n              }}\n            >\n              <ChevronLeftIcon />\n            </IconButton>\n          ) : null}\n        </DrawerHeader>\n        <List>\n          {data &&\n            data.getAllCategories.map((res, i) => (\n              <ListItem\n                button\n                key={i}\n                component={Link}\n                href={`/categories/${res.name}`}\n                style={{ textDecoration: \"none\" }}\n              >\n                <ListItemText\n                  primary={res.name}\n                  // className=\"list-name\"\n                  style={{ textDecoration: \"none\", color: \"fff\", textTransform: \"uppercase\" }}\n                />\n              </ListItem>\n            ))}\n        </List>\n      </Drawer>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}