{"ast":null,"code":"var _jsxFileName = \"/home/bruno/trabalho/ji/frontend/src/Pages/Home/GamePlays/GamePlays.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Slider from \"react-slick\";\nimport { Link } from \"react-router-dom\";\nimport HomeServices from \"../../../Services/Home\";\nimport \"./GamePlays.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Gameplay = () => {\n  _s();\n\n  const [images, setImages] = useState([]);\n  const [name, setName] = useState([]);\n  const [slug, setSlug] = useState([]);\n  useEffect(() => {\n    HomeServices.gameplay().then(res => {\n      setThumb(res.map(res => res.thumb));\n      setName(res.map(res => res.name));\n      setSlug(res.map(res => res.slug));\n    });\n  }, []);\n  const settings = {\n    dots: false,\n    infinite: true,\n    slidesToShow: 4,\n    slidesToScroll: 1,\n    speed: 500,\n    arrows: false,\n    autoplay: true,\n    vertical: true,\n    autoplaySpeed: 3000,\n    cssEase: \"linear\",\n    verticalSwiping: true,\n    responsive: [{\n      breakpoint: 1024,\n      settings: {\n        slidesToShow: 4,\n        slidesToScroll: 1,\n        vertical: false,\n        infinite: true,\n        dots: true,\n        arrows: false\n      }\n    }, {\n      breakpoint: 767,\n      settings: {\n        slidesToShow: 4,\n        slidesToScroll: 1,\n        vertical: true,\n        infinite: true,\n        dots: true,\n        arrows: false\n      }\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gameplay\",\n    children: /*#__PURE__*/_jsxDEV(Slider, { ...settings,\n      children: name.map((res, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameplay-block\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: images[i],\n            alt: res\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `${slug[i]}`,\n            className: \"gameplay-title\",\n            style: {\n              textDecoration: \"none\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: res\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Gameplay, \"r9MmCiE5MEjGUWBh3Hib549p8w4=\");\n\n_c = Gameplay;\nexport default Gameplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"Gameplay\");","map":{"version":3,"sources":["/home/bruno/trabalho/ji/frontend/src/Pages/Home/GamePlays/GamePlays.js"],"names":["React","useState","useEffect","Slider","Link","HomeServices","Gameplay","images","setImages","name","setName","slug","setSlug","gameplay","then","res","setThumb","map","thumb","settings","dots","infinite","slidesToShow","slidesToScroll","speed","arrows","autoplay","vertical","autoplaySpeed","cssEase","verticalSwiping","responsive","breakpoint","i","textDecoration"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Slider from \"react-slick\";\nimport { Link } from \"react-router-dom\";\nimport HomeServices from \"../../../Services/Home\";\n\nimport \"./GamePlays.css\";\n\nconst Gameplay = () => {\n  const [images, setImages] = useState([]);\n  const [name, setName] = useState([]);\n  const [slug, setSlug] = useState([]);\n\n  useEffect(() => {\n    HomeServices.gameplay().then((res) => {\n      setThumb(res.map((res) => res.thumb));\n      setName(res.map((res) => res.name));\n      setSlug(res.map((res) => res.slug));\n    });\n  }, []);\n\n  const settings = {\n    dots: false,\n    infinite: true,\n    slidesToShow: 4,\n    slidesToScroll: 1,\n    speed: 500,\n    arrows: false,\n    autoplay: true,\n    vertical: true,\n    autoplaySpeed: 3000,\n    cssEase: \"linear\",\n    verticalSwiping: true,\n    responsive: [\n      {\n        breakpoint: 1024,\n        settings: {\n          slidesToShow: 4,\n          slidesToScroll: 1,\n          vertical: false,\n          infinite: true,\n          dots: true,\n          arrows: false,\n        },\n      },\n      {\n        breakpoint: 767,\n        settings: {\n          slidesToShow: 4,\n          slidesToScroll: 1,\n          vertical: true,\n          infinite: true,\n          dots: true,\n          arrows: false,\n        },\n      },\n    ],\n  };\n\n  return (\n    <div className=\"gameplay\">\n      <Slider {...settings}>\n        {name.map((res, i) => {\n          return (\n            <div key={i} className=\"gameplay-block\">\n              <img src={images[i]} alt={res} />\n              <Link\n                to={`${slug[i]}`}\n                className=\"gameplay-title\"\n                style={{ textDecoration: \"none\" }}\n              >\n                <span>{res}</span>\n              </Link>\n            </div>\n          );\n        })}\n      </Slider>\n    </div>\n  );\n};\n\nexport default Gameplay;\n"]},"metadata":{},"sourceType":"module"}