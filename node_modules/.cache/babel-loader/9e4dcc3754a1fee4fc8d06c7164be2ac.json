{"ast":null,"code":"var _jsxFileName = \"/home/bruno/trabalho/ji/frontend/src/Components/FileDrop/FileDrop.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Dropzone from \"react-dropzone-uploader\";\nimport axios from \"axios\";\nimport \"react-dropzone-uploader/dist/styles.css\";\nimport \"./FileDrop.css\";\nimport { base_url } from \"../../config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function FileDrop(props) {\n  _s();\n\n  const [uploadedFile, setUploadedFile] = useState({});\n  const [uploadPercentage, setUploadPercentage] = useState();\n\n  const getUploadParams = async ({\n    file\n  }) => {\n    console.log(\"file: \", file.name);\n    const data = new FormData();\n    data.append(\"file\", file);\n    const res = await axios.post(`${base_url}/upload`, data, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      },\n      onUploadProgress: progressEvent => {\n        setUploadPercentage(parseInt(Math.round(progressEvent.loaded * 100 / progressEvent.total)));\n      }\n    });\n    const {\n      fileName,\n      filePath\n    } = res.data;\n    setUploadedFile(fileName, filePath);\n  }; // called every time a file's `status` changes\n  // const handleChangeStatus = ({ meta, file }, status) => { console.log(status, meta, file) }\n\n\n  const handleChangeStatus = ({\n    meta,\n    file\n  }, status) => {\n    console.log(status, meta, file);\n  }; // receives array of files that are done uploading when submit button is clicked\n\n\n  const handleSubmit = (files, allFiles) => {\n    // console.log(files.map((f) => f.meta));\n    allFiles.forEach(f => f.remove());\n  };\n\n  return (\n    /*#__PURE__*/\n    // <Dropzone\n    //   getUploadParams={getUploadParams}\n    //   onChangeStatus={handleChangeStatus}\n    //   onSubmit={handleSubmit}\n    //   accept=\"image/*,audio/*,video/*\"\n    //   inputContent={\"Adicione Fotos\"}\n    //   inputWithFilesContent={\"Procurar Fotos\"}\n    //   submitButtonContent={\"Apagar\"}\n    // />\n    _jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"formFile\",\n          class: \"form-label\",\n          children: \"Default file input example\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"form-control\",\n          type: \"file\",\n          id: \"formFile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this)\n    }, void 0, false)\n  );\n}\n\n_s(FileDrop, \"aE33FeZcxaDjS9oN/L93V4N7HBc=\");\n\n_c = FileDrop;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileDrop\");","map":{"version":3,"sources":["/home/bruno/trabalho/ji/frontend/src/Components/FileDrop/FileDrop.js"],"names":["React","useState","Dropzone","axios","base_url","FileDrop","props","uploadedFile","setUploadedFile","uploadPercentage","setUploadPercentage","getUploadParams","file","console","log","name","data","FormData","append","res","post","headers","onUploadProgress","progressEvent","parseInt","Math","round","loaded","total","fileName","filePath","handleChangeStatus","meta","status","handleSubmit","files","allFiles","forEach","f","remove"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,yBAArB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,yCAAP;AACA,OAAO,gBAAP;AACA,SAASC,QAAT,QAAyB,cAAzB;;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACtC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACQ,gBAAD,EAAmBC,mBAAnB,IAA0CT,QAAQ,EAAxD;;AAEA,QAAMU,eAAe,GAAG,OAAO;AAAEC,IAAAA;AAAF,GAAP,KAAoB;AAC1CC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,IAAI,CAACG,IAA3B;AACA,UAAMC,IAAI,GAAG,IAAIC,QAAJ,EAAb;AACAD,IAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoBN,IAApB;AACA,UAAMO,GAAG,GAAG,MAAMhB,KAAK,CAACiB,IAAN,CAAY,GAAEhB,QAAS,SAAvB,EAAiCY,IAAjC,EAAuC;AACvDK,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAD8C;AAIvDC,MAAAA,gBAAgB,EAAGC,aAAD,IAAmB;AACnCb,QAAAA,mBAAmB,CACjBc,QAAQ,CACNC,IAAI,CAACC,KAAL,CAAYH,aAAa,CAACI,MAAd,GAAuB,GAAxB,GAA+BJ,aAAa,CAACK,KAAxD,CADM,CADS,CAAnB;AAKD;AAVsD,KAAvC,CAAlB;AAYA,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAyBX,GAAG,CAACH,IAAnC;AAEAR,IAAAA,eAAe,CAACqB,QAAD,EAAWC,QAAX,CAAf;AACD,GAnBD,CAJsC,CAyBtC;AACA;;;AACA,QAAMC,kBAAkB,GAAG,CAAC;AAAEC,IAAAA,IAAF;AAAQpB,IAAAA;AAAR,GAAD,EAAiBqB,MAAjB,KAA4B;AACrDpB,IAAAA,OAAO,CAACC,GAAR,CAAYmB,MAAZ,EAAoBD,IAApB,EAA0BpB,IAA1B;AACD,GAFD,CA3BsC,CA+BtC;;;AACA,QAAMsB,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACxC;AACAA,IAAAA,QAAQ,CAACC,OAAT,CAAkBC,CAAD,IAAOA,CAAC,CAACC,MAAF,EAAxB;AACD,GAHD;;AAKA;AAAA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,6BACE;AAAK,QAAA,KAAK,EAAC,MAAX;AAAA,gCACE;AAAO,UAAA,GAAG,EAAC,UAAX;AAAsB,UAAA,KAAK,EAAC,YAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAO,UAAA,KAAK,EAAC,cAAb;AAA4B,UAAA,IAAI,EAAC,MAAjC;AAAwC,UAAA,EAAE,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAVF;AAmBD;;GAxDuBlC,Q;;KAAAA,Q","sourcesContent":["import React, { useState } from \"react\";\nimport Dropzone from \"react-dropzone-uploader\";\n\nimport axios from \"axios\";\nimport \"react-dropzone-uploader/dist/styles.css\";\nimport \"./FileDrop.css\";\nimport { base_url } from \"../../config\";\n\nexport default function FileDrop(props) {\n  const [uploadedFile, setUploadedFile] = useState({});\n  const [uploadPercentage, setUploadPercentage] = useState();\n\n  const getUploadParams = async ({ file }) => {\n    console.log(\"file: \", file.name);\n    const data = new FormData();\n    data.append(\"file\", file);\n    const res = await axios.post(`${base_url}/upload`, data, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n      onUploadProgress: (progressEvent) => {\n        setUploadPercentage(\n          parseInt(\n            Math.round((progressEvent.loaded * 100) / progressEvent.total)\n          )\n        );\n      },\n    });\n    const { fileName, filePath } = res.data;\n\n    setUploadedFile(fileName, filePath);\n  };\n\n  // called every time a file's `status` changes\n  // const handleChangeStatus = ({ meta, file }, status) => { console.log(status, meta, file) }\n  const handleChangeStatus = ({ meta, file }, status) => {\n    console.log(status, meta, file);\n  };\n\n  // receives array of files that are done uploading when submit button is clicked\n  const handleSubmit = (files, allFiles) => {\n    // console.log(files.map((f) => f.meta));\n    allFiles.forEach((f) => f.remove());\n  };\n\n  return (\n    // <Dropzone\n    //   getUploadParams={getUploadParams}\n    //   onChangeStatus={handleChangeStatus}\n    //   onSubmit={handleSubmit}\n    //   accept=\"image/*,audio/*,video/*\"\n    //   inputContent={\"Adicione Fotos\"}\n    //   inputWithFilesContent={\"Procurar Fotos\"}\n    //   submitButtonContent={\"Apagar\"}\n    // />\n    <>\n      <div class=\"mb-3\">\n        <label for=\"formFile\" class=\"form-label\">\n          Default file input example\n        </label>\n        <input class=\"form-control\" type=\"file\" id=\"formFile\" />\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}