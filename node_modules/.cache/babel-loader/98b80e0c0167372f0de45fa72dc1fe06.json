{"ast":null,"code":"var _jsxFileName = \"/home/bruno/trabalho/ji/src/Pages/Admin/UpdatePost/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport slugify from \"react-slugify\";\nimport { useParams } from \"react-router-dom\";\nimport SunEditor from \"suneditor-react\";\nimport \"suneditor/dist/css/suneditor.min.css\"; // Import Sun Editor's CSS File\n\nimport axios from \"axios\";\nimport Modal from \"@mui/material/Modal\";\nimport Admin from \"../Admin\";\nimport ImagesWIndow from \"../../../Components/ImagesWIndow/ImagesWIndow\";\nimport NewCategory from \"../../../Components/NewCategory\";\nimport \"./UpdatePost.css\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { GET_ADMIN_POST_INFO, GET_ALL_CATEGORIES } from \"../../../Graphql/Queries\";\nimport { UPDATE_ADMIN_POST_INFO } from \"../../../Graphql/Mutations\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UpdatePost(props) {\n  _s();\n\n  const nameParams = useParams();\n  let idNumber = nameParams.id;\n  const [infoPost, setInfoPost] = useState({\n    name: \"\"\n  });\n  const [namePost, setNamePost] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [thumb, setThumb] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [slide, setSlide] = useState(false);\n  const [middle, setMiddle] = useState(false);\n  const [gameplay, setGameplay] = useState(false);\n  const [publicPost, setPublicPost] = useState(false);\n  const [midSection, setMidSection] = useState(false);\n  const [file, setFile] = useState(\"\");\n  const [modalShow, setModalShow] = useState(false);\n  const [reloadPage, setReloadPage] = useState(false);\n  const editor = useRef(null);\n\n  function dataForm(data) {\n    setContent(data);\n  } // useEffect(() => {\n  //   let image = file.name;\n  //   const url = `${base_url}/upload/${image}`;\n  //   const data = new FormData();\n  //   data.append(\"file\", file);\n  //   const options = {\n  //     headers: {\n  //       \"Content-Type\": \"multipart/form-data\",\n  //     },\n  //   };\n  //   axios.post(url, data, options);\n  // }, [file]);\n\n\n  const {\n    data,\n    refetch\n  } = useQuery(GET_ADMIN_POST_INFO, {\n    variables: {\n      id: idNumber\n    }\n  });\n  const {\n    data: categories\n  } = useQuery(GET_ALL_CATEGORIES);\n  const postInfo = data ? data.getAdminInfoPost[0] : \"\";\n  console.log(\"pagina de atualizar\", postInfo);\n  const [updatePost, {\n    data: isUpdated\n  }] = useMutation(UPDATE_ADMIN_POST_INFO);\n  useEffect(() => {\n    if (reloadPage && isUpdated && isUpdated.updatePost.successfull) {\n      refetch();\n    }\n  }, [reloadPage]);\n  useEffect(() => {\n    if (reloadPage && isUpdated && isUpdated.updatePost.successfull) {\n      refetch();\n    }\n  }, [reloadPage]);\n\n  function reload() {\n    updatePost({\n      variables: {\n        id: idNumber,\n        name: namePost,\n        content: content,\n        category: category,\n        slug: slugify(namePost, {\n          delimiter: \"-\"\n        }),\n        slide: slide,\n        middle: middle,\n        gameplay: gameplay,\n        publicPost: publicPost,\n        midSection: midSection,\n        thumb: thumb\n      }\n    });\n    setReloadPage(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Admin, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"updateContent\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"updateContent-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"update-warning\",\n            children: [isUpdated && isUpdated.updatePost.successfull ? \"\" : \"Atualizado\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: reload,\n            children: \"Atualizar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), \"Nome:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: e => setNamePost(e.target.value),\n            value: namePost\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Publico\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onClick: e => setPublicPost(e.target.checked),\n              defaultChecked: postInfo.public ? true : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Slide\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onClick: e => setSlide(e.target.checked),\n              defaultChecked: postInfo.slide ? true : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this), \"Meio\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onClick: e => setMiddle(e.target.checked),\n              defaultChecked: postInfo.middle ? true : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this), \"Gameplay\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onClick: e => setGameplay(e.target.checked),\n              defaultChecked: postInfo.gameplay ? true : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this), \"midSection\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onClick: e => setMidSection(e.target.checked),\n              defaultChecked: postInfo.gameplay ? true : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NewCategory, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: postInfo.category,\n            onChange: e => setCategory(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Escolha uma Categoria\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this), categories && categories.getAllCategories.map((cat, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n              children: cat.name.toUpperCase()\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `/${postInfo.thumb}`,\n            alt: postInfo.thumb\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setModalShow(true),\n            children: \"Mudar Imagem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Modal, {\n            open: modalShow,\n            onClose: () => setModalShow(false),\n            \"aria-labelledby\": \"simple-modal-title\",\n            \"aria-describedby\": \"simple-modal-description\",\n            children: /*#__PURE__*/_jsxDEV(ImagesWIndow, {\n              show: modalShow,\n              onHide: () => setModalShow(false),\n              setThumb: setThumb,\n              setModalShow: setModalShow\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"updateContent-form\",\n          children: /*#__PURE__*/_jsxDEV(SunEditor, {\n            setContents: postInfo.content,\n            ref: editor,\n            lang: \"pt_br\",\n            width: \"92%\",\n            height: \"400\",\n            name: \"my-editor\",\n            setOptions: {\n              mode: \"classic\",\n              katex: \"window.katex\",\n              imageWidth: \"(auto)\",\n              imageHeight: \"(auto)\",\n              // imageUploadUrl: `${base_url}/ckimage`,\n              imageAccept: \"*\",\n              // imageGalleryUrl: `${base_url}/images`,\n              imageFileInput: true,\n              videoFileInput: false,\n              tabDisable: false,\n              buttonList: [[\"undo\", \"redo\", \"font\", \"fontSize\", \"formatBlock\", \"paragraphStyle\", \"blockquote\", \"bold\", \"underline\", \"italic\", \"strike\", \"subscript\", \"superscript\", \"fontColor\", \"hiliteColor\", \"textStyle\", \"removeFormat\", \"outdent\", \"indent\", \"align\", \"horizontalRule\", \"list\", \"lineHeight\", \"table\", \"link\", \"image\", \"video\", \"audio\", \"math\", \"imageGallery\", \"fullScreen\", \"showBlocks\", \"codeView\", \"preview\", \"print\", \"save\", \"template\"]]\n            },\n            onChange: dataForm,\n            onImageUploadBefore: files => {\n              let nameImage = files[0].name;\n              setFile(files[0]);\n              editor.current.editor.insertHTML(`<img src=\"/${nameImage}\">`);\n              return true;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UpdatePost, \"6l1BBqzrtwPgILCjb0liEND+sgc=\", false, function () {\n  return [useParams, useQuery, useQuery, useMutation];\n});\n\n_c = UpdatePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdatePost\");","map":{"version":3,"sources":["/home/bruno/trabalho/ji/src/Pages/Admin/UpdatePost/index.js"],"names":["React","useState","useEffect","useRef","slugify","useParams","SunEditor","axios","Modal","Admin","ImagesWIndow","NewCategory","useMutation","useQuery","GET_ADMIN_POST_INFO","GET_ALL_CATEGORIES","UPDATE_ADMIN_POST_INFO","UpdatePost","props","nameParams","idNumber","id","infoPost","setInfoPost","name","namePost","setNamePost","content","setContent","thumb","setThumb","category","setCategory","slide","setSlide","middle","setMiddle","gameplay","setGameplay","publicPost","setPublicPost","midSection","setMidSection","file","setFile","modalShow","setModalShow","reloadPage","setReloadPage","editor","dataForm","data","refetch","variables","categories","postInfo","getAdminInfoPost","console","log","updatePost","isUpdated","successfull","reload","slug","delimiter","e","target","value","checked","public","getAllCategories","map","cat","i","toUpperCase","mode","katex","imageWidth","imageHeight","imageAccept","imageFileInput","videoFileInput","tabDisable","buttonList","files","nameImage","current","insertHTML"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport slugify from \"react-slugify\";\nimport { useParams } from \"react-router-dom\";\nimport SunEditor from \"suneditor-react\";\n\nimport \"suneditor/dist/css/suneditor.min.css\"; // Import Sun Editor's CSS File\nimport axios from \"axios\";\nimport Modal from \"@mui/material/Modal\";\n\nimport Admin from \"../Admin\";\nimport ImagesWIndow from \"../../../Components/ImagesWIndow/ImagesWIndow\";\nimport NewCategory from \"../../../Components/NewCategory\";\n\nimport \"./UpdatePost.css\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { GET_ADMIN_POST_INFO, GET_ALL_CATEGORIES } from \"../../../Graphql/Queries\";\nimport { UPDATE_ADMIN_POST_INFO } from \"../../../Graphql/Mutations\";\n\nexport default function UpdatePost(props) {\n  const nameParams = useParams();\n  let idNumber = nameParams.id;\n\n\n  const [infoPost, setInfoPost] =useState({\n    name: \"\"\n  })\n  const [namePost, setNamePost] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [thumb, setThumb] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [slide, setSlide] = useState(false);\n  const [middle, setMiddle] = useState(false);\n  const [gameplay, setGameplay] = useState(false);\n  const [publicPost, setPublicPost] = useState(false);\n  const [midSection, setMidSection] = useState(false);\n  const [file, setFile] = useState(\"\");\n  const [modalShow, setModalShow] = useState(false);\n  const [reloadPage, setReloadPage] = useState(false);\n  const editor = useRef(null);\n\n  function dataForm(data) {\n    setContent(data);\n  }\n\n  // useEffect(() => {\n  //   let image = file.name;\n  //   const url = `${base_url}/upload/${image}`;\n  //   const data = new FormData();\n  //   data.append(\"file\", file);\n  //   const options = {\n  //     headers: {\n  //       \"Content-Type\": \"multipart/form-data\",\n  //     },\n  //   };\n  //   axios.post(url, data, options);\n  // }, [file]);\n\n  const { data, refetch } = useQuery(GET_ADMIN_POST_INFO, { variables: { id: idNumber } });\n  const { data: categories } = useQuery(GET_ALL_CATEGORIES);\n\n  const postInfo = data ? data.getAdminInfoPost[0] : \"\";\n  console.log(\"pagina de atualizar\", postInfo);\n\n  const [updatePost, { data: isUpdated }] = useMutation(UPDATE_ADMIN_POST_INFO);\n\n\n  useEffect(() => {\n    if (reloadPage && isUpdated && isUpdated.updatePost.successfull) {\n      refetch();\n    }\n  }, [reloadPage]);\n\n\n  useEffect(() => {\n    if (reloadPage && isUpdated && isUpdated.updatePost.successfull) {\n      refetch();\n    }\n  }, [reloadPage]);\n  \n  function reload(){\n    updatePost({\n      variables: {\n        id: idNumber,\n        name: namePost,\n        content: content,\n        category: category,\n        slug: slugify(namePost, { delimiter: \"-\" }),\n        slide: slide,\n        middle: middle,\n        gameplay: gameplay,\n        publicPost: publicPost,\n        midSection: midSection,\n        thumb: thumb,\n      },\n    })\n    setReloadPage(true)\n  }\n\n  return (\n    <div>\n      <Admin>\n        <div className=\"updateContent\">\n          <div className=\"updateContent-field\">\n            <p className=\"update-warning\">\n              {isUpdated && isUpdated.updatePost.successfull ? \"\" : \"Atualizado\"}{\" \"}\n            </p>\n            <button\n              onClick={reload}\n            >\n              Atualizar\n            </button>\n            Nome:\n            <input\n              type=\"text\"\n              onChange={(e) => setNamePost(e.target.value)}\n              value={namePost}\n            />\n            <div>\n              Publico\n              <input\n                type=\"checkbox\"\n                onClick={(e) => setPublicPost(e.target.checked)}\n                defaultChecked={postInfo.public ? true : null}\n              />\n            </div>\n            <div>\n              Slide\n              <input\n                type=\"checkbox\"\n                onClick={(e) => setSlide(e.target.checked)}\n                defaultChecked={postInfo.slide ? true : null}\n              />\n              Meio\n              <input\n                type=\"checkbox\"\n                onClick={(e) => setMiddle(e.target.checked)}\n                defaultChecked={postInfo.middle ? true : null}\n              />\n              Gameplay\n              <input\n                type=\"checkbox\"\n                onClick={(e) => setGameplay(e.target.checked)}\n                defaultChecked={postInfo.gameplay ? true : null}\n              />\n              midSection\n              <input\n                type=\"checkbox\"\n                onClick={(e) => setMidSection(e.target.checked)}\n                defaultChecked={postInfo.gameplay ? true : null}\n              />\n            </div>\n            <NewCategory />\n            <select value={postInfo.category} onChange={(e) => setCategory(e.target.value)}>\n              <option>Escolha uma Categoria</option>\n              {categories &&\n                categories.getAllCategories.map((cat, i) => (\n                  <option key={i}>{cat.name.toUpperCase()}</option>\n                ))}\n            </select>\n            <img src={`/${postInfo.thumb}`} alt={postInfo.thumb} />\n            <button type=\"button\" onClick={() => setModalShow(true)}>\n              Mudar Imagem\n            </button>\n            <Modal\n              open={modalShow}\n              onClose={() => setModalShow(false)}\n              aria-labelledby=\"simple-modal-title\"\n              aria-describedby=\"simple-modal-description\"\n            >\n              {\n                <ImagesWIndow\n                  show={modalShow}\n                  onHide={() => setModalShow(false)}\n                  setThumb={setThumb}\n                  setModalShow={setModalShow}\n                />\n              }\n            </Modal>\n          </div>\n          <div className=\"updateContent-form\">\n            <SunEditor\n              setContents={postInfo.content}\n              ref={editor}\n              lang=\"pt_br\"\n              width=\"92%\"\n              height=\"400\"\n              name=\"my-editor\"\n              setOptions={{\n                mode: \"classic\",\n                katex: \"window.katex\",\n                imageWidth: \"(auto)\",\n                imageHeight: \"(auto)\",\n                // imageUploadUrl: `${base_url}/ckimage`,\n                imageAccept: \"*\",\n                // imageGalleryUrl: `${base_url}/images`,\n                imageFileInput: true,\n                videoFileInput: false,\n                tabDisable: false,\n                buttonList: [\n                  [\n                    \"undo\",\n                    \"redo\",\n                    \"font\",\n                    \"fontSize\",\n                    \"formatBlock\",\n                    \"paragraphStyle\",\n                    \"blockquote\",\n                    \"bold\",\n                    \"underline\",\n                    \"italic\",\n                    \"strike\",\n                    \"subscript\",\n                    \"superscript\",\n                    \"fontColor\",\n                    \"hiliteColor\",\n                    \"textStyle\",\n                    \"removeFormat\",\n                    \"outdent\",\n                    \"indent\",\n                    \"align\",\n                    \"horizontalRule\",\n                    \"list\",\n                    \"lineHeight\",\n                    \"table\",\n                    \"link\",\n                    \"image\",\n                    \"video\",\n                    \"audio\",\n                    \"math\",\n                    \"imageGallery\",\n                    \"fullScreen\",\n                    \"showBlocks\",\n                    \"codeView\",\n                    \"preview\",\n                    \"print\",\n                    \"save\",\n                    \"template\",\n                  ],\n                ],\n              }}\n              onChange={dataForm}\n              onImageUploadBefore={(files) => {\n                let nameImage = files[0].name;\n                setFile(files[0]);\n                editor.current.editor.insertHTML(`<img src=\"/${nameImage}\">`);\n                return true;\n              }}\n            />\n          </div>\n        </div>\n      </Admin>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}