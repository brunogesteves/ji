{"ast":null,"code":"var _jsxFileName = \"/home/bruno/trabalho/ji/src/Pages/Admin/NewPost/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport slugify from \"react-slugify\";\nimport { useHistory } from \"react-router-dom\";\nimport SunEditor from \"suneditor-react\";\nimport \"suneditor/dist/css/suneditor.min.css\"; // Import Sun Editor's CSS File\n// import axios from \"axios\";\n\nimport Modal from \"@mui/material/Modal\";\nimport Admin from \"../Admin\";\nimport ImagesWIndow from \"../../../Components/ImagesWIndow/ImagesWIndow\";\nimport NewCategory from \"../../../Components/NewCategory\";\nimport \"./NewPost.css\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { GET_ALL_CATEGORIES } from \"../../../Graphql/Queries\";\nimport { CREATE_POST } from \"../../../Graphql/Mutations\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UpdatePost(props) {\n  _s();\n\n  let history = useHistory();\n  const [name, setName] = useState(\"te\");\n  const [content, setContent] = useState(\"te\");\n  const [category, setCategory] = useState(\"te\");\n  const [isscheduled] = useState(true);\n  const [schedule, setSchedule] = useState(\"\");\n  const [slide, setSlide] = useState(false);\n  const [middle, setMiddle] = useState(true);\n  const [gameplay, setGameplay] = useState(true);\n  const [midSection, setMidSection] = useState(false);\n  const [thumb, setThumb] = useState(\"foto.jpg\"); // const [file, setFile] = useState(\"\");\n\n  const [modalShow, setModalShow] = useState(false);\n  const editor = useRef(null);\n\n  function dataForm(data) {\n    setContent(data);\n  } // useEffect(() => {\n  //   let image = file.name;\n  //   const url = `${base_url}/upload/${image}`;\n  //   const data = new FormData();\n  //   data.append(\"file\", file);\n  //   const options = {\n  //     headers: {\n  //       \"Content-Type\": \"multipart/form-data\",\n  //     },\n  //   };\n  //   axios.post(url, data, options);\n  // }, [file]);\n\n\n  const {\n    data: categories\n  } = useQuery(GET_ALL_CATEGORIES);\n  const [createPost, {\n    data: isCreated\n  }] = useMutation(CREATE_POST);\n\n  function create() {\n    /*#__PURE__*/\n    _jsxDEV(\"history\", {\n      to: `/admin/updatepost/20`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this);\n\n    createPost({\n      variables: {\n        name: name,\n        content: content,\n        category: category,\n        slug: slugify(name, {\n          delimiter: \"-\"\n        }),\n        scheduled: isscheduled,\n        schedule: schedule,\n        slide: slide,\n        middle: middle,\n        gameplay: gameplay,\n        publicPost: isscheduled,\n        midSection: midSection,\n        thumb: thumb\n      }\n    });\n  }\n\n  function red() {\n    /*#__PURE__*/\n    _jsxDEV(Redirect, {\n      to: `/admin/updatepost/20`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }, this);\n  }\n\n  useEffect(() => {\n    if (isCreated) {\n      console.log(\"aqui\");\n      const newPostId = isCreated.createPost.id;\n      console.log(newPostId);\n\n      /*#__PURE__*/\n      _jsxDEV(Redirect, {\n        push: true,\n        to: `/admin/`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }, this);\n    }\n  }, [isCreated]);\n  console.log(isCreated && isCreated.createPost.id);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Admin, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"updateContent\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"updateContent-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: create,\n            children: \"Publicar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: red,\n            children: \"Publicar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), \"Nome:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: e => setName(e.target.value),\n            value: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Agendar\", schedule ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"datetime-local\",\n              className: schedule ? \"schedule-show\" : \"schedule\",\n              onChange: e => setSchedule(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this) : null, \"Slide\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onClick: e => setSlide(e.target.checked),\n              defaultChecked: slide ? true : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this), \"Meio\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onClick: e => setMiddle(e.target.checked),\n              defaultChecked: middle ? true : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this), \"Gameplay\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onClick: e => setGameplay(e.target.checked),\n              defaultChecked: gameplay ? true : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this), \"midSection\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onClick: e => setMidSection(e.target.checked),\n              defaultChecked: midSection ? true : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NewCategory, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: category,\n            onChange: e => setCategory(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Escolha uma Categoria\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this), categories && categories.getAllCategories.map((cat, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n              children: cat.name.toUpperCase()\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `/${thumb}`,\n            alt: thumb\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setModalShow(true),\n            children: \"Mudar Imagem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Modal, {\n            open: modalShow,\n            onClose: () => setModalShow(false),\n            \"aria-labelledby\": \"simple-modal-title\",\n            \"aria-describedby\": \"simple-modal-description\",\n            children: /*#__PURE__*/_jsxDEV(ImagesWIndow, {\n              show: modalShow,\n              onHide: () => setModalShow(false),\n              setThumb: setThumb,\n              setModalShow: setModalShow\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"updateContent-form\",\n          children: /*#__PURE__*/_jsxDEV(SunEditor, {\n            setContents: content,\n            ref: editor,\n            lang: \"pt_br\",\n            width: \"92%\",\n            height: \"400\",\n            name: \"my-editor\",\n            setOptions: {\n              mode: \"classic\",\n              katex: \"window.katex\",\n              imageWidth: \"(auto)\",\n              imageHeight: \"(auto)\",\n              // imageUploadUrl: `${base_url}/ckimage`,\n              imageAccept: \"*\",\n              // imageGalleryUrl: `${base_url}/images`,\n              imageFileInput: true,\n              videoFileInput: false,\n              tabDisable: false,\n              buttonList: [[\"undo\", \"redo\", \"font\", \"fontSize\", \"formatBlock\", \"paragraphStyle\", \"blockquote\", \"bold\", \"underline\", \"italic\", \"strike\", \"subscript\", \"superscript\", \"fontColor\", \"hiliteColor\", \"textStyle\", \"removeFormat\", \"outdent\", \"indent\", \"align\", \"horizontalRule\", \"list\", \"lineHeight\", \"table\", \"link\", \"image\", \"video\", \"audio\", \"math\", \"imageGallery\", \"fullScreen\", \"showBlocks\", \"codeView\", \"preview\", \"print\", \"save\", \"template\"]]\n            },\n            onChange: dataForm,\n            onImageUploadBefore: files => {\n              let nameImage = files[0].name; // setFile(files[0]);\n\n              editor.current.editor.insertHTML(`<img src=\"/${nameImage}\">`);\n              return true;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UpdatePost, \"akCEoCOSO9zJZg2TaqvcZVKorxA=\", false, function () {\n  return [useHistory, useQuery, useMutation];\n});\n\n_c = UpdatePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdatePost\");","map":{"version":3,"sources":["/home/bruno/trabalho/ji/src/Pages/Admin/NewPost/index.js"],"names":["React","useState","useEffect","useRef","slugify","useHistory","SunEditor","Modal","Admin","ImagesWIndow","NewCategory","useQuery","useMutation","GET_ALL_CATEGORIES","CREATE_POST","UpdatePost","props","history","name","setName","content","setContent","category","setCategory","isscheduled","schedule","setSchedule","slide","setSlide","middle","setMiddle","gameplay","setGameplay","midSection","setMidSection","thumb","setThumb","modalShow","setModalShow","editor","dataForm","data","categories","createPost","isCreated","create","variables","slug","delimiter","scheduled","publicPost","red","console","log","newPostId","id","e","target","value","checked","getAllCategories","map","cat","i","toUpperCase","mode","katex","imageWidth","imageHeight","imageAccept","imageFileInput","videoFileInput","tabDisable","buttonList","files","nameImage","current","insertHTML"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport slugify from \"react-slugify\";\nimport { useHistory } from \"react-router-dom\";\nimport SunEditor from \"suneditor-react\";\n\nimport \"suneditor/dist/css/suneditor.min.css\"; // Import Sun Editor's CSS File\n// import axios from \"axios\";\nimport Modal from \"@mui/material/Modal\";\n\nimport Admin from \"../Admin\";\nimport ImagesWIndow from \"../../../Components/ImagesWIndow/ImagesWIndow\";\nimport NewCategory from \"../../../Components/NewCategory\";\n\nimport \"./NewPost.css\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { GET_ALL_CATEGORIES } from \"../../../Graphql/Queries\";\nimport { CREATE_POST } from \"../../../Graphql/Mutations\";\n\nexport default function UpdatePost(props) {\n  let history = useHistory();\n  const [name, setName] = useState(\"te\");\n  const [content, setContent] = useState(\"te\");\n  const [category, setCategory] = useState(\"te\");\n  const [isscheduled] = useState(true);\n  const [schedule, setSchedule] = useState(\"\");\n  const [slide, setSlide] = useState(false);\n  const [middle, setMiddle] = useState(true);\n  const [gameplay, setGameplay] = useState(true);\n  const [midSection, setMidSection] = useState(false);\n  const [thumb, setThumb] = useState(\"foto.jpg\");\n  // const [file, setFile] = useState(\"\");\n  const [modalShow, setModalShow] = useState(false);\n  const editor = useRef(null);\n\n  function dataForm(data) {\n    setContent(data);\n  }\n\n  // useEffect(() => {\n  //   let image = file.name;\n  //   const url = `${base_url}/upload/${image}`;\n  //   const data = new FormData();\n  //   data.append(\"file\", file);\n  //   const options = {\n  //     headers: {\n  //       \"Content-Type\": \"multipart/form-data\",\n  //     },\n  //   };\n  //   axios.post(url, data, options);\n  // }, [file]);\n\n  const { data: categories } = useQuery(GET_ALL_CATEGORIES);\n\n  const [createPost, { data: isCreated }] = useMutation(CREATE_POST);\n\n  function create() {\n    <history to={`/admin/updatepost/20`} />;\n\n    createPost({\n      variables: {\n        name: name,\n        content: content,\n        category: category,\n        slug: slugify(name, { delimiter: \"-\" }),\n        scheduled: isscheduled,\n        schedule: schedule,\n        slide: slide,\n        middle: middle,\n        gameplay: gameplay,\n        publicPost: isscheduled,\n        midSection: midSection,\n        thumb: thumb,\n      },\n    });\n  }\n\n  function red() {\n    <Redirect to={`/admin/updatepost/20`} />;\n  }\n\n  useEffect(() => {\n    if (isCreated) {\n      console.log(\"aqui\");\n      const newPostId = isCreated.createPost.id;\n\n      console.log(newPostId);\n      <Redirect push to={`/admin/`} />;\n    }\n  }, [isCreated]);\n  console.log(isCreated && isCreated.createPost.id);\n\n  return (\n    <div>\n      <Admin>\n        <div className=\"updateContent\">\n          <div className=\"updateContent-field\">\n            <button onClick={create}>Publicar</button>\n            <button onClick={red}>Publicar</button>\n            Nome:\n            <input type=\"text\" onChange={(e) => setName(e.target.value)} value={name} />\n            <div>\n              Agendar\n              {/* <input type=\"checkbox\" onClick={(e) => setisScheduled(e.target.checked)} /> */}\n              {schedule ? (\n                <input\n                  type=\"datetime-local\"\n                  className={schedule ? \"schedule-show\" : \"schedule\"}\n                  onChange={(e) => setSchedule(e.target.value)}\n                />\n              ) : null}\n              Slide\n              <input\n                type=\"checkbox\"\n                onClick={(e) => setSlide(e.target.checked)}\n                defaultChecked={slide ? true : null}\n              />\n              Meio\n              <input\n                type=\"checkbox\"\n                onClick={(e) => setMiddle(e.target.checked)}\n                defaultChecked={middle ? true : null}\n              />\n              Gameplay\n              <input\n                type=\"checkbox\"\n                onClick={(e) => setGameplay(e.target.checked)}\n                defaultChecked={gameplay ? true : null}\n              />\n              midSection\n              <input\n                type=\"checkbox\"\n                onClick={(e) => setMidSection(e.target.checked)}\n                defaultChecked={midSection ? true : null}\n              />\n            </div>\n            <NewCategory />\n            <select value={category} onChange={(e) => setCategory(e.target.value)}>\n              <option>Escolha uma Categoria</option>\n              {categories &&\n                categories.getAllCategories.map((cat, i) => (\n                  <option key={i}>{cat.name.toUpperCase()}</option>\n                ))}\n            </select>\n            <img src={`/${thumb}`} alt={thumb} />\n            <button type=\"button\" onClick={() => setModalShow(true)}>\n              Mudar Imagem\n            </button>\n            <Modal\n              open={modalShow}\n              onClose={() => setModalShow(false)}\n              aria-labelledby=\"simple-modal-title\"\n              aria-describedby=\"simple-modal-description\"\n            >\n              {\n                <ImagesWIndow\n                  show={modalShow}\n                  onHide={() => setModalShow(false)}\n                  setThumb={setThumb}\n                  setModalShow={setModalShow}\n                />\n              }\n            </Modal>\n          </div>\n          <div className=\"updateContent-form\">\n            <SunEditor\n              setContents={content}\n              ref={editor}\n              lang=\"pt_br\"\n              width=\"92%\"\n              height=\"400\"\n              name=\"my-editor\"\n              setOptions={{\n                mode: \"classic\",\n                katex: \"window.katex\",\n                imageWidth: \"(auto)\",\n                imageHeight: \"(auto)\",\n                // imageUploadUrl: `${base_url}/ckimage`,\n                imageAccept: \"*\",\n                // imageGalleryUrl: `${base_url}/images`,\n                imageFileInput: true,\n                videoFileInput: false,\n                tabDisable: false,\n                buttonList: [\n                  [\n                    \"undo\",\n                    \"redo\",\n                    \"font\",\n                    \"fontSize\",\n                    \"formatBlock\",\n                    \"paragraphStyle\",\n                    \"blockquote\",\n                    \"bold\",\n                    \"underline\",\n                    \"italic\",\n                    \"strike\",\n                    \"subscript\",\n                    \"superscript\",\n                    \"fontColor\",\n                    \"hiliteColor\",\n                    \"textStyle\",\n                    \"removeFormat\",\n                    \"outdent\",\n                    \"indent\",\n                    \"align\",\n                    \"horizontalRule\",\n                    \"list\",\n                    \"lineHeight\",\n                    \"table\",\n                    \"link\",\n                    \"image\",\n                    \"video\",\n                    \"audio\",\n                    \"math\",\n                    \"imageGallery\",\n                    \"fullScreen\",\n                    \"showBlocks\",\n                    \"codeView\",\n                    \"preview\",\n                    \"print\",\n                    \"save\",\n                    \"template\",\n                  ],\n                ],\n              }}\n              onChange={dataForm}\n              onImageUploadBefore={(files) => {\n                let nameImage = files[0].name;\n                // setFile(files[0]);\n                editor.current.editor.insertHTML(`<img src=\"/${nameImage}\">`);\n                return true;\n              }}\n            />\n          </div>\n        </div>\n      </Admin>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}