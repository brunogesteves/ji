{"ast":null,"code":"var _jsxFileName = \"/home/bruno/trabalho/ji/src/Components/FileDrop/FileDrop.js\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\"; // import \"react-dropzone-uploader/dist/styles.css\";\n\nimport \"./FileDrop.css\";\nimport { FILE_UPLOAD } from \"../../Graphql/Mutations\";\nimport { useMutation } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function FileDrop(props) {\n  // const [file, setFile] = useState(\"\");\n  // const [fileName, setFileName] = useState(\"\");\n  // const [uploadedFile, setUploadedFile] = useState({});\n  // const [response, setResponse] = useState(\"\");\n  // const [uploadPercentage, setUploadPercentage] = useState();\n  // function onChange(e) {\n  //   setFile(e.target.files[0]);\n  //   setFileName(e.target.files[0].name);\n  // }\n  // const [uploadImage, { data: fileUploadData }] = useMutation(UPLOAD_IMAGE, {\n  //   onCompleted: (data) => {\n  //     console.log(data);\n  //     if (data.fileUpload?.success) {\n  //       alert(data.fileUpload?.message);\n  //       setResponse(data.fileUpload?.message);\n  //     }\n  //   },\n  // });\n  // async function uploadFile() {\n  //   if (!file) {\n  //     return;\n  //   }\n  //   // let data = {\n  //   //   file:e.target.files[0],\n  //   // }\n  //   uploadImage({\n  //     variables: file,\n  //   });\n  // }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"mb-3\",\n      children: [response ? response : null, /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control\",\n        type: \"file\",\n        id: \"formFile\",\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        htmlFor: \"formFile\",\n        children: fileName ? fileName : \"Selecione um arquivo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Adicionar\",\n        class: \"btn btn-primary btn-block mt-4 col-12\",\n        onClick: uploadFile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"progress\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"progress-bar\",\n        style: {\n          width: `${uploadPercentage}%`\n        },\n        role: \"progressbar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), uploadedFile ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6 m-auto \",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-center\",\n          children: uploadedFile.fileName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          style: {\n            width: \"100%\"\n          },\n          src: uploadedFile.filePath,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true);\n}\n_c = FileDrop;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileDrop\");","map":{"version":3,"sources":["/home/bruno/trabalho/ji/src/Components/FileDrop/FileDrop.js"],"names":["React","useState","axios","FILE_UPLOAD","useMutation","FileDrop","props","response","onChange","fileName","uploadFile","width","uploadPercentage","uploadedFile","filePath"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAO,gBAAP;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,WAAT,QAA4B,gBAA5B;;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACtC;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,sBACE;AAAA,4BACE;AAAK,MAAA,KAAK,EAAC,MAAX;AAAA,iBACGC,QAAQ,GAAGA,QAAH,GAAc,IADzB,eAEE;AAAO,QAAA,SAAS,EAAC,cAAjB;AAAgC,QAAA,IAAI,EAAC,MAArC;AAA4C,QAAA,EAAE,EAAC,UAA/C;AAA0D,QAAA,QAAQ,EAAEC;AAApE;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAO,QAAA,SAAS,EAAC,YAAjB;AAA8B,QAAA,OAAO,EAAC,UAAtC;AAAA,kBACGC,QAAQ,GAAGA,QAAH,GAAc;AADzB;AAAA;AAAA;AAAA;AAAA,cAHF,eAME;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,KAAK,EAAC,WAFR;AAGE,QAAA,KAAK,EAAC,uCAHR;AAIE,QAAA,OAAO,EAAEC;AAJX;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAcE;AAAK,MAAA,KAAK,EAAC,UAAX;AAAA,6BACE;AACE,QAAA,KAAK,EAAC,cADR;AAEE,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAG,GAAEC,gBAAiB;AAA7B,SAFT;AAGE,QAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAdF,EAqBGC,YAAY,gBACX;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,aAAd;AAAA,oBAA6BA,YAAY,CAACJ;AAA1C;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,KAAK,EAAE;AAAEE,YAAAA,KAAK,EAAE;AAAT,WAAZ;AAA+B,UAAA,GAAG,EAAEE,YAAY,CAACC,QAAjD;AAA2D,UAAA,GAAG,EAAC;AAA/D;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADW,GAOT,IA5BN;AAAA,kBADF;AAgCD;KAnEuBT,Q","sourcesContent":["import React, { useState } from \"react\";\n\nimport axios from \"axios\";\n// import \"react-dropzone-uploader/dist/styles.css\";\nimport \"./FileDrop.css\";\nimport { FILE_UPLOAD } from \"../../Graphql/Mutations\";\nimport { useMutation } from \"@apollo/client\";\n\nexport default function FileDrop(props) {\n  // const [file, setFile] = useState(\"\");\n  // const [fileName, setFileName] = useState(\"\");\n  // const [uploadedFile, setUploadedFile] = useState({});\n  // const [response, setResponse] = useState(\"\");\n  // const [uploadPercentage, setUploadPercentage] = useState();\n\n  // function onChange(e) {\n  //   setFile(e.target.files[0]);\n  //   setFileName(e.target.files[0].name);\n  // }\n\n  // const [uploadImage, { data: fileUploadData }] = useMutation(UPLOAD_IMAGE, {\n  //   onCompleted: (data) => {\n  //     console.log(data);\n  //     if (data.fileUpload?.success) {\n  //       alert(data.fileUpload?.message);\n  //       setResponse(data.fileUpload?.message);\n  //     }\n  //   },\n  // });\n\n  // async function uploadFile() {\n  //   if (!file) {\n  //     return;\n  //   }\n\n  //   // let data = {\n  //   //   file:e.target.files[0],\n  //   // }\n  //   uploadImage({\n  //     variables: file,\n  //   });\n  // }\n\n  return (\n    <>\n      <div class=\"mb-3\">\n        {response ? response : null}\n        <input className=\"form-control\" type=\"file\" id=\"formFile\" onChange={onChange} />\n        <label className=\"form-label\" htmlFor=\"formFile\">\n          {fileName ? fileName : \"Selecione um arquivo\"}\n        </label>\n        <input\n          type=\"submit\"\n          value=\"Adicionar\"\n          class=\"btn btn-primary btn-block mt-4 col-12\"\n          onClick={uploadFile}\n        />\n      </div>\n      <div class=\"progress\">\n        <div\n          class=\"progress-bar\"\n          style={{ width: `${uploadPercentage}%` }}\n          role=\"progressbar\"\n        ></div>\n      </div>\n      {uploadedFile ? (\n        <div className=\"row mt-5\">\n          <div className=\"col-md-6 m-auto \">\n            <h3 className=\"text-center\">{uploadedFile.fileName}</h3>\n            <img style={{ width: \"100%\" }} src={uploadedFile.filePath} alt=\"\" />\n          </div>\n        </div>\n      ) : null}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}