{"ast":null,"code":"var _jsxFileName = \"/home/bruno/trabalho/ji/frontend/src/Components/FileDrop/FileDrop.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"react-dropzone-uploader/dist/styles.css\";\nimport \"./FileDrop.css\";\nimport { base_url } from \"../../config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function FileDrop(props) {\n  _s();\n\n  const [file, setFile] = useState(\"\");\n  const [fileName, setFileName] = useState(\"\");\n  const [uploadedFile, setUploadedFile] = useState({});\n  const [message, setMessage] = useState(\"Aviso\");\n  const [uploadPercentage, setUploadPercentage] = useState(20);\n\n  function onChange(e) {\n    setFile(e.target.files[0]);\n    setFileName(e.target.files[0].name);\n  }\n\n  async function uploadFile(e) {\n    e.preventDefault();\n    const data = new FormData();\n    data.append(\"file\", file);\n\n    try {\n      const res = await axios.post(`${base_url}/upload`, data, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        },\n        onUploadProgress: progressEvent => {\n          setUploadPercentage(parseInt(Math.round(progressEvent.loaded * 100 / progressEvent.total)));\n          setTimeout(() => {\n            setUploadPercentage(0);\n          }, 10000);\n        }\n      });\n      const {\n        fileName,\n        filePath\n      } = res.data;\n      setUploadedFile({\n        fileName,\n        filePath\n      });\n      setMessage(\"foto adicionada\");\n    } catch (err) {\n      if (err.response.status === 500) {\n        setMessage(\"erro no servidor\");\n      } else {\n        setMessage(err.response.data.msg);\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"mb-3\",\n      children: [message ? message : null, /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control\",\n        type: \"file\",\n        id: \"formFile\",\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        htmlFor: \"formFile\",\n        children: fileName ? fileName : \"Selecione um arquivo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Adicionar\",\n        class: \"btn btn-primary btn-block mt-4 col-12\",\n        onClick: uploadFile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"progress\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"progress-bar\",\n        style: {\n          width: `${uploadPercentage}%`\n        },\n        role: \"progressbar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), uploadedFile ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6 m-auto \",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-center\",\n          children: uploadedFile.fileName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          style: {\n            width: \"100%\"\n          },\n          src: uploadedFile.filePath,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true);\n}\n\n_s(FileDrop, \"Tw0LomNmUSYZVyiU6gYFIiZDg6A=\");\n\n_c = FileDrop;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileDrop\");","map":{"version":3,"sources":["/home/bruno/trabalho/ji/frontend/src/Components/FileDrop/FileDrop.js"],"names":["React","useState","axios","base_url","FileDrop","props","file","setFile","fileName","setFileName","uploadedFile","setUploadedFile","message","setMessage","uploadPercentage","setUploadPercentage","onChange","e","target","files","name","uploadFile","preventDefault","data","FormData","append","res","post","headers","onUploadProgress","progressEvent","parseInt","Math","round","loaded","total","setTimeout","filePath","err","response","status","msg","width"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport axios from \"axios\";\nimport \"react-dropzone-uploader/dist/styles.css\";\nimport \"./FileDrop.css\";\nimport { base_url } from \"../../config\";\n\nexport default function FileDrop(props) {\n  const [file, setFile] = useState(\"\");\n  const [fileName, setFileName] = useState(\"\");\n  const [uploadedFile, setUploadedFile] = useState({});\n  const [message, setMessage] = useState(\"Aviso\");\n  const [uploadPercentage, setUploadPercentage] = useState(20);\n\n  function onChange(e) {\n    setFile(e.target.files[0]);\n    setFileName(e.target.files[0].name);\n  }\n\n  async function uploadFile(e) {\n    e.preventDefault();\n    const data = new FormData();\n    data.append(\"file\", file);\n    try {\n      const res = await axios.post(`${base_url}/upload`, data, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n        onUploadProgress: (progressEvent) => {\n          setUploadPercentage(\n            parseInt(\n              Math.round((progressEvent.loaded * 100) / progressEvent.total)\n            )\n          );\n          setTimeout(() => {\n            setUploadPercentage(0);\n          }, 10000);\n        },\n      });\n      const { fileName, filePath } = res.data;\n\n      setUploadedFile({ fileName, filePath });\n      setMessage(\"foto adicionada\");\n    } catch (err) {\n      if (err.response.status === 500) {\n        setMessage(\"erro no servidor\");\n      } else {\n        setMessage(err.response.data.msg);\n      }\n    }\n  }\n\n  return (\n    <>\n      <div class=\"mb-3\">\n        {message ? message : null}\n        <input\n          className=\"form-control\"\n          type=\"file\"\n          id=\"formFile\"\n          onChange={onChange}\n        />\n        <label className=\"form-label\" htmlFor=\"formFile\">\n          {fileName ? fileName : \"Selecione um arquivo\"}\n        </label>\n        <input\n          type=\"submit\"\n          value=\"Adicionar\"\n          class=\"btn btn-primary btn-block mt-4 col-12\"\n          onClick={uploadFile}\n        />\n      </div>\n      <div class=\"progress\">\n        <div\n          class=\"progress-bar\"\n          style={{ width: `${uploadPercentage}%` }}\n          role=\"progressbar\"\n        ></div>\n      </div>\n      {uploadedFile ? (\n        <div className=\"row mt-5\">\n          <div className=\"col-md-6 m-auto \">\n            <h3 className=\"text-center\">{uploadedFile.fileName}</h3>\n            <img style={{ width: \"100%\" }} src={uploadedFile.filePath} alt=\"\" />\n          </div>\n        </div>\n      ) : null}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}