{"ast":null,"code":"var _jsxFileName = \"/home/bruno/trabalho/ji/src/Pages/Admin/NewPost/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport slugify from \"react-slugify\"; // import { Redirect } from \"react-router-dom\";\n\nimport SunEditor from \"suneditor-react\";\nimport \"suneditor/dist/css/suneditor.min.css\"; // Import Sun Editor's CSS File\n// import axios from \"axios\";\n\nimport Modal from \"@mui/material/Modal\";\nimport Admin from \"../Admin\";\nimport ImagesWIndow from \"../../../Components/ImagesWIndow/ImagesWIndow\";\nimport NewCategory from \"../../../Components/NewCategory\";\nimport \"./NewPost.css\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { GET_ALL_CATEGORIES } from \"../../../Graphql/Queries\";\nimport { CREATE_POST } from \"../../../Graphql/Mutations\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UpdatePost(props) {\n  _s();\n\n  const [name, setName] = useState(\"te\");\n  const [content, setContent] = useState(\"te\");\n  const [category, setCategory] = useState(\"te\");\n  const [isscheduled] = useState(true);\n  const [schedule, setSchedule] = useState(\"\");\n  const [slide, setSlide] = useState(false);\n  const [middle, setMiddle] = useState(true);\n  const [gameplay, setGameplay] = useState(true);\n  const [midSection, setMidSection] = useState(false);\n  const [thumb, setThumb] = useState(\"foto.jpg\"); // const [file, setFile] = useState(\"\");\n\n  const [modalShow, setModalShow] = useState(false);\n  const editor = useRef(null);\n\n  function dataForm(data) {\n    setContent(data);\n  } // useEffect(() => {\n  //   let image = file.name;\n  //   const url = `${base_url}/upload/${image}`;\n  //   const data = new FormData();\n  //   data.append(\"file\", file);\n  //   const options = {\n  //     headers: {\n  //       \"Content-Type\": \"multipart/form-data\",\n  //     },\n  //   };\n  //   axios.post(url, data, options);\n  // }, [file]);\n\n\n  const {\n    data: categories\n  } = useQuery(GET_ALL_CATEGORIES);\n  const [createPost, {\n    data: isCreated\n  }] = useMutation(CREATE_POST); // useEffect(() => {\n  //   if (data) {\n  //     console.log(\"data: \");\n  //     setName(data.getAdminInfoPost[0].name);\n  //     setContent(data.getAdminInfoPost[0].content);\n  //     setCategory(data.getAdminInfoPost[0].category);\n  //     setSlide(data.getAdminInfoPost[0].slide);\n  //     setMiddle(data.getAdminInfoPost[0].middle);\n  //     setGameplay(data.getAdminInfoPost[0].gameplay);\n  //     setPublicPost(data.getAdminInfoPost[0].public);\n  //     setMidSection(data.getAdminInfoPost[0].midSection);\n  //     setThumb(data.getAdminInfoPost[0].thumb);\n  //   }\n  // }, [data]);\n\n  function create() {\n    createPost({\n      variables: {\n        name: name,\n        content: content,\n        category: category,\n        slug: slugify(name, {\n          delimiter: \"-\"\n        }),\n        scheduled: isscheduled,\n        schedule: schedule,\n        slide: slide,\n        middle: middle,\n        gameplay: gameplay,\n        publicPost: isscheduled,\n        midSection: midSection,\n        thumb: thumb\n      }\n    });\n  }\n\n  useEffect(() => {\n    if (isCreated) {\n      const newPostId = isCreated.createPost.id;\n\n      /*#__PURE__*/\n      _jsxDEV(Redirect, {\n        to: `/admin/updat epost/${newPostId}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 8\n      }, this);\n    }\n  }, [isCreated]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Admin, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"updateContent\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"updateContent-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: create,\n            children: \"Publicar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), \"Nome:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: e => setName(e.target.value),\n            value: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Agendar\", schedule ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"datetime-local\",\n              className: schedule ? \"schedule-show\" : \"schedule\",\n              onChange: e => setSchedule(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this) : null, \"Slide\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onClick: e => setSlide(e.target.checked),\n              defaultChecked: slide ? true : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this), \"Meio\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onClick: e => setMiddle(e.target.checked),\n              defaultChecked: middle ? true : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this), \"Gameplay\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onClick: e => setGameplay(e.target.checked),\n              defaultChecked: gameplay ? true : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this), \"midSection\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onClick: e => setMidSection(e.target.checked),\n              defaultChecked: midSection ? true : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NewCategory, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: category,\n            onChange: e => setCategory(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Escolha uma Categoria\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this), categories && categories.getAllCategories.map((cat, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n              children: cat.name.toUpperCase()\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `/${thumb}`,\n            alt: thumb\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setModalShow(true),\n            children: \"Mudar Imagem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Modal, {\n            open: modalShow,\n            onClose: () => setModalShow(false),\n            \"aria-labelledby\": \"simple-modal-title\",\n            \"aria-describedby\": \"simple-modal-description\",\n            children: /*#__PURE__*/_jsxDEV(ImagesWIndow, {\n              show: modalShow,\n              onHide: () => setModalShow(false),\n              setThumb: setThumb,\n              setModalShow: setModalShow\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"updateContent-form\",\n          children: /*#__PURE__*/_jsxDEV(SunEditor, {\n            setContents: content,\n            ref: editor,\n            lang: \"pt_br\",\n            width: \"92%\",\n            height: \"400\",\n            name: \"my-editor\",\n            setOptions: {\n              mode: \"classic\",\n              katex: \"window.katex\",\n              imageWidth: \"(auto)\",\n              imageHeight: \"(auto)\",\n              // imageUploadUrl: `${base_url}/ckimage`,\n              imageAccept: \"*\",\n              // imageGalleryUrl: `${base_url}/images`,\n              imageFileInput: true,\n              videoFileInput: false,\n              tabDisable: false,\n              buttonList: [[\"undo\", \"redo\", \"font\", \"fontSize\", \"formatBlock\", \"paragraphStyle\", \"blockquote\", \"bold\", \"underline\", \"italic\", \"strike\", \"subscript\", \"superscript\", \"fontColor\", \"hiliteColor\", \"textStyle\", \"removeFormat\", \"outdent\", \"indent\", \"align\", \"horizontalRule\", \"list\", \"lineHeight\", \"table\", \"link\", \"image\", \"video\", \"audio\", \"math\", \"imageGallery\", \"fullScreen\", \"showBlocks\", \"codeView\", \"preview\", \"print\", \"save\", \"template\"]]\n            },\n            onChange: dataForm,\n            onImageUploadBefore: files => {\n              let nameImage = files[0].name; // setFile(files[0]);\n\n              editor.current.editor.insertHTML(`<img src=\"/${nameImage}\">`);\n              return true;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UpdatePost, \"AWLxI1q5E4j/OTPYJZCOf1LKY/s=\", false, function () {\n  return [useQuery, useMutation];\n});\n\n_c = UpdatePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdatePost\");","map":{"version":3,"sources":["/home/bruno/trabalho/ji/src/Pages/Admin/NewPost/index.js"],"names":["React","useState","useEffect","useRef","slugify","SunEditor","Modal","Admin","ImagesWIndow","NewCategory","useQuery","useMutation","GET_ALL_CATEGORIES","CREATE_POST","UpdatePost","props","name","setName","content","setContent","category","setCategory","isscheduled","schedule","setSchedule","slide","setSlide","middle","setMiddle","gameplay","setGameplay","midSection","setMidSection","thumb","setThumb","modalShow","setModalShow","editor","dataForm","data","categories","createPost","isCreated","create","variables","slug","delimiter","scheduled","publicPost","newPostId","id","e","target","value","checked","getAllCategories","map","cat","i","toUpperCase","mode","katex","imageWidth","imageHeight","imageAccept","imageFileInput","videoFileInput","tabDisable","buttonList","files","nameImage","current","insertHTML"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport slugify from \"react-slugify\";\n// import { Redirect } from \"react-router-dom\";\nimport SunEditor from \"suneditor-react\";\n\nimport \"suneditor/dist/css/suneditor.min.css\"; // Import Sun Editor's CSS File\n// import axios from \"axios\";\nimport Modal from \"@mui/material/Modal\";\n\nimport Admin from \"../Admin\";\nimport ImagesWIndow from \"../../../Components/ImagesWIndow/ImagesWIndow\";\nimport NewCategory from \"../../../Components/NewCategory\";\n\nimport \"./NewPost.css\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { GET_ALL_CATEGORIES } from \"../../../Graphql/Queries\";\nimport { CREATE_POST } from \"../../../Graphql/Mutations\";\n\nexport default function UpdatePost(props) {\n  const [name, setName] = useState(\"te\");\n  const [content, setContent] = useState(\"te\");\n  const [category, setCategory] = useState(\"te\");\n  const [isscheduled] = useState(true);\n  const [schedule, setSchedule] = useState(\"\");\n  const [slide, setSlide] = useState(false);\n  const [middle, setMiddle] = useState(true);\n  const [gameplay, setGameplay] = useState(true);\n  const [midSection, setMidSection] = useState(false);\n  const [thumb, setThumb] = useState(\"foto.jpg\");\n  // const [file, setFile] = useState(\"\");\n  const [modalShow, setModalShow] = useState(false);\n  const editor = useRef(null);\n\n  function dataForm(data) {\n    setContent(data);\n  }\n\n  // useEffect(() => {\n  //   let image = file.name;\n  //   const url = `${base_url}/upload/${image}`;\n  //   const data = new FormData();\n  //   data.append(\"file\", file);\n  //   const options = {\n  //     headers: {\n  //       \"Content-Type\": \"multipart/form-data\",\n  //     },\n  //   };\n  //   axios.post(url, data, options);\n  // }, [file]);\n\n  const { data: categories } = useQuery(GET_ALL_CATEGORIES);\n\n  const [createPost, { data: isCreated }] = useMutation(CREATE_POST);\n\n  // useEffect(() => {\n  //   if (data) {\n  //     console.log(\"data: \");\n  //     setName(data.getAdminInfoPost[0].name);\n  //     setContent(data.getAdminInfoPost[0].content);\n  //     setCategory(data.getAdminInfoPost[0].category);\n  //     setSlide(data.getAdminInfoPost[0].slide);\n  //     setMiddle(data.getAdminInfoPost[0].middle);\n  //     setGameplay(data.getAdminInfoPost[0].gameplay);\n  //     setPublicPost(data.getAdminInfoPost[0].public);\n  //     setMidSection(data.getAdminInfoPost[0].midSection);\n  //     setThumb(data.getAdminInfoPost[0].thumb);\n  //   }\n  // }, [data]);\n\n  function create() {\n    createPost({\n      variables: {\n        name: name,\n        content: content,\n        category: category,\n        slug: slugify(name, { delimiter: \"-\" }),\n        scheduled: isscheduled,\n        schedule: schedule,\n        slide: slide,\n        middle: middle,\n        gameplay: gameplay,\n        publicPost: isscheduled,\n        midSection: midSection,\n        thumb: thumb,\n      },\n    });\n  }\n  \n  useEffect(() => {\n    if (isCreated) {\n      const newPostId = isCreated.createPost.id;\n      \n       <Redirect to={`/admin/updat epost/${newPostId}`} />;\n    }\n  }, [isCreated]);\n  return (\n    <div>\n      <Admin>\n        <div className=\"updateContent\">\n          <div className=\"updateContent-field\">\n            <button onClick={create}>Publicar</button>\n            Nome:\n            <input type=\"text\" onChange={(e) => setName(e.target.value)} value={name} />\n            <div>\n              Agendar\n              {/* <input type=\"checkbox\" onClick={(e) => setisScheduled(e.target.checked)} /> */}\n              {schedule ? (\n                <input\n                  type=\"datetime-local\"\n                  className={schedule ? \"schedule-show\" : \"schedule\"}\n                  onChange={(e) => setSchedule(e.target.value)}\n                />\n              ) : null}\n              Slide\n              <input\n                type=\"checkbox\"\n                onClick={(e) => setSlide(e.target.checked)}\n                defaultChecked={slide ? true : null}\n              />\n              Meio\n              <input\n                type=\"checkbox\"\n                onClick={(e) => setMiddle(e.target.checked)}\n                defaultChecked={middle ? true : null}\n              />\n              Gameplay\n              <input\n                type=\"checkbox\"\n                onClick={(e) => setGameplay(e.target.checked)}\n                defaultChecked={gameplay ? true : null}\n              />\n              midSection\n              <input\n                type=\"checkbox\"\n                onClick={(e) => setMidSection(e.target.checked)}\n                defaultChecked={midSection ? true : null}\n              />\n            </div>\n            <NewCategory />\n            <select value={category} onChange={(e) => setCategory(e.target.value)}>\n              <option>Escolha uma Categoria</option>\n              {categories &&\n                categories.getAllCategories.map((cat, i) => (\n                  <option key={i}>{cat.name.toUpperCase()}</option>\n                ))}\n            </select>\n            <img src={`/${thumb}`} alt={thumb} />\n            <button type=\"button\" onClick={() => setModalShow(true)}>\n              Mudar Imagem\n            </button>\n            <Modal\n              open={modalShow}\n              onClose={() => setModalShow(false)}\n              aria-labelledby=\"simple-modal-title\"\n              aria-describedby=\"simple-modal-description\"\n            >\n              {\n                <ImagesWIndow\n                  show={modalShow}\n                  onHide={() => setModalShow(false)}\n                  setThumb={setThumb}\n                  setModalShow={setModalShow}\n                />\n              }\n            </Modal>\n          </div>\n          <div className=\"updateContent-form\">\n            <SunEditor\n              setContents={content}\n              ref={editor}\n              lang=\"pt_br\"\n              width=\"92%\"\n              height=\"400\"\n              name=\"my-editor\"\n              setOptions={{\n                mode: \"classic\",\n                katex: \"window.katex\",\n                imageWidth: \"(auto)\",\n                imageHeight: \"(auto)\",\n                // imageUploadUrl: `${base_url}/ckimage`,\n                imageAccept: \"*\",\n                // imageGalleryUrl: `${base_url}/images`,\n                imageFileInput: true,\n                videoFileInput: false,\n                tabDisable: false,\n                buttonList: [\n                  [\n                    \"undo\",\n                    \"redo\",\n                    \"font\",\n                    \"fontSize\",\n                    \"formatBlock\",\n                    \"paragraphStyle\",\n                    \"blockquote\",\n                    \"bold\",\n                    \"underline\",\n                    \"italic\",\n                    \"strike\",\n                    \"subscript\",\n                    \"superscript\",\n                    \"fontColor\",\n                    \"hiliteColor\",\n                    \"textStyle\",\n                    \"removeFormat\",\n                    \"outdent\",\n                    \"indent\",\n                    \"align\",\n                    \"horizontalRule\",\n                    \"list\",\n                    \"lineHeight\",\n                    \"table\",\n                    \"link\",\n                    \"image\",\n                    \"video\",\n                    \"audio\",\n                    \"math\",\n                    \"imageGallery\",\n                    \"fullScreen\",\n                    \"showBlocks\",\n                    \"codeView\",\n                    \"preview\",\n                    \"print\",\n                    \"save\",\n                    \"template\",\n                  ],\n                ],\n              }}\n              onChange={dataForm}\n              onImageUploadBefore={(files) => {\n                let nameImage = files[0].name;\n                // setFile(files[0]);\n                editor.current.editor.insertHTML(`<img src=\"/${nameImage}\">`);\n                return true;\n              }}\n            />\n          </div>\n        </div>\n      </Admin>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}