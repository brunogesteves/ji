{"ast":null,"code":"var _jsxFileName = \"/home/bruno/trabalho/ji/frontend/src/Pages/Admin/UpdatePost/UpdatePost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport slugify from \"react-slugify\";\nimport { useParams } from \"react-router-dom\";\nimport SunEditor from \"suneditor-react\";\nimport \"suneditor/dist/css/suneditor.min.css\"; // Import Sun Editor's CSS File\n\nimport axios from \"axios\";\nimport { Button } from \"react-bootstrap\";\nimport Modal from \"@material-ui/core/Modal\";\nimport { base_url } from \"../../../config\";\nimport Admin from \"../Admin\";\nimport ImagesWIndow from \"../../../Components/ImagesWIndow/ImagesWIndow\";\nimport NewCategory from \"../../../Components/NewCategory/NewCategory\";\nimport UpdateService from \"../../../Services/UpdateService\";\nimport \"./UpdatePost.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UpdatePost(props) {\n  _s();\n\n  const nameParams = useParams();\n  let idNumber = nameParams.id;\n  const [namePost, setNamePost] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [thumb, setThumb] = useState(\"\");\n  const [categories, setCategories] = useState([]);\n  const [word, setWord] = useState(\"\");\n  const [modalShow, setModalShow] = useState(false);\n  const [category, setCategory] = useState();\n  const [isAdded, setIsAdded] = useState(false);\n  const [datetime, setDatetime] = useState(\"\");\n  const [id, setId] = useState(\"\");\n  const [schedule, setSchedule] = useState(false);\n  const [slide, setSlide] = useState(false);\n  const [gameplay, setGameplay] = useState(false);\n  const [gallery, setGallery] = useState(false);\n  const [middle, setMiddle] = useState(false);\n  const [publicpost] = useState(1);\n  const editor = useRef(null);\n  useEffect(() => {\n    UpdateService.getInfo(idNumber).then(res => {\n      setNamePost(res[0].name);\n      setMainimage(res[0].images);\n      setContent(res[0].content);\n      setId(res[0].id);\n      setCurrentCategory(res[0].category);\n      setNewPost(res[0].newpost);\n      setPublicPost(res[0].publicpost);\n    }); // eslint-disable-next-line\n  }, []);\n\n  function dataForm(data) {\n    setContent(data);\n  }\n\n  useEffect(() => {\n    UpdateService.category().then(res => {\n      setCategories(res);\n    });\n  }, [word]);\n\n  function update() {\n    namePost && content ? UpdateService.update(id, content, namePost, selectedCategory, newPost, publicPost, slugify(namePost, {\n      delimiter: \"-\"\n    })).then(res => {\n      setWarning(res.msg);\n      setInterval(() => {\n        setWarning(\"\");\n      }, 5000);\n    }).catch(error => {\n      console.log(\"erro\");\n    }) : alert(\"HÃ¡ campos vazios\");\n  }\n\n  useEffect(() => {\n    let image = file.name;\n    const url = `${base_url}/upload/${image}`;\n    const data = new FormData();\n    data.append(\"file\", file);\n    const options = {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    };\n    axios.post(url, data, options);\n  }, [file]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Admin, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"updateContent\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"updateContent-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"update-warning\",\n            children: warning\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: update,\n            children: \"Atualizar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), \"Nome:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: e => setNamePost(e.target.value),\n            value: namePost\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Publico\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onClick: e => setPublicPost(e.target.checked),\n              defaultChecked: publicPost ? true : false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Novidade\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onClick: e => setNewPost(e.target.checked),\n              defaultChecked: newPost ? true : false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NewCategory, {\n            addCategory: setWord\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: currentCategory,\n            onClick: e => setSelectedCategory(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Escolha uma Categoria\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this), categories.map((res, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: res.name,\n              children: res.name\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `/${mainimage}`,\n            alt: mainimage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: () => setModalShow(true),\n            children: \"Adicionar Imagem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Modal, {\n            open: modalShow,\n            onClose: () => setModalShow(false),\n            \"aria-labelledby\": \"simple-modal-title\",\n            \"aria-describedby\": \"simple-modal-description\",\n            children: /*#__PURE__*/_jsxDEV(ImagesWIndow, {\n              show: modalShow,\n              onHide: () => setModalShow(false),\n              setMainimage: setMainimage,\n              setModalShow: setModalShow\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"updateContent-form\",\n          children: /*#__PURE__*/_jsxDEV(SunEditor, {\n            setContents: content,\n            ref: editor,\n            lang: \"pt_br\",\n            width: \"92%\",\n            height: \"400\",\n            name: \"my-editor\",\n            setOptions: {\n              mode: \"classic\",\n              katex: \"window.katex\",\n              imageWidth: \"(auto)\",\n              imageHeight: \"(auto)\",\n              // imageUploadUrl: `${base_url}/ckimage`,\n              imageAccept: \"*\",\n              imageGalleryUrl: `${base_url}/images`,\n              imageFileInput: true,\n              videoFileInput: false,\n              tabDisable: false,\n              buttonList: [[\"undo\", \"redo\", \"font\", \"fontSize\", \"formatBlock\", \"paragraphStyle\", \"blockquote\", \"bold\", \"underline\", \"italic\", \"strike\", \"subscript\", \"superscript\", \"fontColor\", \"hiliteColor\", \"textStyle\", \"removeFormat\", \"outdent\", \"indent\", \"align\", \"horizontalRule\", \"list\", \"lineHeight\", \"table\", \"link\", \"image\", \"video\", \"audio\", \"math\", \"imageGallery\", \"fullScreen\", \"showBlocks\", \"codeView\", \"preview\", \"print\", \"save\", \"template\"]]\n            },\n            onChange: dataForm,\n            onImageUploadBefore: files => {\n              let nameImage = files[0].name;\n              setFile(files[0]);\n              editor.current.editor.insertHTML(`<img src=\"/${nameImage}\">`);\n              return true;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UpdatePost, \"b0Jfmy6cefy+0aTIxRQ2I+pOhUM=\", false, function () {\n  return [useParams];\n});\n\n_c = UpdatePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdatePost\");","map":{"version":3,"sources":["/home/bruno/trabalho/ji/frontend/src/Pages/Admin/UpdatePost/UpdatePost.js"],"names":["React","useState","useEffect","useRef","slugify","useParams","SunEditor","axios","Button","Modal","base_url","Admin","ImagesWIndow","NewCategory","UpdateService","UpdatePost","props","nameParams","idNumber","id","namePost","setNamePost","content","setContent","thumb","setThumb","categories","setCategories","word","setWord","modalShow","setModalShow","category","setCategory","isAdded","setIsAdded","datetime","setDatetime","setId","schedule","setSchedule","slide","setSlide","gameplay","setGameplay","gallery","setGallery","middle","setMiddle","publicpost","editor","getInfo","then","res","name","setMainimage","images","setCurrentCategory","setNewPost","newpost","setPublicPost","dataForm","data","update","selectedCategory","newPost","publicPost","delimiter","setWarning","msg","setInterval","catch","error","console","log","alert","image","file","url","FormData","append","options","headers","post","warning","e","target","value","checked","currentCategory","setSelectedCategory","map","i","mainimage","mode","katex","imageWidth","imageHeight","imageAccept","imageGalleryUrl","imageFileInput","videoFileInput","tabDisable","buttonList","files","nameImage","setFile","current","insertHTML"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport slugify from \"react-slugify\";\nimport { useParams } from \"react-router-dom\";\nimport SunEditor from \"suneditor-react\";\n\nimport \"suneditor/dist/css/suneditor.min.css\"; // Import Sun Editor's CSS File\nimport axios from \"axios\";\nimport { Button } from \"react-bootstrap\";\nimport Modal from \"@material-ui/core/Modal\";\nimport { base_url } from \"../../../config\";\n\nimport Admin from \"../Admin\";\nimport ImagesWIndow from \"../../../Components/ImagesWIndow/ImagesWIndow\";\nimport NewCategory from \"../../../Components/NewCategory/NewCategory\";\nimport UpdateService from \"../../../Services/UpdateService\";\n\nimport \"./UpdatePost.css\";\n\nexport default function UpdatePost(props) {\n  const nameParams = useParams();\n  let idNumber = nameParams.id;\n\n  const [namePost, setNamePost] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [thumb, setThumb] = useState(\"\");\n  const [categories, setCategories] = useState([]);\n  const [word, setWord] = useState(\"\");\n  const [modalShow, setModalShow] = useState(false);\n  const [category, setCategory] = useState();\n  const [isAdded, setIsAdded] = useState(false);\n  const [datetime, setDatetime] = useState(\"\");\n  const [id, setId] = useState(\"\");\n  const [schedule, setSchedule] = useState(false);\n  const [slide, setSlide] = useState(false);\n  const [gameplay, setGameplay] = useState(false);\n  const [gallery, setGallery] = useState(false);\n  const [middle, setMiddle] = useState(false);\n  const [publicpost] = useState(1);\n\n  const editor = useRef(null);\n\n  useEffect(() => {\n    UpdateService.getInfo(idNumber).then((res) => {\n      setNamePost(res[0].name);\n      setMainimage(res[0].images);\n      setContent(res[0].content);\n      setId(res[0].id);\n      setCurrentCategory(res[0].category);\n      setNewPost(res[0].newpost);\n      setPublicPost(res[0].publicpost);\n    });\n    // eslint-disable-next-line\n  }, []);\n\n  function dataForm(data) {\n    setContent(data);\n  }\n\n  useEffect(() => {\n    UpdateService.category().then((res) => {\n      setCategories(res);\n    });\n  }, [word]);\n\n  function update() {\n    namePost && content\n      ? UpdateService.update(\n          id,\n          content,\n          namePost,\n          selectedCategory,\n          newPost,\n          publicPost,\n          slugify(namePost, { delimiter: \"-\" })\n        )\n          .then((res) => {\n            setWarning(res.msg);\n            setInterval(() => {\n              setWarning(\"\");\n            }, 5000);\n          })\n          .catch((error) => {\n            console.log(\"erro\");\n          })\n      : alert(\"HÃ¡ campos vazios\");\n  }\n\n  useEffect(() => {\n    let image = file.name;\n    const url = `${base_url}/upload/${image}`;\n    const data = new FormData();\n    data.append(\"file\", file);\n    const options = {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n    };\n    axios.post(url, data, options);\n  }, [file]);\n\n  return (\n    <div>\n      <Admin>\n        <div className=\"updateContent\">\n          <div className=\"updateContent-field\">\n            <p className=\"update-warning\">{warning}</p>\n            <button onClick={update}>Atualizar</button>\n            Nome:\n            <input\n              type=\"text\"\n              onChange={(e) => setNamePost(e.target.value)}\n              value={namePost}\n            />\n            <div>\n              Publico\n              <input\n                type=\"checkbox\"\n                onClick={(e) => setPublicPost(e.target.checked)}\n                defaultChecked={publicPost ? true : false}\n              />\n            </div>\n            <div>\n              Novidade\n              <input\n                type=\"checkbox\"\n                onClick={(e) => setNewPost(e.target.checked)}\n                defaultChecked={newPost ? true : false}\n              />\n            </div>\n            <NewCategory addCategory={setWord} />\n            <select\n              value={currentCategory}\n              onClick={(e) => setSelectedCategory(e.target.value)}\n            >\n              <option>Escolha uma Categoria</option>\n              {categories.map((res, i) => (\n                <option key={i} value={res.name}>\n                  {res.name}\n                </option>\n              ))}\n            </select>\n            <img src={`/${mainimage}`} alt={mainimage} />\n            <Button variant=\"primary\" onClick={() => setModalShow(true)}>\n              Adicionar Imagem\n            </Button>\n            <Modal\n              open={modalShow}\n              onClose={() => setModalShow(false)}\n              aria-labelledby=\"simple-modal-title\"\n              aria-describedby=\"simple-modal-description\"\n            >\n              {\n                <ImagesWIndow\n                  show={modalShow}\n                  onHide={() => setModalShow(false)}\n                  setMainimage={setMainimage}\n                  setModalShow={setModalShow}\n                />\n              }\n            </Modal>\n          </div>\n          <div className=\"updateContent-form\">\n            <SunEditor\n              setContents={content}\n              ref={editor}\n              lang=\"pt_br\"\n              width=\"92%\"\n              height=\"400\"\n              name=\"my-editor\"\n              setOptions={{\n                mode: \"classic\",\n                katex: \"window.katex\",\n                imageWidth: \"(auto)\",\n                imageHeight: \"(auto)\",\n                // imageUploadUrl: `${base_url}/ckimage`,\n                imageAccept: \"*\",\n                imageGalleryUrl: `${base_url}/images`,\n                imageFileInput: true,\n                videoFileInput: false,\n                tabDisable: false,\n                buttonList: [\n                  [\n                    \"undo\",\n                    \"redo\",\n                    \"font\",\n                    \"fontSize\",\n                    \"formatBlock\",\n                    \"paragraphStyle\",\n                    \"blockquote\",\n                    \"bold\",\n                    \"underline\",\n                    \"italic\",\n                    \"strike\",\n                    \"subscript\",\n                    \"superscript\",\n                    \"fontColor\",\n                    \"hiliteColor\",\n                    \"textStyle\",\n                    \"removeFormat\",\n                    \"outdent\",\n                    \"indent\",\n                    \"align\",\n                    \"horizontalRule\",\n                    \"list\",\n                    \"lineHeight\",\n                    \"table\",\n                    \"link\",\n                    \"image\",\n                    \"video\",\n                    \"audio\",\n                    \"math\",\n                    \"imageGallery\",\n                    \"fullScreen\",\n                    \"showBlocks\",\n                    \"codeView\",\n                    \"preview\",\n                    \"print\",\n                    \"save\",\n                    \"template\",\n                  ],\n                ],\n              }}\n              onChange={dataForm}\n              onImageUploadBefore={(files) => {\n                let nameImage = files[0].name;\n                setFile(files[0]);\n                editor.current.editor.insertHTML(`<img src=\"/${nameImage}\">`);\n                return true;\n              }}\n            />\n          </div>\n        </div>\n      </Admin>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}