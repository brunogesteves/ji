{"ast":null,"code":"var _jsxFileName = \"/home/bruno/trabalho/ji/src/Pages/Admin/UpdatePost/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport slugify from \"react-slugify\";\nimport { useParams } from \"react-router-dom\";\nimport SunEditor from \"suneditor-react\";\nimport \"suneditor/dist/css/suneditor.min.css\"; // Import Sun Editor's CSS File\n\nimport axios from \"axios\";\nimport Modal from \"@mui/material/Modal\";\nimport Admin from \"../Admin\";\nimport ImagesWIndow from \"../../../Components/ImagesWIndow/ImagesWIndow\";\nimport NewCategory from \"../../../Components/NewCategory\";\nimport \"./UpdatePost.css\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { GET_ADMIN_POST_INFO, GET_ALL_CATEGORIES } from \"../../../Graphql/Queries\";\nimport { UPDATE_ADMIN_POST_INFO } from \"../../../Graphql/Mutations\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UpdatePost(props) {\n  _s();\n\n  const nameParams = useParams();\n  let idNumber = nameParams.id;\n  const [infoPost, setInfoPost] = useState({\n    name: \"\",\n    content: \"\",\n    category: \"\",\n    slide: false,\n    middle: false,\n    gameplay: false,\n    public: false,\n    midSection: false\n  });\n  const [thumb, setThumb] = useState(\"\");\n  const [file, setFile] = useState(\"\");\n  const [modalShow, setModalShow] = useState(false);\n  const [reloadPage, setReloadPage] = useState(false);\n  const editor = useRef(null);\n\n  function dataForm(data) {\n    setInfoPost({ ...infoPost,\n      content: data\n    });\n  } // useEffect(() => {\n  //   let image = file.name;\n  //   const url = `${base_url}/upload/${image}`;\n  //   const data = new FormData();\n  //   data.append(\"file\", file);\n  //   const options = {\n  //     headers: {\n  //       \"Content-Type\": \"multipart/form-data\",\n  //     },\n  //   };\n  //   axios.post(url, data, options);\n  // }, [file]);\n\n\n  const {\n    data,\n    refetch\n  } = useQuery(GET_ADMIN_POST_INFO, {\n    variables: {\n      id: idNumber\n    }\n  });\n  const {\n    data: categories\n  } = useQuery(GET_ALL_CATEGORIES);\n  const [updatePost, {\n    error,\n    data: isUpdated\n  }] = useMutation(UPDATE_ADMIN_POST_INFO);\n  useEffect(() => {\n    if (data) {\n      setInfoPost({\n        name: data.getAdminInfoPost[0].name,\n        content: data.getAdminInfoPost[0].content,\n        category: data.getAdminInfoPost[0].category,\n        slide: data.getAdminInfoPost[0].slide,\n        middle: data.getAdminInfoPost[0].middle,\n        gameplay: data.getAdminInfoPost[0].gameplay,\n        public: data.getAdminInfoPost[0].public,\n        midSection: data.getAdminInfoPost[0].midSection\n      });\n      setThumb(data.getAdminInfoPost[0].thumb);\n    }\n  }, [data]); // useEffect(() => {\n  // if (isUpdated && isUpdated.updatePost.successfull) {\n  // refetch();\n  // }\n  // }, [isUpdated]);\n\n  function reload() {\n    console.log(\"name: \", infoPost.name, \"content: \", infoPost.content, \"category: \", infoPost.category, \"slide: \", infoPost.slide, \"middle: \", infoPost.middle, \"gameplay: \", infoPost.gameplay, \"public: \", infoPost.public, \"midSection: \", infoPost.midSection, \"thumb: \", thumb);\n    updatePost({\n      variables: {\n        id: idNumber,\n        name: infoPost.name,\n        content: infoPost.content,\n        category: infoPost.category,\n        slug: infoPost.name,\n        slide: infoPost.slide,\n        middle: infoPost.middle,\n        gameplay: infoPost.gameplay,\n        publicPost: infoPost.public,\n        midSection: infoPost.midSection,\n        thumb: thumb\n      }\n    }); // setReloadPage(true);\n  } // console.log(\"conteudo: \", infoPost);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Admin, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"updateContent\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"updateContent-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"update-warning\",\n            children: [isUpdated && isUpdated.updatePost.successfull ? \"\" : \"Atualizado\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: reload,\n            children: \"Atualizar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), \"Nome:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: e => setInfoPost({ ...infoPost,\n              name: e.target.value\n            }),\n            value: infoPost.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Publico\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onClick: e => setInfoPost({ ...infoPost,\n                public: e.target.checked\n              }),\n              defaultChecked: infoPost.public ? true : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Slide\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onClick: e => setInfoPost({ ...infoPost,\n                slide: e.target.checked\n              }),\n              defaultChecked: infoPost.slide ? true : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this), \"Meio\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onClick: e => setInfoPost({ ...infoPost,\n                middle: e.target.checked\n              }),\n              defaultChecked: infoPost.middle ? true : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this), \"Gameplay\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onClick: e => setInfoPost({ ...infoPost,\n                gameplay: e.target.checked\n              }),\n              defaultChecked: infoPost.gameplay ? true : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this), \"midSection\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onClick: e => setInfoPost({ ...infoPost,\n                midSection: e.target.checked\n              }),\n              defaultChecked: infoPost.gameplay ? true : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NewCategory, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: infoPost.category,\n            onChange: e => setInfoPost({ ...infoPost,\n              category: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Escolha uma Categoria\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this), categories && categories.getAllCategories.map((cat, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n              children: cat.name.toUpperCase()\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `/${thumb}`,\n            alt: thumb\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setModalShow(true),\n            children: \"Mudar Imagem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Modal, {\n            open: modalShow,\n            onClose: () => setModalShow(false),\n            \"aria-labelledby\": \"simple-modal-title\",\n            \"aria-describedby\": \"simple-modal-description\",\n            children: /*#__PURE__*/_jsxDEV(ImagesWIndow, {\n              show: modalShow,\n              onHide: () => setModalShow(false),\n              setThumb: setThumb,\n              setModalShow: setModalShow\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"updateContent-form\",\n          children: /*#__PURE__*/_jsxDEV(SunEditor, {\n            setContents: infoPost.content,\n            ref: editor,\n            lang: \"pt_br\",\n            width: \"92%\",\n            height: \"400\",\n            name: \"my-editor\",\n            setOptions: {\n              mode: \"classic\",\n              katex: \"window.katex\",\n              imageWidth: \"(auto)\",\n              imageHeight: \"(auto)\",\n              // imageUploadUrl: `${base_url}/ckimage`,\n              imageAccept: \"*\",\n              // imageGalleryUrl: `${base_url}/images`,\n              imageFileInput: true,\n              videoFileInput: false,\n              tabDisable: false,\n              buttonList: [[\"undo\", \"redo\", \"font\", \"fontSize\", \"formatBlock\", \"paragraphStyle\", \"blockquote\", \"bold\", \"underline\", \"italic\", \"strike\", \"subscript\", \"superscript\", \"fontColor\", \"hiliteColor\", \"textStyle\", \"removeFormat\", \"outdent\", \"indent\", \"align\", \"horizontalRule\", \"list\", \"lineHeight\", \"table\", \"link\", \"image\", \"video\", \"audio\", \"math\", \"imageGallery\", \"fullScreen\", \"showBlocks\", \"codeView\", \"preview\", \"print\", \"save\", \"template\"]]\n            },\n            onChange: dataForm,\n            onImageUploadBefore: files => {\n              let nameImage = files[0].name;\n              setFile(files[0]);\n              editor.current.editor.insertHTML(`<img src=\"/${nameImage}\">`);\n              return true;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UpdatePost, \"iV2HZ/AmiaHq9FfiG97r86+8C1I=\", false, function () {\n  return [useParams, useQuery, useQuery, useMutation];\n});\n\n_c = UpdatePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdatePost\");","map":{"version":3,"sources":["/home/bruno/trabalho/ji/src/Pages/Admin/UpdatePost/index.js"],"names":["React","useState","useEffect","useRef","slugify","useParams","SunEditor","axios","Modal","Admin","ImagesWIndow","NewCategory","useQuery","useMutation","GET_ADMIN_POST_INFO","GET_ALL_CATEGORIES","UPDATE_ADMIN_POST_INFO","UpdatePost","props","nameParams","idNumber","id","infoPost","setInfoPost","name","content","category","slide","middle","gameplay","public","midSection","thumb","setThumb","file","setFile","modalShow","setModalShow","reloadPage","setReloadPage","editor","dataForm","data","refetch","variables","categories","updatePost","error","isUpdated","getAdminInfoPost","reload","console","log","slug","publicPost","successfull","e","target","value","checked","getAllCategories","map","cat","i","toUpperCase","mode","katex","imageWidth","imageHeight","imageAccept","imageFileInput","videoFileInput","tabDisable","buttonList","files","nameImage","current","insertHTML"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport slugify from \"react-slugify\";\nimport { useParams } from \"react-router-dom\";\nimport SunEditor from \"suneditor-react\";\n\nimport \"suneditor/dist/css/suneditor.min.css\"; // Import Sun Editor's CSS File\nimport axios from \"axios\";\nimport Modal from \"@mui/material/Modal\";\n\nimport Admin from \"../Admin\";\nimport ImagesWIndow from \"../../../Components/ImagesWIndow/ImagesWIndow\";\nimport NewCategory from \"../../../Components/NewCategory\";\n\nimport \"./UpdatePost.css\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { GET_ADMIN_POST_INFO, GET_ALL_CATEGORIES } from \"../../../Graphql/Queries\";\nimport { UPDATE_ADMIN_POST_INFO } from \"../../../Graphql/Mutations\";\n\nexport default function UpdatePost(props) {\n  const nameParams = useParams();\n  let idNumber = nameParams.id;\n\n  const [infoPost, setInfoPost] = useState({\n    name: \"\",\n    content: \"\",\n    category: \"\",\n    slide: false,\n    middle: false,\n    gameplay: false,\n    public: false,\n    midSection: false,\n  });\n  const [thumb, setThumb] = useState(\"\");\n  const [file, setFile] = useState(\"\");\n  const [modalShow, setModalShow] = useState(false);\n  const [reloadPage, setReloadPage] = useState(false);\n  const editor = useRef(null);\n\n  function dataForm(data) {\n    setInfoPost({ ...infoPost, content: data });\n  }\n\n  // useEffect(() => {\n  //   let image = file.name;\n  //   const url = `${base_url}/upload/${image}`;\n  //   const data = new FormData();\n  //   data.append(\"file\", file);\n  //   const options = {\n  //     headers: {\n  //       \"Content-Type\": \"multipart/form-data\",\n  //     },\n  //   };\n  //   axios.post(url, data, options);\n  // }, [file]);\n\n  const { data, refetch } = useQuery(GET_ADMIN_POST_INFO, { variables: { id: idNumber } });\n  const { data: categories } = useQuery(GET_ALL_CATEGORIES);\n\n  const [updatePost, { error, data: isUpdated }] = useMutation(UPDATE_ADMIN_POST_INFO);\n\n  useEffect(() => {\n    if (data) {\n      setInfoPost({\n        name: data.getAdminInfoPost[0].name,\n        content: data.getAdminInfoPost[0].content,\n        category: data.getAdminInfoPost[0].category,\n        slide: data.getAdminInfoPost[0].slide,\n        middle: data.getAdminInfoPost[0].middle,\n        gameplay: data.getAdminInfoPost[0].gameplay,\n        public: data.getAdminInfoPost[0].public,\n        midSection: data.getAdminInfoPost[0].midSection,\n      });\n      setThumb(data.getAdminInfoPost[0].thumb);\n    }\n  }, [data]);\n\n  // useEffect(() => {\n  // if (isUpdated && isUpdated.updatePost.successfull) {\n  // refetch();\n  // }\n  // }, [isUpdated]);\n\n  function reload() {\n    console.log(\n      \"name: \",\n      infoPost.name,\n      \"content: \",\n      infoPost.content,\n      \"category: \",\n      infoPost.category,\n      \"slide: \",\n      infoPost.slide,\n      \"middle: \",\n      infoPost.middle,\n      \"gameplay: \",\n      infoPost.gameplay,\n      \"public: \",\n      infoPost.public,\n      \"midSection: \",\n      infoPost.midSection,\n      \"thumb: \",\n      thumb,\n    );\n    updatePost({\n      variables: {\n        id: idNumber,\n        name: infoPost.name,\n        content: infoPost.content,\n        category: infoPost.category,\n        slug: infoPost.name,\n        slide: infoPost.slide,\n        middle: infoPost.middle,\n        gameplay: infoPost.gameplay,\n        publicPost: infoPost.public,\n        midSection: infoPost.midSection,\n        thumb: thumb,\n      },\n    });\n    // setReloadPage(true);\n  }\n  // console.log(\"conteudo: \", infoPost);\n  return (\n    <div>\n      <Admin>\n        <div className=\"updateContent\">\n          <div className=\"updateContent-field\">\n            <p className=\"update-warning\">\n              {isUpdated && isUpdated.updatePost.successfull ? \"\" : \"Atualizado\"}{\" \"}\n            </p>\n            <button onClick={reload}>Atualizar</button>\n            Nome:\n            <input\n              type=\"text\"\n              onChange={(e) => setInfoPost({ ...infoPost, name: e.target.value })}\n              value={infoPost.name}\n            />\n            <div>\n              Publico\n              <input\n                type=\"checkbox\"\n                onClick={(e) => setInfoPost({ ...infoPost, public: e.target.checked })}\n                defaultChecked={infoPost.public ? true : null}\n              />\n            </div>\n            <div>\n              Slide\n              <input\n                type=\"checkbox\"\n                onClick={(e) => setInfoPost({ ...infoPost, slide: e.target.checked })}\n                defaultChecked={infoPost.slide ? true : null}\n              />\n              Meio\n              <input\n                type=\"checkbox\"\n                onClick={(e) => setInfoPost({ ...infoPost, middle: e.target.checked })}\n                defaultChecked={infoPost.middle ? true : null}\n              />\n              Gameplay\n              <input\n                type=\"checkbox\"\n                onClick={(e) => setInfoPost({ ...infoPost, gameplay: e.target.checked })}\n                defaultChecked={infoPost.gameplay ? true : null}\n              />\n              midSection\n              <input\n                type=\"checkbox\"\n                onClick={(e) => setInfoPost({ ...infoPost, midSection: e.target.checked })}\n                defaultChecked={infoPost.gameplay ? true : null}\n              />\n            </div>\n            <NewCategory />\n            <select\n              value={infoPost.category}\n              onChange={(e) => setInfoPost({ ...infoPost, category: e.target.value })}\n            >\n              <option>Escolha uma Categoria</option>\n              {categories &&\n                categories.getAllCategories.map((cat, i) => (\n                  <option key={i}>{cat.name.toUpperCase()}</option>\n                ))}\n            </select>\n            <img src={`/${thumb}`} alt={thumb} />\n            <button type=\"button\" onClick={() => setModalShow(true)}>\n              Mudar Imagem\n            </button>\n            <Modal\n              open={modalShow}\n              onClose={() => setModalShow(false)}\n              aria-labelledby=\"simple-modal-title\"\n              aria-describedby=\"simple-modal-description\"\n            >\n              {\n                <ImagesWIndow\n                  show={modalShow}\n                  onHide={() => setModalShow(false)}\n                  setThumb={setThumb}\n                  setModalShow={setModalShow}\n                />\n              }\n            </Modal>\n          </div>\n          <div className=\"updateContent-form\">\n            <SunEditor\n              setContents={infoPost.content}\n              ref={editor}\n              lang=\"pt_br\"\n              width=\"92%\"\n              height=\"400\"\n              name=\"my-editor\"\n              setOptions={{\n                mode: \"classic\",\n                katex: \"window.katex\",\n                imageWidth: \"(auto)\",\n                imageHeight: \"(auto)\",\n                // imageUploadUrl: `${base_url}/ckimage`,\n                imageAccept: \"*\",\n                // imageGalleryUrl: `${base_url}/images`,\n                imageFileInput: true,\n                videoFileInput: false,\n                tabDisable: false,\n                buttonList: [\n                  [\n                    \"undo\",\n                    \"redo\",\n                    \"font\",\n                    \"fontSize\",\n                    \"formatBlock\",\n                    \"paragraphStyle\",\n                    \"blockquote\",\n                    \"bold\",\n                    \"underline\",\n                    \"italic\",\n                    \"strike\",\n                    \"subscript\",\n                    \"superscript\",\n                    \"fontColor\",\n                    \"hiliteColor\",\n                    \"textStyle\",\n                    \"removeFormat\",\n                    \"outdent\",\n                    \"indent\",\n                    \"align\",\n                    \"horizontalRule\",\n                    \"list\",\n                    \"lineHeight\",\n                    \"table\",\n                    \"link\",\n                    \"image\",\n                    \"video\",\n                    \"audio\",\n                    \"math\",\n                    \"imageGallery\",\n                    \"fullScreen\",\n                    \"showBlocks\",\n                    \"codeView\",\n                    \"preview\",\n                    \"print\",\n                    \"save\",\n                    \"template\",\n                  ],\n                ],\n              }}\n              onChange={dataForm}\n              onImageUploadBefore={(files) => {\n                let nameImage = files[0].name;\n                setFile(files[0]);\n                editor.current.editor.insertHTML(`<img src=\"/${nameImage}\">`);\n                return true;\n              }}\n            />\n          </div>\n        </div>\n      </Admin>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}