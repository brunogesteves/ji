{"ast":null,"code":"var _jsxFileName = \"/home/bruno/trabalho/ji/src/Components/NewCategory/NewCategory.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from \"react\";\nimport \"./NewCategory.css\";\nimport { useMutation } from \"@apollo/client\";\nimport { NEW_CATEGORY } from \"../../Graphql/Mutations\";\nimport { InfoContext } from \"../../Contexts/Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewCategory(props) {\n  _s();\n\n  const [wordInput, setWordInput] = useState(\"\");\n  const [createCategory, {\n    error,\n    data: isAdded\n  }] = useMutation(NEW_CATEGORY);\n  const {\n    setIsCategoryAdded\n  } = useContext(InfoContext);\n  console.log(isAdded);\n  useEffect(() => {\n    if (isAdded) {\n      setIsCategoryAdded(isAdded.createCategory.successfull);\n      console.log(\"novo cat\");\n    }\n  }, [isAdded]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-category\",\n    children: [\"Digite a nova categoria:\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      value: wordInput,\n      onChange: e => e ? setWordInput(e.target.value) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: wordInput ? () => {\n        createCategory({\n          variables: {\n            name: wordInput\n          }\n        });\n        setWordInput(\"\");\n      } : null,\n      children: \"Adicionar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewCategory, \"cEofqkEnOclLG7Cj+Xg9fVR5/V8=\", false, function () {\n  return [useMutation];\n});\n\n_c = NewCategory;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewCategory\");","map":{"version":3,"sources":["/home/bruno/trabalho/ji/src/Components/NewCategory/NewCategory.js"],"names":["React","useState","useContext","useEffect","useMutation","NEW_CATEGORY","InfoContext","NewCategory","props","wordInput","setWordInput","createCategory","error","data","isAdded","setIsCategoryAdded","console","log","successfull","e","target","value","variables","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAO,mBAAP;AAEA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,YAAT,QAA6B,yBAA7B;AAEA,SAASC,WAAT,QAA4B,wBAA5B;;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACzC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACU,cAAD,EAAiB;AAAEC,IAAAA,KAAF;AAASC,IAAAA,IAAI,EAAEC;AAAf,GAAjB,IAA6CV,WAAW,CAACC,YAAD,CAA9D;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAyBb,UAAU,CAACI,WAAD,CAAzC;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,OAAJ,EAAa;AACXC,MAAAA,kBAAkB,CAACD,OAAO,CAACH,cAAR,CAAuBO,WAAxB,CAAlB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD;AACF,GALQ,EAKN,CAACH,OAAD,CALM,CAAT;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,wDAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,KAAK,EAAEL,SAHT;AAIE,MAAA,QAAQ,EAAGU,CAAD,IAAQA,CAAC,GAAGT,YAAY,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf,GAAkC;AAJvD;AAAA;AAAA;AAAA;AAAA,YAFF,eAQE;AACE,MAAA,OAAO,EACLZ,SAAS,GACL,MAAM;AACJE,QAAAA,cAAc,CAAC;AAAEW,UAAAA,SAAS,EAAE;AAAEC,YAAAA,IAAI,EAAEd;AAAR;AAAb,SAAD,CAAd;AACAC,QAAAA,YAAY,CAAC,EAAD,CAAZ;AACD,OAJI,GAKL,IAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GApCuBH,W;UAE6BH,W;;;KAF7BG,W","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport \"./NewCategory.css\";\n\nimport { useMutation } from \"@apollo/client\";\nimport { NEW_CATEGORY } from \"../../Graphql/Mutations\";\n\nimport { InfoContext } from \"../../Contexts/Context\";\n\nexport default function NewCategory(props) {\n  const [wordInput, setWordInput] = useState(\"\");\n  const [createCategory, { error, data: isAdded }] = useMutation(NEW_CATEGORY);\n  const { setIsCategoryAdded } = useContext(InfoContext);\n  console.log(isAdded);\n\n  useEffect(() => {\n    if (isAdded) {\n      setIsCategoryAdded(isAdded.createCategory.successfull);\n      console.log(\"novo cat\");\n    }\n  }, [isAdded]);\n\n  return (\n    <div className=\"new-category\">\n      Digite a nova categoria:\n      <input\n        type=\"text\"\n        name=\"name\"\n        value={wordInput}\n        onChange={(e) => (e ? setWordInput(e.target.value) : null)}\n      />\n      <button\n        onClick={\n          wordInput\n            ? () => {\n                createCategory({ variables: { name: wordInput } });\n                setWordInput(\"\");\n              }\n            : null\n        }\n      >\n        Adicionar\n      </button>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}