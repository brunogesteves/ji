{"ast":null,"code":"var _jsxFileName = \"/home/bruno/trabalho/ji/src/Pages/Admin/UpdatePost/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport slugify from \"react-slugify\";\nimport { useParams } from \"react-router-dom\";\nimport SunEditor from \"suneditor-react\";\nimport \"suneditor/dist/css/suneditor.min.css\"; // Import Sun Editor's CSS File\n\nimport axios from \"axios\";\nimport Modal from \"@mui/material/Modal\";\nimport Admin from \"../Admin\";\nimport ImagesWIndow from \"../../../Components/ImagesWIndow/ImagesWIndow\";\nimport NewCategory from \"../../../Components/NewCategory\";\nimport \"./UpdatePost.css\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { GET_ADMIN_POST_INFO, GET_ALL_CATEGORIES } from \"../../../Graphql/Queries\";\nimport { UPDATE_ADMIN_POST_INFO } from \"../../../Graphql/Mutations\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UpdatePost(props) {\n  _s();\n\n  const nameParams = useParams();\n  let idNumber = nameParams.id;\n  const [infoPost, setInfoPost] = useState({\n    slide: false,\n    middle: false,\n    gameplay: false,\n    public: false,\n    midSection: false\n  });\n  const [name, setName] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [thumb, setThumb] = useState(\"\");\n  const [file, setFile] = useState(\"\");\n  const [modalShow, setModalShow] = useState(false);\n  const [reloadPage, setReloadPage] = useState(false);\n  const editor = useRef(null);\n\n  function dataForm(data) {\n    setInfoPost({ ...infoPost,\n      content: data\n    });\n  } // useEffect(() => {\n  //   let image = file.name;\n  //   const url = `${base_url}/upload/${image}`;\n  //   const data = new FormData();\n  //   data.append(\"file\", file);\n  //   const options = {\n  //     headers: {\n  //       \"Content-Type\": \"multipart/form-data\",\n  //     },\n  //   };\n  //   axios.post(url, data, options);\n  // }, [file]);\n\n\n  const {\n    data\n  } = useQuery(GET_ADMIN_POST_INFO, {\n    variables: {\n      id: idNumber\n    }\n  });\n  const {\n    data: categories\n  } = useQuery(GET_ALL_CATEGORIES);\n  const [updatePost, {\n    error,\n    data: isUpdated\n  }] = useMutation(UPDATE_ADMIN_POST_INFO);\n  useEffect(() => {\n    if (data) {\n      console.log(\"data: \");\n      setName(data.getAdminInfoPost[0].name);\n      setContent(data.getAdminInfoPost[0].content);\n      setCategory(data.getAdminInfoPost[0].category);\n      setInfoPost({\n        slide: data.getAdminInfoPost[0].slide,\n        middle: data.getAdminInfoPost[0].middle,\n        gameplay: data.getAdminInfoPost[0].gameplay,\n        public: data.getAdminInfoPost[0].public,\n        midSection: data.getAdminInfoPost[0].midSection\n      });\n      setThumb(data.getAdminInfoPost[0].thumb);\n    }\n  }, [data]);\n\n  function reload() {\n    updatePost({\n      variables: {\n        id: idNumber,\n        name: name,\n        content: content,\n        category: category,\n        slug: slugify(infoPost.name, {\n          delimiter: \"-\"\n        }),\n        slide: infoPost.slide,\n        middle: infoPost.middle,\n        gameplay: infoPost.gameplay,\n        publicPost: infoPost.public,\n        midSection: infoPost.midSection,\n        thumb: thumb\n      }\n    });\n  }\n\n  console.log(\"conteudo: \", data && data.getAdminInfoPost[0].name);\n  console.log(\"conteudo2: \", name);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Admin, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"updateContent\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"updateContent-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"update-warning\",\n            children: [isUpdated && isUpdated.updatePost.successfull ? \"\" : \"Atualizado\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: reload,\n            children: \"Atualizar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), \"Nome:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: e => setName(e.target.value),\n            value: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Publico\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onClick: e => setInfoPost({ ...infoPost,\n                public: e.target.checked\n              }),\n              defaultChecked: infoPost.public ? true : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Slide\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onClick: e => setInfoPost({ ...infoPost,\n                slide: e.target.checked\n              }),\n              defaultChecked: infoPost.slide ? true : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this), \"Meio\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onClick: e => setInfoPost({ ...infoPost,\n                middle: e.target.checked\n              }),\n              defaultChecked: infoPost.middle ? true : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this), \"Gameplay\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onClick: e => setInfoPost({ ...infoPost,\n                gameplay: e.target.checked\n              }),\n              defaultChecked: infoPost.gameplay ? true : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this), \"midSection\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onClick: e => setInfoPost({ ...infoPost,\n                midSection: e.target.checked\n              }),\n              defaultChecked: infoPost.gameplay ? true : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NewCategory, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: category,\n            onChange: e => setInfoPost({ ...infoPost,\n              category: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Escolha uma Categoria\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this), categories && categories.getAllCategories.map((cat, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n              children: cat.name.toUpperCase()\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `/${thumb}`,\n            alt: thumb\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setModalShow(true),\n            children: \"Mudar Imagem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Modal, {\n            open: modalShow,\n            onClose: () => setModalShow(false),\n            \"aria-labelledby\": \"simple-modal-title\",\n            \"aria-describedby\": \"simple-modal-description\",\n            children: /*#__PURE__*/_jsxDEV(ImagesWIndow, {\n              show: modalShow,\n              onHide: () => setModalShow(false),\n              setThumb: setThumb,\n              setModalShow: setModalShow\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"updateContent-form\",\n          children: /*#__PURE__*/_jsxDEV(SunEditor, {\n            setContents: infoPost.content,\n            ref: editor,\n            lang: \"pt_br\",\n            width: \"92%\",\n            height: \"400\",\n            name: \"my-editor\",\n            setOptions: {\n              mode: \"classic\",\n              katex: \"window.katex\",\n              imageWidth: \"(auto)\",\n              imageHeight: \"(auto)\",\n              // imageUploadUrl: `${base_url}/ckimage`,\n              imageAccept: \"*\",\n              // imageGalleryUrl: `${base_url}/images`,\n              imageFileInput: true,\n              videoFileInput: false,\n              tabDisable: false,\n              buttonList: [[\"undo\", \"redo\", \"font\", \"fontSize\", \"formatBlock\", \"paragraphStyle\", \"blockquote\", \"bold\", \"underline\", \"italic\", \"strike\", \"subscript\", \"superscript\", \"fontColor\", \"hiliteColor\", \"textStyle\", \"removeFormat\", \"outdent\", \"indent\", \"align\", \"horizontalRule\", \"list\", \"lineHeight\", \"table\", \"link\", \"image\", \"video\", \"audio\", \"math\", \"imageGallery\", \"fullScreen\", \"showBlocks\", \"codeView\", \"preview\", \"print\", \"save\", \"template\"]]\n            },\n            onChange: dataForm,\n            onImageUploadBefore: files => {\n              let nameImage = files[0].name;\n              setFile(files[0]);\n              editor.current.editor.insertHTML(`<img src=\"/${nameImage}\">`);\n              return true;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UpdatePost, \"7c65mS022uJOiQlvhBQe76V5Wow=\", false, function () {\n  return [useParams, useQuery, useQuery, useMutation];\n});\n\n_c = UpdatePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdatePost\");","map":{"version":3,"sources":["/home/bruno/trabalho/ji/src/Pages/Admin/UpdatePost/index.js"],"names":["React","useState","useEffect","useRef","slugify","useParams","SunEditor","axios","Modal","Admin","ImagesWIndow","NewCategory","useQuery","useMutation","GET_ADMIN_POST_INFO","GET_ALL_CATEGORIES","UPDATE_ADMIN_POST_INFO","UpdatePost","props","nameParams","idNumber","id","infoPost","setInfoPost","slide","middle","gameplay","public","midSection","name","setName","content","setContent","category","setCategory","thumb","setThumb","file","setFile","modalShow","setModalShow","reloadPage","setReloadPage","editor","dataForm","data","variables","categories","updatePost","error","isUpdated","console","log","getAdminInfoPost","reload","slug","delimiter","publicPost","successfull","e","target","value","checked","getAllCategories","map","cat","i","toUpperCase","mode","katex","imageWidth","imageHeight","imageAccept","imageFileInput","videoFileInput","tabDisable","buttonList","files","nameImage","current","insertHTML"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AAEA,OAAO,sCAAP,C,CAA+C;;AAC/C,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AAEA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,YAAP,MAAyB,+CAAzB;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AAEA,OAAO,kBAAP;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,gBAAtC;AACA,SAASC,mBAAT,EAA8BC,kBAA9B,QAAwD,0BAAxD;AACA,SAASC,sBAAT,QAAuC,4BAAvC;;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACxC,QAAMC,UAAU,GAAGd,SAAS,EAA5B;AACA,MAAIe,QAAQ,GAAGD,UAAU,CAACE,EAA1B;AAEA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BtB,QAAQ,CAAC;AACvCuB,IAAAA,KAAK,EAAE,KADgC;AAEvCC,IAAAA,MAAM,EAAE,KAF+B;AAGvCC,IAAAA,QAAQ,EAAE,KAH6B;AAIvCC,IAAAA,MAAM,EAAE,KAJ+B;AAKvCC,IAAAA,UAAU,EAAE;AAL2B,GAAD,CAAxC;AAOA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkB7B,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAAC8B,OAAD,EAAUC,UAAV,IAAwB/B,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACgC,QAAD,EAAWC,WAAX,IAA0BjC,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACkC,KAAD,EAAQC,QAAR,IAAoBnC,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACoC,IAAD,EAAOC,OAAP,IAAkBrC,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACsC,SAAD,EAAYC,YAAZ,IAA4BvC,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACwC,UAAD,EAAaC,aAAb,IAA8BzC,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM0C,MAAM,GAAGxC,MAAM,CAAC,IAAD,CAArB;;AAEA,WAASyC,QAAT,CAAkBC,IAAlB,EAAwB;AACtBtB,IAAAA,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeS,MAAAA,OAAO,EAAEc;AAAxB,KAAD,CAAX;AACD,GAtBuC,CAwBxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,QAAM;AAAEA,IAAAA;AAAF,MAAWjC,QAAQ,CAACE,mBAAD,EAAsB;AAAEgC,IAAAA,SAAS,EAAE;AAAEzB,MAAAA,EAAE,EAAED;AAAN;AAAb,GAAtB,CAAzB;AACA,QAAM;AAAEyB,IAAAA,IAAI,EAAEE;AAAR,MAAuBnC,QAAQ,CAACG,kBAAD,CAArC;AAEA,QAAM,CAACiC,UAAD,EAAa;AAAEC,IAAAA,KAAF;AAASJ,IAAAA,IAAI,EAAEK;AAAf,GAAb,IAA2CrC,WAAW,CAACG,sBAAD,CAA5D;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI2C,IAAJ,EAAU;AACRM,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAtB,MAAAA,OAAO,CAACe,IAAI,CAACQ,gBAAL,CAAsB,CAAtB,EAAyBxB,IAA1B,CAAP;AACAG,MAAAA,UAAU,CAAEa,IAAI,CAACQ,gBAAL,CAAsB,CAAtB,EAAyBtB,OAA3B,CAAV;AACAG,MAAAA,WAAW,CAAEW,IAAI,CAACQ,gBAAL,CAAsB,CAAtB,EAAyBpB,QAA3B,CAAX;AACAV,MAAAA,WAAW,CAAC;AACVC,QAAAA,KAAK,EAAEqB,IAAI,CAACQ,gBAAL,CAAsB,CAAtB,EAAyB7B,KADtB;AAEVC,QAAAA,MAAM,EAAEoB,IAAI,CAACQ,gBAAL,CAAsB,CAAtB,EAAyB5B,MAFvB;AAGVC,QAAAA,QAAQ,EAAEmB,IAAI,CAACQ,gBAAL,CAAsB,CAAtB,EAAyB3B,QAHzB;AAIVC,QAAAA,MAAM,EAAEkB,IAAI,CAACQ,gBAAL,CAAsB,CAAtB,EAAyB1B,MAJvB;AAKVC,QAAAA,UAAU,EAAEiB,IAAI,CAACQ,gBAAL,CAAsB,CAAtB,EAAyBzB;AAL3B,OAAD,CAAX;AAOAQ,MAAAA,QAAQ,CAACS,IAAI,CAACQ,gBAAL,CAAsB,CAAtB,EAAyBlB,KAA1B,CAAR;AACD;AACF,GAfQ,EAeN,CAACU,IAAD,CAfM,CAAT;;AAiBA,WAASS,MAAT,GAAkB;AAChBN,IAAAA,UAAU,CAAC;AACTF,MAAAA,SAAS,EAAE;AACTzB,QAAAA,EAAE,EAAED,QADK;AAETS,QAAAA,IAAI,EAAEA,IAFG;AAGTE,QAAAA,OAAO,EAAEA,OAHA;AAITE,QAAAA,QAAQ,EAAEA,QAJD;AAKTsB,QAAAA,IAAI,EAAEnD,OAAO,CAACkB,QAAQ,CAACO,IAAV,EAAgB;AAAE2B,UAAAA,SAAS,EAAE;AAAb,SAAhB,CALJ;AAMThC,QAAAA,KAAK,EAAEF,QAAQ,CAACE,KANP;AAOTC,QAAAA,MAAM,EAAEH,QAAQ,CAACG,MAPR;AAQTC,QAAAA,QAAQ,EAAEJ,QAAQ,CAACI,QARV;AAST+B,QAAAA,UAAU,EAAEnC,QAAQ,CAACK,MATZ;AAUTC,QAAAA,UAAU,EAAEN,QAAQ,CAACM,UAVZ;AAWTO,QAAAA,KAAK,EAAEA;AAXE;AADF,KAAD,CAAV;AAeD;;AACDgB,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BP,IAAI,IAAIA,IAAI,CAACQ,gBAAL,CAAsB,CAAtB,EAAyBxB,IAA3D;AACAsB,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BvB,IAA3B;AACA,sBACE;AAAA,2BACE,QAAC,KAAD;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAA,kCACE;AAAG,YAAA,SAAS,EAAC,gBAAb;AAAA,uBACGqB,SAAS,IAAIA,SAAS,CAACF,UAAV,CAAqBU,WAAlC,GAAgD,EAAhD,GAAqD,YADxD,EACsE,GADtE;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAQ,YAAA,OAAO,EAAEJ,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,wBAME;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,QAAQ,EAAGK,CAAD,IAAO7B,OAAO,CAAC6B,CAAC,CAACC,MAAF,CAASC,KAAV,CAA3C;AAA6D,YAAA,KAAK,EAAEhC;AAApE;AAAA;AAAA;AAAA;AAAA,kBANF,eAOE;AAAA,+CAEE;AACE,cAAA,IAAI,EAAC,UADP;AAEE,cAAA,OAAO,EAAG8B,CAAD,IAAOpC,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeK,gBAAAA,MAAM,EAAEgC,CAAC,CAACC,MAAF,CAASE;AAAhC,eAAD,CAF7B;AAGE,cAAA,cAAc,EAAExC,QAAQ,CAACK,MAAT,GAAkB,IAAlB,GAAyB;AAH3C;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF,eAeE;AAAA,6CAEE;AACE,cAAA,IAAI,EAAC,UADP;AAEE,cAAA,OAAO,EAAGgC,CAAD,IAAOpC,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeE,gBAAAA,KAAK,EAAEmC,CAAC,CAACC,MAAF,CAASE;AAA/B,eAAD,CAF7B;AAGE,cAAA,cAAc,EAAExC,QAAQ,CAACE,KAAT,GAAiB,IAAjB,GAAwB;AAH1C;AAAA;AAAA;AAAA;AAAA,oBAFF,uBAQE;AACE,cAAA,IAAI,EAAC,UADP;AAEE,cAAA,OAAO,EAAGmC,CAAD,IAAOpC,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeG,gBAAAA,MAAM,EAAEkC,CAAC,CAACC,MAAF,CAASE;AAAhC,eAAD,CAF7B;AAGE,cAAA,cAAc,EAAExC,QAAQ,CAACG,MAAT,GAAkB,IAAlB,GAAyB;AAH3C;AAAA;AAAA;AAAA;AAAA,oBARF,2BAcE;AACE,cAAA,IAAI,EAAC,UADP;AAEE,cAAA,OAAO,EAAGkC,CAAD,IAAOpC,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeI,gBAAAA,QAAQ,EAAEiC,CAAC,CAACC,MAAF,CAASE;AAAlC,eAAD,CAF7B;AAGE,cAAA,cAAc,EAAExC,QAAQ,CAACI,QAAT,GAAoB,IAApB,GAA2B;AAH7C;AAAA;AAAA;AAAA;AAAA,oBAdF,6BAoBE;AACE,cAAA,IAAI,EAAC,UADP;AAEE,cAAA,OAAO,EAAGiC,CAAD,IAAOpC,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeM,gBAAAA,UAAU,EAAE+B,CAAC,CAACC,MAAF,CAASE;AAApC,eAAD,CAF7B;AAGE,cAAA,cAAc,EAAExC,QAAQ,CAACI,QAAT,GAAoB,IAApB,GAA2B;AAH7C;AAAA;AAAA;AAAA;AAAA,oBApBF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfF,eAyCE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,kBAzCF,eA0CE;AACE,YAAA,KAAK,EAAEO,QADT;AAEE,YAAA,QAAQ,EAAG0B,CAAD,IAAOpC,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeW,cAAAA,QAAQ,EAAE0B,CAAC,CAACC,MAAF,CAASC;AAAlC,aAAD,CAF9B;AAAA,oCAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,EAKGd,UAAU,IACTA,UAAU,CAACgB,gBAAX,CAA4BC,GAA5B,CAAgC,CAACC,GAAD,EAAMC,CAAN,kBAC9B;AAAA,wBAAiBD,GAAG,CAACpC,IAAJ,CAASsC,WAAT;AAAjB,eAAaD,CAAb;AAAA;AAAA;AAAA;AAAA,oBADF,CANJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBA1CF,eAoDE;AAAK,YAAA,GAAG,EAAG,IAAG/B,KAAM,EAApB;AAAuB,YAAA,GAAG,EAAEA;AAA5B;AAAA;AAAA;AAAA;AAAA,kBApDF,eAqDE;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,OAAO,EAAE,MAAMK,YAAY,CAAC,IAAD,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBArDF,eAwDE,QAAC,KAAD;AACE,YAAA,IAAI,EAAED,SADR;AAEE,YAAA,OAAO,EAAE,MAAMC,YAAY,CAAC,KAAD,CAF7B;AAGE,+BAAgB,oBAHlB;AAIE,gCAAiB,0BAJnB;AAAA,mCAOI,QAAC,YAAD;AACE,cAAA,IAAI,EAAED,SADR;AAEE,cAAA,MAAM,EAAE,MAAMC,YAAY,CAAC,KAAD,CAF5B;AAGE,cAAA,QAAQ,EAAEJ,QAHZ;AAIE,cAAA,YAAY,EAAEI;AAJhB;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,kBAxDF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAyEE;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,iCACE,QAAC,SAAD;AACE,YAAA,WAAW,EAAElB,QAAQ,CAACS,OADxB;AAEE,YAAA,GAAG,EAAEY,MAFP;AAGE,YAAA,IAAI,EAAC,OAHP;AAIE,YAAA,KAAK,EAAC,KAJR;AAKE,YAAA,MAAM,EAAC,KALT;AAME,YAAA,IAAI,EAAC,WANP;AAOE,YAAA,UAAU,EAAE;AACVyB,cAAAA,IAAI,EAAE,SADI;AAEVC,cAAAA,KAAK,EAAE,cAFG;AAGVC,cAAAA,UAAU,EAAE,QAHF;AAIVC,cAAAA,WAAW,EAAE,QAJH;AAKV;AACAC,cAAAA,WAAW,EAAE,GANH;AAOV;AACAC,cAAAA,cAAc,EAAE,IARN;AASVC,cAAAA,cAAc,EAAE,KATN;AAUVC,cAAAA,UAAU,EAAE,KAVF;AAWVC,cAAAA,UAAU,EAAE,CACV,CACE,MADF,EAEE,MAFF,EAGE,MAHF,EAIE,UAJF,EAKE,aALF,EAME,gBANF,EAOE,YAPF,EAQE,MARF,EASE,WATF,EAUE,QAVF,EAWE,QAXF,EAYE,WAZF,EAaE,aAbF,EAcE,WAdF,EAeE,aAfF,EAgBE,WAhBF,EAiBE,cAjBF,EAkBE,SAlBF,EAmBE,QAnBF,EAoBE,OApBF,EAqBE,gBArBF,EAsBE,MAtBF,EAuBE,YAvBF,EAwBE,OAxBF,EAyBE,MAzBF,EA0BE,OA1BF,EA2BE,OA3BF,EA4BE,OA5BF,EA6BE,MA7BF,EA8BE,cA9BF,EA+BE,YA/BF,EAgCE,YAhCF,EAiCE,UAjCF,EAkCE,SAlCF,EAmCE,OAnCF,EAoCE,MApCF,EAqCE,UArCF,CADU;AAXF,aAPd;AA4DE,YAAA,QAAQ,EAAEhC,QA5DZ;AA6DE,YAAA,mBAAmB,EAAGiC,KAAD,IAAW;AAC9B,kBAAIC,SAAS,GAAGD,KAAK,CAAC,CAAD,CAAL,CAAShD,IAAzB;AACAS,cAAAA,OAAO,CAACuC,KAAK,CAAC,CAAD,CAAN,CAAP;AACAlC,cAAAA,MAAM,CAACoC,OAAP,CAAepC,MAAf,CAAsBqC,UAAtB,CAAkC,cAAaF,SAAU,IAAzD;AACA,qBAAO,IAAP;AACD;AAlEH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAzEF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAsJD;;GApOuB7D,U;UACHZ,S,EAoCFO,Q,EACYA,Q,EAEoBC,W;;;KAxC3BI,U","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport slugify from \"react-slugify\";\nimport { useParams } from \"react-router-dom\";\nimport SunEditor from \"suneditor-react\";\n\nimport \"suneditor/dist/css/suneditor.min.css\"; // Import Sun Editor's CSS File\nimport axios from \"axios\";\nimport Modal from \"@mui/material/Modal\";\n\nimport Admin from \"../Admin\";\nimport ImagesWIndow from \"../../../Components/ImagesWIndow/ImagesWIndow\";\nimport NewCategory from \"../../../Components/NewCategory\";\n\nimport \"./UpdatePost.css\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { GET_ADMIN_POST_INFO, GET_ALL_CATEGORIES } from \"../../../Graphql/Queries\";\nimport { UPDATE_ADMIN_POST_INFO } from \"../../../Graphql/Mutations\";\n\nexport default function UpdatePost(props) {\n  const nameParams = useParams();\n  let idNumber = nameParams.id;\n\n  const [infoPost, setInfoPost] = useState({\n    slide: false,\n    middle: false,\n    gameplay: false,\n    public: false,\n    midSection: false,\n  });\n  const [name, setName] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [thumb, setThumb] = useState(\"\");\n  const [file, setFile] = useState(\"\");\n  const [modalShow, setModalShow] = useState(false);\n  const [reloadPage, setReloadPage] = useState(false);\n  const editor = useRef(null);\n\n  function dataForm(data) {\n    setInfoPost({ ...infoPost, content: data });\n  }\n\n  // useEffect(() => {\n  //   let image = file.name;\n  //   const url = `${base_url}/upload/${image}`;\n  //   const data = new FormData();\n  //   data.append(\"file\", file);\n  //   const options = {\n  //     headers: {\n  //       \"Content-Type\": \"multipart/form-data\",\n  //     },\n  //   };\n  //   axios.post(url, data, options);\n  // }, [file]);\n\n  const { data } = useQuery(GET_ADMIN_POST_INFO, { variables: { id: idNumber } });\n  const { data: categories } = useQuery(GET_ALL_CATEGORIES);\n\n  const [updatePost, { error, data: isUpdated }] = useMutation(UPDATE_ADMIN_POST_INFO);\n\n  useEffect(() => {\n    if (data) {\n      console.log(\"data: \");\n      setName(data.getAdminInfoPost[0].name);\n      setContent( data.getAdminInfoPost[0].content)\n      setCategory( data.getAdminInfoPost[0].category)\n      setInfoPost({\n        slide: data.getAdminInfoPost[0].slide,\n        middle: data.getAdminInfoPost[0].middle,\n        gameplay: data.getAdminInfoPost[0].gameplay,\n        public: data.getAdminInfoPost[0].public,\n        midSection: data.getAdminInfoPost[0].midSection,\n      });\n      setThumb(data.getAdminInfoPost[0].thumb);\n    }\n  }, [data]);\n\n  function reload() {\n    updatePost({\n      variables: {\n        id: idNumber,\n        name: name,\n        content: content,\n        category: category,\n        slug: slugify(infoPost.name, { delimiter: \"-\" }),\n        slide: infoPost.slide,\n        middle: infoPost.middle,\n        gameplay: infoPost.gameplay,\n        publicPost: infoPost.public,\n        midSection: infoPost.midSection,\n        thumb: thumb,\n      },\n    });\n  }\n  console.log(\"conteudo: \", data && data.getAdminInfoPost[0].name);\n  console.log(\"conteudo2: \", name);\n  return (\n    <div>\n      <Admin>\n        <div className=\"updateContent\">\n          <div className=\"updateContent-field\">\n            <p className=\"update-warning\">\n              {isUpdated && isUpdated.updatePost.successfull ? \"\" : \"Atualizado\"}{\" \"}\n            </p>\n            <button onClick={reload}>Atualizar</button>\n            Nome:\n            <input type=\"text\" onChange={(e) => setName(e.target.value)} value={name} />\n            <div>\n              Publico\n              <input\n                type=\"checkbox\"\n                onClick={(e) => setInfoPost({ ...infoPost, public: e.target.checked })}\n                defaultChecked={infoPost.public ? true : null}\n              />\n            </div>\n            <div>\n              Slide\n              <input\n                type=\"checkbox\"\n                onClick={(e) => setInfoPost({ ...infoPost, slide: e.target.checked })}\n                defaultChecked={infoPost.slide ? true : null}\n              />\n              Meio\n              <input\n                type=\"checkbox\"\n                onClick={(e) => setInfoPost({ ...infoPost, middle: e.target.checked })}\n                defaultChecked={infoPost.middle ? true : null}\n              />\n              Gameplay\n              <input\n                type=\"checkbox\"\n                onClick={(e) => setInfoPost({ ...infoPost, gameplay: e.target.checked })}\n                defaultChecked={infoPost.gameplay ? true : null}\n              />\n              midSection\n              <input\n                type=\"checkbox\"\n                onClick={(e) => setInfoPost({ ...infoPost, midSection: e.target.checked })}\n                defaultChecked={infoPost.gameplay ? true : null}\n              />\n            </div>\n            <NewCategory />\n            <select\n              value={category}\n              onChange={(e) => setInfoPost({ ...infoPost, category: e.target.value })}\n            >\n              <option>Escolha uma Categoria</option>\n              {categories &&\n                categories.getAllCategories.map((cat, i) => (\n                  <option key={i}>{cat.name.toUpperCase()}</option>\n                ))}\n            </select>\n            <img src={`/${thumb}`} alt={thumb} />\n            <button type=\"button\" onClick={() => setModalShow(true)}>\n              Mudar Imagem\n            </button>\n            <Modal\n              open={modalShow}\n              onClose={() => setModalShow(false)}\n              aria-labelledby=\"simple-modal-title\"\n              aria-describedby=\"simple-modal-description\"\n            >\n              {\n                <ImagesWIndow\n                  show={modalShow}\n                  onHide={() => setModalShow(false)}\n                  setThumb={setThumb}\n                  setModalShow={setModalShow}\n                />\n              }\n            </Modal>\n          </div>\n          <div className=\"updateContent-form\">\n            <SunEditor\n              setContents={infoPost.content}\n              ref={editor}\n              lang=\"pt_br\"\n              width=\"92%\"\n              height=\"400\"\n              name=\"my-editor\"\n              setOptions={{\n                mode: \"classic\",\n                katex: \"window.katex\",\n                imageWidth: \"(auto)\",\n                imageHeight: \"(auto)\",\n                // imageUploadUrl: `${base_url}/ckimage`,\n                imageAccept: \"*\",\n                // imageGalleryUrl: `${base_url}/images`,\n                imageFileInput: true,\n                videoFileInput: false,\n                tabDisable: false,\n                buttonList: [\n                  [\n                    \"undo\",\n                    \"redo\",\n                    \"font\",\n                    \"fontSize\",\n                    \"formatBlock\",\n                    \"paragraphStyle\",\n                    \"blockquote\",\n                    \"bold\",\n                    \"underline\",\n                    \"italic\",\n                    \"strike\",\n                    \"subscript\",\n                    \"superscript\",\n                    \"fontColor\",\n                    \"hiliteColor\",\n                    \"textStyle\",\n                    \"removeFormat\",\n                    \"outdent\",\n                    \"indent\",\n                    \"align\",\n                    \"horizontalRule\",\n                    \"list\",\n                    \"lineHeight\",\n                    \"table\",\n                    \"link\",\n                    \"image\",\n                    \"video\",\n                    \"audio\",\n                    \"math\",\n                    \"imageGallery\",\n                    \"fullScreen\",\n                    \"showBlocks\",\n                    \"codeView\",\n                    \"preview\",\n                    \"print\",\n                    \"save\",\n                    \"template\",\n                  ],\n                ],\n              }}\n              onChange={dataForm}\n              onImageUploadBefore={(files) => {\n                let nameImage = files[0].name;\n                setFile(files[0]);\n                editor.current.editor.insertHTML(`<img src=\"/${nameImage}\">`);\n                return true;\n              }}\n            />\n          </div>\n        </div>\n      </Admin>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}