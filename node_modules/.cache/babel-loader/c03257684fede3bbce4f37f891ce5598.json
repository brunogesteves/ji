{"ast":null,"code":"import{base_url}from\"../config\";var Auth={authenticate:function authenticate(user,password){return fetch(\"\".concat(base_url,\"/sign/in\"),{method:\"post\",headers:{\"Content-type\":\"application/json\"},body:JSON.stringify({user:user,password:password})}).then(function(res){return res.json();}).then(function(res){return res;});},confirm:function confirm(){return fetch(\"\".concat(base_url,\"/sign/\"),{method:\"post\",headers:{\"Content-type\":\"application/json\",\"x-access-token\":localStorage.getItem(\"token\")}}).then(function(res){return res.json();}).then(function(res){return res;});}};export default Auth;","map":{"version":3,"sources":["/home/bruno/trabalho/ji/frontend/src/Services/Auth.js"],"names":["base_url","Auth","authenticate","user","password","fetch","method","headers","body","JSON","stringify","then","res","json","confirm","localStorage","getItem"],"mappings":"AAAA,OAASA,QAAT,KAAyB,WAAzB,CAEA,GAAMC,CAAAA,IAAI,CAAG,CACXC,YAAY,CAAE,sBAACC,IAAD,CAAOC,QAAP,CAAoB,CAChC,MAAOC,CAAAA,KAAK,WAAIL,QAAJ,aAAwB,CAClCM,MAAM,CAAE,MAD0B,CAElCC,OAAO,CAAE,CACP,eAAgB,kBADT,CAFyB,CAKlCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACnBP,IAAI,CAAEA,IADa,CAEnBC,QAAQ,CAAEA,QAFS,CAAf,CAL4B,CAAxB,CAAL,CAUJO,IAVI,CAUC,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,IAAJ,EAAT,EAVD,EAWJF,IAXI,CAWC,SAACC,GAAD,CAAS,CACb,MAAOA,CAAAA,GAAP,CACD,CAbI,CAAP,CAcD,CAhBU,CAiBXE,OAAO,CAAE,kBAAM,CACb,MAAOT,CAAAA,KAAK,WAAIL,QAAJ,WAAsB,CAChCM,MAAM,CAAE,MADwB,CAEhCC,OAAO,CAAE,CACP,eAAgB,kBADT,CAEP,iBAAkBQ,YAAY,CAACC,OAAb,CAAqB,OAArB,CAFX,CAFuB,CAAtB,CAAL,CAOJL,IAPI,CAOC,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,IAAJ,EAAT,EAPD,EAQJF,IARI,CAQC,SAACC,GAAD,CAAS,CACb,MAAOA,CAAAA,GAAP,CACD,CAVI,CAAP,CAWD,CA7BU,CAAb,CAgCA,cAAeX,CAAAA,IAAf","sourcesContent":["import { base_url } from \"../config\";\n\nconst Auth = {\n  authenticate: (user, password) => {\n    return fetch(`${base_url}/sign/in`, {\n      method: \"post\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        user: user,\n        password: password,\n      }),\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        return res;\n      });\n  },\n  confirm: () => {\n    return fetch(`${base_url}/sign/`, {\n      method: \"post\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"x-access-token\": localStorage.getItem(\"token\"),\n      },\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        return res;\n      });\n  },\n};\n\nexport default Auth;\n"]},"metadata":{},"sourceType":"module"}