{"ast":null,"code":"var _jsxFileName = \"/home/bruno/trabalho/ji/frontend/src/Components/FileDrop/FileDrop.js\";\nimport React from \"react\";\nimport Dropzone from \"react-dropzone-uploader\";\nimport \"react-dropzone-uploader/dist/styles.css\";\nimport \"./FileDrop.css\";\nimport { base_url } from \"../../config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FileDrop(props) {\n  const getUploadParams = ({\n    file\n  }) => {\n    console.log(\"file: \", file.name);\n    const url = `${base_url}/upload/${file.name}`;\n    const data = new FormData();\n    data.append(\"file\", file); // const options = {\n    //   headers: {\n    //     \"Content-Type\": \"multipart/form-data\",\n    //   },\n    // };\n\n    return {\n      url,\n      data\n    };\n  }; // called every time a file's `status` changes\n  // const handleChangeStatus = ({ meta, file }, status) => { console.log(status, meta, file) }\n\n\n  const handleChangeStatus = ({\n    xhr\n  }) => {\n    console.log(xhr);\n  }; // receives array of files that are done uploading when submit button is clicked\n\n\n  const handleSubmit = (files, allFiles) => {\n    // console.log(files.map((f) => f.meta));\n    allFiles.forEach(f => f.remove());\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dropzone, {\n    getUploadParams: getUploadParams,\n    onChangeStatus: handleChangeStatus,\n    onSubmit: handleSubmit,\n    accept: \"image/*,audio/*,video/*\",\n    inputContent: \"Adicione Fotos\",\n    inputWithFilesContent: \"Procurar Fotos\",\n    submitButtonContent: \"Apagar\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_c = FileDrop;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileDrop\");","map":{"version":3,"sources":["/home/bruno/trabalho/ji/frontend/src/Components/FileDrop/FileDrop.js"],"names":["React","Dropzone","base_url","FileDrop","props","getUploadParams","file","console","log","name","url","data","FormData","append","handleChangeStatus","xhr","handleSubmit","files","allFiles","forEach","f","remove"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AAEA,OAAO,yCAAP;AACA,OAAO,gBAAP;AACA,SAASC,QAAT,QAAyB,cAAzB;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACtC,QAAMC,eAAe,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAc;AACpCC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,IAAI,CAACG,IAA3B;AACA,UAAMC,GAAG,GAAI,GAAER,QAAS,WAAUI,IAAI,CAACG,IAAK,EAA5C;AACA,UAAME,IAAI,GAAG,IAAIC,QAAJ,EAAb;AACAD,IAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoBP,IAApB,EAJoC,CAKpC;AACA;AACA;AACA;AACA;;AACA,WAAO;AAAEI,MAAAA,GAAF;AAAOC,MAAAA;AAAP,KAAP;AACD,GAXD,CADsC,CActC;AACA;;;AACA,QAAMG,kBAAkB,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAa;AACtCR,IAAAA,OAAO,CAACC,GAAR,CAAYO,GAAZ;AACD,GAFD,CAhBsC,CAoBtC;;;AACA,QAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACxC;AACAA,IAAAA,QAAQ,CAACC,OAAT,CAAkBC,CAAD,IAAOA,CAAC,CAACC,MAAF,EAAxB;AACD,GAHD;;AAKA,sBACE,QAAC,QAAD;AACE,IAAA,eAAe,EAAEhB,eADnB;AAEE,IAAA,cAAc,EAAES,kBAFlB;AAGE,IAAA,QAAQ,EAAEE,YAHZ;AAIE,IAAA,MAAM,EAAC,yBAJT;AAKE,IAAA,YAAY,EAAE,gBALhB;AAME,IAAA,qBAAqB,EAAE,gBANzB;AAOE,IAAA,mBAAmB,EAAE;AAPvB;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;KArCuBb,Q","sourcesContent":["import React from \"react\";\nimport Dropzone from \"react-dropzone-uploader\";\n\nimport \"react-dropzone-uploader/dist/styles.css\";\nimport \"./FileDrop.css\";\nimport { base_url } from \"../../config\";\n\nexport default function FileDrop(props) {\n  const getUploadParams = ({ file }) => {\n    console.log(\"file: \", file.name);\n    const url = `${base_url}/upload/${file.name}`;\n    const data = new FormData();\n    data.append(\"file\", file);\n    // const options = {\n    //   headers: {\n    //     \"Content-Type\": \"multipart/form-data\",\n    //   },\n    // };\n    return { url, data };\n  };\n\n  // called every time a file's `status` changes\n  // const handleChangeStatus = ({ meta, file }, status) => { console.log(status, meta, file) }\n  const handleChangeStatus = ({ xhr }) => {\n    console.log(xhr);\n  };\n\n  // receives array of files that are done uploading when submit button is clicked\n  const handleSubmit = (files, allFiles) => {\n    // console.log(files.map((f) => f.meta));\n    allFiles.forEach((f) => f.remove());\n  };\n\n  return (\n    <Dropzone\n      getUploadParams={getUploadParams}\n      onChangeStatus={handleChangeStatus}\n      onSubmit={handleSubmit}\n      accept=\"image/*,audio/*,video/*\"\n      inputContent={\"Adicione Fotos\"}\n      inputWithFilesContent={\"Procurar Fotos\"}\n      submitButtonContent={\"Apagar\"}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}