{"ast":null,"code":"var _jsxFileName = \"/home/bruno/trabalho/ji/src/Pages/Admin/UpdatePost/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport slugify from \"react-slugify\";\nimport { useParams } from \"react-router-dom\";\nimport SunEditor from \"suneditor-react\";\nimport \"suneditor/dist/css/suneditor.min.css\"; // Import Sun Editor's CSS File\n\nimport axios from \"axios\";\nimport Modal from \"@mui/material/Modal\";\nimport { base_url } from \"../../../config\";\nimport Admin from \"../Admin\";\nimport ImagesWIndow from \"../../../Components/ImagesWIndow/ImagesWIndow\";\nimport NewCategory from \"../../../Components/NewCategory\";\nimport \"./UpdatePost.css\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { GET_ADMIN_POST_INFO, GET_ALL_CATEGORIES } from \"../../../Graphql/Queries\";\nimport { UPDATE_ADMIN_POST_INFO } from \"../../../Graphql/Mutations\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UpdatePost(props) {\n  _s();\n\n  const nameParams = useParams();\n  let idNumber = nameParams.id; // const [id, setId] = useState(\"\");\n\n  const [namePost, setNamePost] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [thumb, setThumb] = useState(\"\");\n  const [slide, setSlide] = useState(false);\n  const [gameplay, setGameplay] = useState(false);\n  const [middle, setMiddle] = useState(false);\n  const [gallery, setGallery] = useState(false);\n  const [publicPost, setPublicPost] = useState();\n  const [file, setFile] = useState(\"\"); // const [category, setCategory] = useState(\"\");\n  // const [categories, setCategories] = useState([]);\n\n  const [word, setWord] = useState(\"\");\n  const [modalShow, setModalShow] = useState(false);\n  const [warning, setWarning] = useState(\"\");\n  const editor = useRef(null); // useEffect(() => {\n  //   UpdateService.getInfo(idNumber).then((res) => {\n  //     setNamePost(res[0].name);\n  //     setContent(res[0].content);\n  //     setThumb(res[0].thumb);\n  //     // setId(res[0].id);\n  //     setSlide(res[0].slide);\n  //     setGameplay(res[0].gameplay);\n  //     setMiddle(res[0].middle);\n  //     setGallery(res[0].gallery);\n  //     setPublicPost(res[0].publicpost);\n  //     setCategory(res[0].category);\n  //   });\n  //   // eslint-disable-next-line\n  // }, []);\n\n  function dataForm(data) {\n    setContent(data);\n  } // useEffect(() => {\n  //   UpdateService.category().then((res) => {\n  //     setCategories(res);\n  //   });\n  // }, [word]);\n\n\n  function update() {//   namePost && content\n    //     ? UpdateService.update(\n    //         idNumber,\n    //         namePost,\n    //         content,\n    //         category,\n    //         thumb,\n    //         slugify(namePost, { delimiter: \"-\" }),\n    //         slide ? 1 : 0,\n    //         middle ? 1 : 0,\n    //         gameplay ? 1 : 0,\n    //         gallery ? 1 : 0,\n    //         publicPost\n    //       )\n    //         .then((res) => {\n    //           setWarning(res.msg);\n    //           setInterval(() => {\n    //             setWarning(\"\");\n    //           }, 5000);\n    //         })\n    //         .catch((error) => {\n    //           console.log(\"erro\");\n    //         })\n    //     : alert(\"HÃ¡ campos vazios\");\n  }\n\n  useEffect(() => {\n    let image = file.name;\n    const url = `${base_url}/upload/${image}`;\n    const data = new FormData();\n    data.append(\"file\", file);\n    const options = {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    };\n    axios.post(url, data, options);\n  }, [file]); // console.log(\"res-post: \", category);\n\n  const {\n    data,\n    refetch\n  } = useQuery(GET_ADMIN_POST_INFO, {\n    variables: {\n      id: idNumber\n    }\n  });\n  const {\n    data: categories\n  } = useQuery(GET_ALL_CATEGORIES);\n  const postInfo = data ? data.getAdminInfoPost[0] : \"\";\n  const [updatePost, {\n    data: isUpdated\n  }] = useMutation(UPDATE_ADMIN_POST_INFO);\n  useEffect(() => {\n    if (isUpdated && isUpdated.deleteCategory.successfull) {\n      refetch();\n    }\n  }, [isUpdated]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Admin, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"updateContent\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"updateContent-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"update-warning\",\n            children: warning\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: updatePost({\n              variables\n            }),\n            children: \"Atualizar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), \"Nome:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: e => setNamePost(e.target.value),\n            value: postInfo.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Publico\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onClick: e => setPublicPost(e.target.checked),\n              defaultChecked: postInfo.public ? true : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Slide\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onClick: e => setSlide(e.target.checked),\n              defaultChecked: postInfo.slide ? true : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this), \"Meio\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onClick: e => setMiddle(e.target.checked),\n              defaultChecked: postInfo.middle ? true : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this), \"Gameplay\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onClick: e => setGameplay(e.target.checked),\n              defaultChecked: postInfo.gameplay ? true : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NewCategory, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: postInfo.category,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Escolha uma Categoria\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this), categories && categories.getAllCategories.map((cat, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n              children: cat.name.toUpperCase()\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `/${postInfo.thumb}`,\n            alt: postInfo.thumb\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setModalShow(true),\n            children: \"Mudar Imagem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Modal, {\n            open: modalShow,\n            onClose: () => setModalShow(false),\n            \"aria-labelledby\": \"simple-modal-title\",\n            \"aria-describedby\": \"simple-modal-description\",\n            children: /*#__PURE__*/_jsxDEV(ImagesWIndow, {\n              show: modalShow,\n              onHide: () => setModalShow(false),\n              setThumb: setThumb,\n              setModalShow: setModalShow\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"updateContent-form\",\n          children: /*#__PURE__*/_jsxDEV(SunEditor, {\n            setContents: postInfo.content,\n            ref: editor,\n            lang: \"pt_br\",\n            width: \"92%\",\n            height: \"400\",\n            name: \"my-editor\",\n            setOptions: {\n              mode: \"classic\",\n              katex: \"window.katex\",\n              imageWidth: \"(auto)\",\n              imageHeight: \"(auto)\",\n              // imageUploadUrl: `${base_url}/ckimage`,\n              imageAccept: \"*\",\n              imageGalleryUrl: `${base_url}/images`,\n              imageFileInput: true,\n              videoFileInput: false,\n              tabDisable: false,\n              buttonList: [[\"undo\", \"redo\", \"font\", \"fontSize\", \"formatBlock\", \"paragraphStyle\", \"blockquote\", \"bold\", \"underline\", \"italic\", \"strike\", \"subscript\", \"superscript\", \"fontColor\", \"hiliteColor\", \"textStyle\", \"removeFormat\", \"outdent\", \"indent\", \"align\", \"horizontalRule\", \"list\", \"lineHeight\", \"table\", \"link\", \"image\", \"video\", \"audio\", \"math\", \"imageGallery\", \"fullScreen\", \"showBlocks\", \"codeView\", \"preview\", \"print\", \"save\", \"template\"]]\n            },\n            onChange: dataForm,\n            onImageUploadBefore: files => {\n              let nameImage = files[0].name;\n              setFile(files[0]);\n              editor.current.editor.insertHTML(`<img src=\"/${nameImage}\">`);\n              return true;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UpdatePost, \"kAXHdVXd/sdZEPIAjztEtMJh28o=\", false, function () {\n  return [useParams, useQuery, useQuery, useMutation];\n});\n\n_c = UpdatePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdatePost\");","map":{"version":3,"sources":["/home/bruno/trabalho/ji/src/Pages/Admin/UpdatePost/index.js"],"names":["React","useState","useEffect","useRef","slugify","useParams","SunEditor","axios","Modal","base_url","Admin","ImagesWIndow","NewCategory","useMutation","useQuery","GET_ADMIN_POST_INFO","GET_ALL_CATEGORIES","UPDATE_ADMIN_POST_INFO","UpdatePost","props","nameParams","idNumber","id","namePost","setNamePost","content","setContent","thumb","setThumb","slide","setSlide","gameplay","setGameplay","middle","setMiddle","gallery","setGallery","publicPost","setPublicPost","file","setFile","word","setWord","modalShow","setModalShow","warning","setWarning","editor","dataForm","data","update","image","name","url","FormData","append","options","headers","post","refetch","variables","categories","postInfo","getAdminInfoPost","updatePost","isUpdated","deleteCategory","successfull","e","target","value","checked","public","category","getAllCategories","map","cat","i","toUpperCase","mode","katex","imageWidth","imageHeight","imageAccept","imageGalleryUrl","imageFileInput","videoFileInput","tabDisable","buttonList","files","nameImage","current","insertHTML"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport slugify from \"react-slugify\";\nimport { useParams } from \"react-router-dom\";\nimport SunEditor from \"suneditor-react\";\n\nimport \"suneditor/dist/css/suneditor.min.css\"; // Import Sun Editor's CSS File\nimport axios from \"axios\";\nimport Modal from \"@mui/material/Modal\";\n\nimport { base_url } from \"../../../config\";\n\nimport Admin from \"../Admin\";\nimport ImagesWIndow from \"../../../Components/ImagesWIndow/ImagesWIndow\";\nimport NewCategory from \"../../../Components/NewCategory\";\n\nimport \"./UpdatePost.css\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { GET_ADMIN_POST_INFO, GET_ALL_CATEGORIES } from \"../../../Graphql/Queries\";\nimport { UPDATE_ADMIN_POST_INFO } from \"../../../Graphql/Mutations\";\n\nexport default function UpdatePost(props) {\n  const nameParams = useParams();\n  let idNumber = nameParams.id;\n\n  // const [id, setId] = useState(\"\");\n  const [namePost, setNamePost] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [thumb, setThumb] = useState(\"\");\n  const [slide, setSlide] = useState(false);\n  const [gameplay, setGameplay] = useState(false);\n  const [middle, setMiddle] = useState(false);\n  const [gallery, setGallery] = useState(false);\n  const [publicPost, setPublicPost] = useState();\n  const [file, setFile] = useState(\"\");\n  // const [category, setCategory] = useState(\"\");\n  // const [categories, setCategories] = useState([]);\n  const [word, setWord] = useState(\"\");\n  const [modalShow, setModalShow] = useState(false);\n  const [warning, setWarning] = useState(\"\");\n  const editor = useRef(null);\n\n  // useEffect(() => {\n  //   UpdateService.getInfo(idNumber).then((res) => {\n  //     setNamePost(res[0].name);\n  //     setContent(res[0].content);\n  //     setThumb(res[0].thumb);\n  //     // setId(res[0].id);\n  //     setSlide(res[0].slide);\n  //     setGameplay(res[0].gameplay);\n  //     setMiddle(res[0].middle);\n  //     setGallery(res[0].gallery);\n  //     setPublicPost(res[0].publicpost);\n  //     setCategory(res[0].category);\n  //   });\n  //   // eslint-disable-next-line\n  // }, []);\n\n  function dataForm(data) {\n    setContent(data);\n  }\n\n  // useEffect(() => {\n  //   UpdateService.category().then((res) => {\n  //     setCategories(res);\n  //   });\n  // }, [word]);\n\n  function update() {\n    //   namePost && content\n    //     ? UpdateService.update(\n    //         idNumber,\n    //         namePost,\n    //         content,\n    //         category,\n    //         thumb,\n    //         slugify(namePost, { delimiter: \"-\" }),\n    //         slide ? 1 : 0,\n    //         middle ? 1 : 0,\n    //         gameplay ? 1 : 0,\n    //         gallery ? 1 : 0,\n    //         publicPost\n    //       )\n    //         .then((res) => {\n    //           setWarning(res.msg);\n    //           setInterval(() => {\n    //             setWarning(\"\");\n    //           }, 5000);\n    //         })\n    //         .catch((error) => {\n    //           console.log(\"erro\");\n    //         })\n    //     : alert(\"HÃ¡ campos vazios\");\n  }\n\n  useEffect(() => {\n    let image = file.name;\n    const url = `${base_url}/upload/${image}`;\n    const data = new FormData();\n    data.append(\"file\", file);\n    const options = {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n    };\n    axios.post(url, data, options);\n  }, [file]);\n  // console.log(\"res-post: \", category);\n\n  const { data, refetch } = useQuery(GET_ADMIN_POST_INFO, { variables: { id: idNumber } });\n  const { data: categories } = useQuery(GET_ALL_CATEGORIES);\n\n  const postInfo = data ? data.getAdminInfoPost[0] : \"\";\n\n  const [updatePost, { data: isUpdated }] = useMutation(UPDATE_ADMIN_POST_INFO);\n\n  useEffect(() => {\n    if (isUpdated && isUpdated.deleteCategory.successfull) {\n      refetch();\n    }\n  }, [isUpdated]);\n\n  return (\n    <div>\n      <Admin>\n        <div className=\"updateContent\">\n          <div className=\"updateContent-field\">\n            <p className=\"update-warning\">{warning}</p>\n            <button onClick={updatePost({variables})}>Atualizar</button>\n            Nome:\n            <input\n              type=\"text\"\n              onChange={(e) => setNamePost(e.target.value)}\n              value={postInfo.name}\n            />\n            <div>\n              Publico\n              <input\n                type=\"checkbox\"\n                onClick={(e) => setPublicPost(e.target.checked)}\n                defaultChecked={postInfo.public ? true : null}\n              />\n            </div>\n            <div>\n              Slide\n              <input\n                type=\"checkbox\"\n                onClick={(e) => setSlide(e.target.checked)}\n                defaultChecked={postInfo.slide ? true : null}\n              />\n              Meio\n              <input\n                type=\"checkbox\"\n                onClick={(e) => setMiddle(e.target.checked)}\n                defaultChecked={postInfo.middle ? true : null}\n              />\n              Gameplay\n              <input\n                type=\"checkbox\"\n                onClick={(e) => setGameplay(e.target.checked)}\n                defaultChecked={postInfo.gameplay ? true : null}\n              />\n            </div>\n            <NewCategory />\n            <select value={postInfo.category}>\n              <option>Escolha uma Categoria</option>\n              {categories &&\n                categories.getAllCategories.map((cat, i) => (\n                  <option key={i}>{cat.name.toUpperCase()}</option>\n                ))}\n            </select>\n            <img src={`/${postInfo.thumb}`} alt={postInfo.thumb} />\n            <button type=\"button\" onClick={() => setModalShow(true)}>\n              Mudar Imagem\n            </button>\n            <Modal\n              open={modalShow}\n              onClose={() => setModalShow(false)}\n              aria-labelledby=\"simple-modal-title\"\n              aria-describedby=\"simple-modal-description\"\n            >\n              {\n                <ImagesWIndow\n                  show={modalShow}\n                  onHide={() => setModalShow(false)}\n                  setThumb={setThumb}\n                  setModalShow={setModalShow}\n                />\n              }\n            </Modal>\n          </div>\n          <div className=\"updateContent-form\">\n            <SunEditor\n              setContents={postInfo.content}\n              ref={editor}\n              lang=\"pt_br\"\n              width=\"92%\"\n              height=\"400\"\n              name=\"my-editor\"\n              setOptions={{\n                mode: \"classic\",\n                katex: \"window.katex\",\n                imageWidth: \"(auto)\",\n                imageHeight: \"(auto)\",\n                // imageUploadUrl: `${base_url}/ckimage`,\n                imageAccept: \"*\",\n                imageGalleryUrl: `${base_url}/images`,\n                imageFileInput: true,\n                videoFileInput: false,\n                tabDisable: false,\n                buttonList: [\n                  [\n                    \"undo\",\n                    \"redo\",\n                    \"font\",\n                    \"fontSize\",\n                    \"formatBlock\",\n                    \"paragraphStyle\",\n                    \"blockquote\",\n                    \"bold\",\n                    \"underline\",\n                    \"italic\",\n                    \"strike\",\n                    \"subscript\",\n                    \"superscript\",\n                    \"fontColor\",\n                    \"hiliteColor\",\n                    \"textStyle\",\n                    \"removeFormat\",\n                    \"outdent\",\n                    \"indent\",\n                    \"align\",\n                    \"horizontalRule\",\n                    \"list\",\n                    \"lineHeight\",\n                    \"table\",\n                    \"link\",\n                    \"image\",\n                    \"video\",\n                    \"audio\",\n                    \"math\",\n                    \"imageGallery\",\n                    \"fullScreen\",\n                    \"showBlocks\",\n                    \"codeView\",\n                    \"preview\",\n                    \"print\",\n                    \"save\",\n                    \"template\",\n                  ],\n                ],\n              }}\n              onChange={dataForm}\n              onImageUploadBefore={(files) => {\n                let nameImage = files[0].name;\n                setFile(files[0]);\n                editor.current.editor.insertHTML(`<img src=\"/${nameImage}\">`);\n                return true;\n              }}\n            />\n          </div>\n        </div>\n      </Admin>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}