{"ast":null,"code":"var _jsxFileName = \"/home/bruno/trabalho/ji/src/Components/FileDrop/FileDrop.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\"; // import \"react-dropzone-uploader/dist/styles.css\";\n\nimport \"./FileDrop.css\";\nimport { UPLOAD_IMAGE } from \"../../Graphql/Mutations\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function FileDrop(props) {\n  _s();\n\n  const [file, setFile] = useState(\"\");\n  const [fileName, setFileName] = useState(\"\");\n  const [uploadedFile, setUploadedFile] = useState({});\n  const [message, setMessage] = useState(\"\");\n  const [uploadPercentage, setUploadPercentage] = useState();\n\n  function onChange(e) {\n    setFile(e.target.files[0]);\n    setFileName(e.target.files[0].name);\n  }\n\n  const [uploadImage, {\n    data: fileUploadData,\n    loading: fileUploadLoding\n  }] = useMutation(UPLOAD_IMAGE, {\n    onCompleted: data => {\n      var _data$fileUpload;\n\n      console.log(data);\n\n      if ((_data$fileUpload = data.fileUpload) === null || _data$fileUpload === void 0 ? void 0 : _data$fileUpload.success) {\n        var _data$fileUpload2;\n\n        setMessage((_data$fileUpload2 = data.fileUpload) === null || _data$fileUpload2 === void 0 ? void 0 : _data$fileUpload2.message);\n      }\n    }\n  });\n\n  async function uploadFile() {\n    if (file) {\n      console.log(\"dentro: \", file.name);\n      await uploadImage({\n        variables: {\n          file: file\n        }\n      });\n    } else {\n      console.log(\"erro\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control\",\n        type: \"file\",\n        id: \"formFile\",\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        htmlFor: \"formFile\",\n        children: fileName ? fileName : \"Selecione um arquivo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Adicionar\",\n        class: \"btn btn-primary btn-block mt-4 col-12\",\n        onClick: uploadFile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"progress\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"progress-bar\",\n        style: {\n          width: `${uploadPercentage}%`\n        },\n        role: \"progressbar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), uploadedFile ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6 m-auto \",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-center\",\n          children: uploadedFile.fileName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          style: {\n            width: \"100%\"\n          },\n          src: uploadedFile.filePath,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true);\n}\n\n_s(FileDrop, \"ALhMTtFZ7da4urd5V0IAo80g7X4=\", true);\n\n_c = FileDrop;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileDrop\");","map":{"version":3,"sources":["/home/bruno/trabalho/ji/src/Components/FileDrop/FileDrop.js"],"names":["React","useState","axios","UPLOAD_IMAGE","FileDrop","props","file","setFile","fileName","setFileName","uploadedFile","setUploadedFile","message","setMessage","uploadPercentage","setUploadPercentage","onChange","e","target","files","name","uploadImage","data","fileUploadData","loading","fileUploadLoding","useMutation","onCompleted","console","log","fileUpload","success","uploadFile","variables","width","filePath"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport axios from \"axios\";\n// import \"react-dropzone-uploader/dist/styles.css\";\nimport \"./FileDrop.css\";\nimport { UPLOAD_IMAGE } from \"../../Graphql/Mutations\";\n\nexport default function FileDrop(props) {\n  const [file, setFile] = useState(\"\");\n  const [fileName, setFileName] = useState(\"\");\n  const [uploadedFile, setUploadedFile] = useState({});\n  const [message, setMessage] = useState(\"\");\n  const [uploadPercentage, setUploadPercentage] = useState();\n\n  function onChange(e) {\n    setFile(e.target.files[0]);\n    setFileName(e.target.files[0].name);\n  }\n\n  const [uploadImage, { data: fileUploadData, loading: fileUploadLoding }] = useMutation(\n    UPLOAD_IMAGE,\n    {\n      onCompleted: (data) => {\n        console.log(data);\n        if (data.fileUpload?.success) {\n          setMessage(data.fileUpload?.message);\n        }\n      },\n    },\n  );\n\n  async function uploadFile() {\n    if (file) {\n      console.log(\"dentro: \", file.name);\n      await uploadImage({ variables: { file: file } });\n    } else {\n      console.log(\"erro\");\n    }\n  }\n\n  return (\n    <>\n      <div class=\"mb-3\">\n        {/* {message ? message : null} */}\n        <input className=\"form-control\" type=\"file\" id=\"formFile\" onChange={onChange} />\n        <label className=\"form-label\" htmlFor=\"formFile\">\n          {fileName ? fileName : \"Selecione um arquivo\"}\n        </label>\n        <input\n          type=\"submit\"\n          value=\"Adicionar\"\n          class=\"btn btn-primary btn-block mt-4 col-12\"\n          onClick={uploadFile}\n        />\n      </div>\n      <div class=\"progress\">\n        <div\n          class=\"progress-bar\"\n          style={{ width: `${uploadPercentage}%` }}\n          role=\"progressbar\"\n        ></div>\n      </div>\n      {uploadedFile ? (\n        <div className=\"row mt-5\">\n          <div className=\"col-md-6 m-auto \">\n            <h3 className=\"text-center\">{uploadedFile.fileName}</h3>\n            <img style={{ width: \"100%\" }} src={uploadedFile.filePath} alt=\"\" />\n          </div>\n        </div>\n      ) : null}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}