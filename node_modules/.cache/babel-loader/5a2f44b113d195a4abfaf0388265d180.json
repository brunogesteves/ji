{"ast":null,"code":"var _jsxFileName = \"/home/bruno/trabalho/ji/client/src/Contexts/Context.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar moment = require(\"moment\");\n\nexport const InfoContext = /*#__PURE__*/createContext({\n  searchWord: \"\",\n  setSearchWord: () => {//\n  },\n  idPost: 0,\n  setIdPost: () => {//\n  },\n  isCategoryAdded: false,\n  setIsCategoryAdded: () => {//\n  },\n  time: \"\",\n  openDrawer: \"\",\n  setOpenDrawer: () => {//\n  }\n});\n\nconst InfoProvider = ({\n  children\n}) => {\n  _s();\n\n  const [time, setTime] = useState(\"\");\n  const [searchWord, setSearchWord] = useState(\"\");\n  const [idPost, setIdPost] = useState(0);\n  const [isCategoryAdded, setIsCategoryAdded] = useState(false);\n  const [openDrawer, setOpenDrawer] = useState(\"\");\n  setInterval(() => {\n    const timeNow = moment().format(\"DD/MM/YYYY HH:mm:ss\");\n    setTime(timeNow);\n  }, 1000);\n  return /*#__PURE__*/_jsxDEV(InfoContext.Provider, {\n    value: {\n      searchWord,\n      setSearchWord,\n      idPost,\n      setIdPost,\n      isCategoryAdded,\n      setIsCategoryAdded,\n      time,\n      openDrawer,\n      setOpenDrawer\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InfoProvider, \"CV04EkO6pJNCT8uq8T/7vx/4FGY=\");\n\n_c = InfoProvider;\nexport default InfoProvider;\nexport function useInfo() {\n  _s2();\n\n  const useInfo = useContext(InfoContext);\n  return useInfo;\n}\n\n_s2(useInfo, \"7SWf+z5q6szRv1Pj92+uf1Ylxq8=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"InfoProvider\");","map":{"version":3,"sources":["/home/bruno/trabalho/ji/client/src/Contexts/Context.tsx"],"names":["React","createContext","useContext","useState","moment","require","InfoContext","searchWord","setSearchWord","idPost","setIdPost","isCategoryAdded","setIsCategoryAdded","time","openDrawer","setOpenDrawer","InfoProvider","children","setTime","setInterval","timeNow","format","useInfo"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,QAA3C,QAA2D,OAA3D;;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB;;AAcA,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAY;AAClDM,EAAAA,UAAU,EAAE,EADsC;AAElDC,EAAAA,aAAa,EAAG,MAAM,CACpB;AACD,GAJiD;AAKlDC,EAAAA,MAAM,EAAE,CAL0C;AAMlDC,EAAAA,SAAS,EAAE,MAAM,CACf;AACD,GARiD;AASlDC,EAAAA,eAAe,EAAE,KATiC;AAUlDC,EAAAA,kBAAkB,EAAE,MAAM,CACxB;AACD,GAZiD;AAalDC,EAAAA,IAAI,EAAE,EAb4C;AAclDC,EAAAA,UAAU,EAAE,EAdsC;AAelDC,EAAAA,aAAa,EAAE,MAAM,CACnB;AACD;AAjBiD,CAAZ,CAAjC;;AAoBP,MAAMC,YAAuB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAChD,QAAM,CAACJ,IAAD,EAAOK,OAAP,IAAkBf,QAAQ,CAAS,EAAT,CAAhC;AACA,QAAM,CAACI,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAS,EAAT,CAA5C;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAS,CAAT,CAApC;AACA,QAAM,CAACQ,eAAD,EAAkBC,kBAAlB,IAAwCT,QAAQ,CAAU,KAAV,CAAtD;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAS,EAAT,CAA5C;AAEAgB,EAAAA,WAAW,CAAC,MAAM;AAChB,UAAMC,OAAO,GAAGhB,MAAM,GAAGiB,MAAT,CAAgB,qBAAhB,CAAhB;AACAH,IAAAA,OAAO,CAACE,OAAD,CAAP;AACD,GAHU,EAGR,IAHQ,CAAX;AAKA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLb,MAAAA,UADK;AAELC,MAAAA,aAFK;AAGLC,MAAAA,MAHK;AAILC,MAAAA,SAJK;AAKLC,MAAAA,eALK;AAMLC,MAAAA,kBANK;AAOLC,MAAAA,IAPK;AAQLC,MAAAA,UARK;AASLC,MAAAA;AATK,KADT;AAAA,cAaGE;AAbH;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CA7BD;;GAAMD,Y;;KAAAA,Y;AA+BN,eAAeA,YAAf;AAEA,OAAO,SAASM,OAAT,GAAmB;AAAA;;AACxB,QAAMA,OAAO,GAAGpB,UAAU,CAACI,WAAD,CAA1B;AACA,SAAOgB,OAAP;AACD;;IAHeA,O","sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\nvar moment = require(\"moment\");\n\nexport type InfoProps = {\n  searchWord: string;\n  setSearchWord: (c: string) => void\n  idPost: number;\n  setIdPost: (c: number) => void;\n  isCategoryAdded: boolean;\n  setIsCategoryAdded: (c: boolean) => void;\n  time: string;\n  openDrawer: string;\n  setOpenDrawer: (c: string) => void;\n};\n\nexport const InfoContext = createContext<InfoProps>({\n  searchWord: \"\",\n  setSearchWord:  () => {\n    //\n  },\n  idPost: 0,\n  setIdPost: () => {\n    //\n  },\n  isCategoryAdded: false,\n  setIsCategoryAdded: () => {\n    //\n  },\n  time: \"\",\n  openDrawer: \"\",\n  setOpenDrawer: () => {\n    //\n  },\n});\n\nconst InfoProvider: React. FC = ({ children }) => {\n  const [time, setTime] = useState<string>(\"\");\n  const [searchWord, setSearchWord] = useState<string>(\"\");\n  const [idPost, setIdPost] = useState<number>(0);\n  const [isCategoryAdded, setIsCategoryAdded] = useState<boolean>(false);\n  const [openDrawer, setOpenDrawer] = useState<string>(\"\");\n\n  setInterval(() => {\n    const timeNow = moment().format(\"DD/MM/YYYY HH:mm:ss\");\n    setTime(timeNow);\n  }, 1000);\n\n  return (\n    <InfoContext.Provider\n      value={{\n        searchWord,\n        setSearchWord,\n        idPost,\n        setIdPost,\n        isCategoryAdded,\n        setIsCategoryAdded,\n        time,\n        openDrawer,\n        setOpenDrawer,\n      }}\n    >\n      {children}\n    </InfoContext.Provider>\n  );\n};\n\nexport default InfoProvider\n\nexport function useInfo() {\n  const useInfo = useContext(InfoContext);\n  return useInfo;\n}\n"]},"metadata":{},"sourceType":"module"}