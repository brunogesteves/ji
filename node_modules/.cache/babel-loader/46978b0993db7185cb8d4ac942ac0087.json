{"ast":null,"code":"var _jsxFileName = \"/home/bruno/trabalho/ji/src/Components/Container/Header/Menu/Drawer/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport clsx from \"clsx\"; // import { makeStyles } from \"@mui/material/styles\";\n\nimport SwipeableDrawer from \"@mui/material/SwipeableDrawer\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport { TiThMenu } from \"react-icons/ti\";\nimport \"./Drawer.css\"; // const useStyles = makeStyles({\n//   list: {\n//     width: 150,\n//     backgroundColor: \"red\",\n//     color: \"white\",\n//     flex: 1,\n//   },\n//   fullList: {\n//     width: \"auto\",\n//   },\n// });\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SwipeableTemporaryDrawer() {\n  _s();\n\n  const [menu, setMenu] = useState([\"\"]);\n  const [state, setState] = useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false\n  }); // useEffect(() => {\n  //   Menu.menu().then((res) => {\n  //     setMenu(res.map((res) => res.name));\n  //   });\n  // }, []);\n\n  const toggleDrawer = (anchor, open) => event => {\n    if (event && event.type === \"keydown\" && (event.key === \"Tab\" || event.key === \"Shift\")) {\n      return;\n    }\n\n    setState({ ...state,\n      [anchor]: open\n    });\n  }; // const classes = useStyles();\n  // const [state, setState] = React.useState({\n  //   top: false,\n  //   left: false,\n  //   bottom: false,\n  //   right: false,\n  // });\n  // const toggleDrawer = (anchor, open) => (event) => {\n  //   if (\n  //     event &&\n  //     event.type === \"keydown\" &&\n  //     (event.key === \"Tab\" || event.key === \"Shift\")\n  //   ) {\n  //     return;\n  //   }\n  //   setState({ ...state, [anchor]: open });\n  // };\n  // const list = (anchor) => (\n  //   <div\n  //     className={clsx(classes.list, {\n  //       [classes.fullList]: anchor === \"top\" || anchor === \"bottom\",\n  //     })}\n  //     role=\"presentation\"\n  //     onClick={toggleDrawer(anchor, false)}\n  //     onKeyDown={toggleDrawer(anchor, false)}\n  //   >\n  //     <List>\n  //       <ListItem button key={\"Home\"}>\n  //         <Link to=\"/\" className=\"drawer-menu-item\">\n  //           <ListItemText primary={\"Home\"} />\n  //         </Link>\n  //       </ListItem>\n  //       <ListItem button key={\"Search\"}>\n  //         <Link to=\"/procurar\" className=\"drawer-menu-item\">\n  //           <ListItemText primary={\"Procurar\"} />\n  //         </Link>\n  //       </ListItem>\n  //       {menu.map((cat, i) => {\n  //         return (\n  //           <ListItem button key={i}>\n  //             <Link to={`/categories/${cat}`} className=\"drawer-menu-item\">\n  //               <ListItemText primary={cat} />\n  //             </Link>\n  //           </ListItem>\n  //         );\n  //       })}\n  //     </List>\n  //   </div>\n  // );\n  // const anchor = \"left\";\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"left\", \"right\", \"top\", \"bottom\"].map(anchor => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: toggleDrawer(anchor, true),\n        children: anchor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SwipeableDrawer, {\n        anchor: true,\n        open: state[anchor],\n        onClose: toggleDrawer(anchor, false),\n        onOpen: toggleDrawer(anchor, true),\n        children: \"oi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)]\n    }, anchor, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SwipeableTemporaryDrawer, \"a4zf7BKXGrqkvVvTAUDip7DNWLA=\");\n\n_c = SwipeableTemporaryDrawer;\n\nvar _c;\n\n$RefreshReg$(_c, \"SwipeableTemporaryDrawer\");","map":{"version":3,"sources":["/home/bruno/trabalho/ji/src/Components/Container/Header/Menu/Drawer/index.js"],"names":["React","useEffect","useState","Link","clsx","SwipeableDrawer","List","ListItem","ListItemText","TiThMenu","SwipeableTemporaryDrawer","menu","setMenu","state","setState","top","left","bottom","right","toggleDrawer","anchor","open","event","type","key","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,IAAP,MAAiB,MAAjB,C,CACA;;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AAEA,OAAO,cAAP,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAe,SAASC,wBAAT,GAAoC;AAAA;;AACjD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,CAAC,EAAD,CAAD,CAAhC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC;AACjCa,IAAAA,GAAG,EAAE,KAD4B;AAEjCC,IAAAA,IAAI,EAAE,KAF2B;AAGjCC,IAAAA,MAAM,EAAE,KAHyB;AAIjCC,IAAAA,KAAK,EAAE;AAJ0B,GAAD,CAAlC,CAFiD,CASjD;AACA;AACA;AACA;AACA;;AAEA,QAAMC,YAAY,GAAG,CAACC,MAAD,EAASC,IAAT,KAAmBC,KAAD,IAAW;AAChD,QAAIA,KAAK,IAAIA,KAAK,CAACC,IAAN,KAAe,SAAxB,KAAsCD,KAAK,CAACE,GAAN,KAAc,KAAd,IAAuBF,KAAK,CAACE,GAAN,KAAc,OAA3E,CAAJ,EAAyF;AACvF;AACD;;AAEDV,IAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAY,OAACO,MAAD,GAAUC;AAAtB,KAAD,CAAR;AACD,GAND,CAfiD,CAuBjD;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,sBACE;AAAA,cACG,CAAC,MAAD,EAAS,OAAT,EAAkB,KAAlB,EAAyB,QAAzB,EAAmCI,GAAnC,CAAwCL,MAAD,iBACtC,QAAC,KAAD,CAAO,QAAP;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAED,YAAY,CAACC,MAAD,EAAS,IAAT,CAA7B;AAAA,kBAA8CA;AAA9C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,eAAD;AACE,QAAA,MAAM,EAAE,IADV;AAEE,QAAA,IAAI,EAAEP,KAAK,CAACO,MAAD,CAFb;AAGE,QAAA,OAAO,EAAED,YAAY,CAACC,MAAD,EAAS,KAAT,CAHvB;AAIE,QAAA,MAAM,EAAED,YAAY,CAACC,MAAD,EAAS,IAAT,CAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,OAAqBA,MAArB;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GA7FuBV,wB;;KAAAA,wB","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport clsx from \"clsx\";\n// import { makeStyles } from \"@mui/material/styles\";\nimport SwipeableDrawer from \"@mui/material/SwipeableDrawer\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport { TiThMenu } from \"react-icons/ti\";\n\nimport \"./Drawer.css\";\n\n// const useStyles = makeStyles({\n//   list: {\n//     width: 150,\n//     backgroundColor: \"red\",\n//     color: \"white\",\n//     flex: 1,\n//   },\n//   fullList: {\n//     width: \"auto\",\n//   },\n// });\n\nexport default function SwipeableTemporaryDrawer() {\n  const [menu, setMenu] = useState([\"\"]);\n  const [state, setState] = useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false,\n  });\n\n  // useEffect(() => {\n  //   Menu.menu().then((res) => {\n  //     setMenu(res.map((res) => res.name));\n  //   });\n  // }, []);\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (event && event.type === \"keydown\" && (event.key === \"Tab\" || event.key === \"Shift\")) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n\n  // const classes = useStyles();\n  // const [state, setState] = React.useState({\n  //   top: false,\n  //   left: false,\n  //   bottom: false,\n  //   right: false,\n  // });\n\n  // const toggleDrawer = (anchor, open) => (event) => {\n  //   if (\n  //     event &&\n  //     event.type === \"keydown\" &&\n  //     (event.key === \"Tab\" || event.key === \"Shift\")\n  //   ) {\n  //     return;\n  //   }\n\n  //   setState({ ...state, [anchor]: open });\n  // };\n\n  // const list = (anchor) => (\n  //   <div\n  //     className={clsx(classes.list, {\n  //       [classes.fullList]: anchor === \"top\" || anchor === \"bottom\",\n  //     })}\n  //     role=\"presentation\"\n  //     onClick={toggleDrawer(anchor, false)}\n  //     onKeyDown={toggleDrawer(anchor, false)}\n  //   >\n  //     <List>\n  //       <ListItem button key={\"Home\"}>\n  //         <Link to=\"/\" className=\"drawer-menu-item\">\n  //           <ListItemText primary={\"Home\"} />\n  //         </Link>\n  //       </ListItem>\n  //       <ListItem button key={\"Search\"}>\n  //         <Link to=\"/procurar\" className=\"drawer-menu-item\">\n  //           <ListItemText primary={\"Procurar\"} />\n  //         </Link>\n  //       </ListItem>\n  //       {menu.map((cat, i) => {\n  //         return (\n  //           <ListItem button key={i}>\n  //             <Link to={`/categories/${cat}`} className=\"drawer-menu-item\">\n  //               <ListItemText primary={cat} />\n  //             </Link>\n  //           </ListItem>\n  //         );\n  //       })}\n  //     </List>\n  //   </div>\n  // );\n  // const anchor = \"left\";\n  return (\n    <div>\n      {[\"left\", \"right\", \"top\", \"bottom\"].map((anchor) => (\n        <React.Fragment key={anchor}>\n          <Button onClick={toggleDrawer(anchor, true)}>{anchor}</Button>\n          <SwipeableDrawer\n            anchor={true}\n            open={state[anchor]}\n            onClose={toggleDrawer(anchor, false)}\n            onOpen={toggleDrawer(anchor, true)}\n          >\n            oi\n          </SwipeableDrawer>\n        </React.Fragment>\n      ))}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}