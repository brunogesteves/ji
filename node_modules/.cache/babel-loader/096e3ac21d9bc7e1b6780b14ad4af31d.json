{"ast":null,"code":"var _jsxFileName = \"/home/bruno/trabalho/ji/frontend/src/Components/FileDrop/FileDrop.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"react-dropzone-uploader/dist/styles.css\";\nimport \"./FileDrop.css\";\nimport { base_url } from \"../../config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function FileDrop(props) {\n  _s();\n\n  const [file, setFile] = useState(\"\");\n  const [fileName, setFileName] = useState(\"Choose File\");\n  const [uploadedFile, setUploadedFile] = useState({});\n  const [uploadPercentage, setUploadPercentage] = useState();\n\n  function onChange(e) {\n    setFile(e.target.files[0]);\n    setFileName(e.target.files[0].name);\n  }\n\n  async function onSubmit(e) {\n    e.preventDefault();\n    const data = new FormData();\n    data.append(\"file\", file);\n    const res = await axios.post(`${base_url}/upload`, data, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      },\n      onUploadProgress: progressEvent => {\n        setUploadPercentage(parseInt(Math.round(progressEvent.loaded * 100 / progressEvent.total)));\n      }\n    });\n    const {\n      fileName,\n      filePath\n    } = res.data;\n    setUploadedFile({\n      fileName,\n      filePath\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control\",\n        type: \"file\",\n        id: \"formFile\",\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        htmlFor: \"formFile\",\n        children: fileName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Adicionar\",\n        class: \"btn btn-primary btn-block mt-4 col-12\",\n        onSubmit: onSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), uploadedFile ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6 m-auto \",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-center\",\n          children: uploadedFile.fileName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          style: {\n            width: \"100%\"\n          },\n          src: uploadedFile.filePath,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true);\n}\n\n_s(FileDrop, \"uvbN0G57PoJ9k3Jj+4aQRITxrrw=\");\n\n_c = FileDrop;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileDrop\");","map":{"version":3,"sources":["/home/bruno/trabalho/ji/frontend/src/Components/FileDrop/FileDrop.js"],"names":["React","useState","axios","base_url","FileDrop","props","file","setFile","fileName","setFileName","uploadedFile","setUploadedFile","uploadPercentage","setUploadPercentage","onChange","e","target","files","name","onSubmit","preventDefault","data","FormData","append","res","post","headers","onUploadProgress","progressEvent","parseInt","Math","round","loaded","total","filePath","width"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport axios from \"axios\";\nimport \"react-dropzone-uploader/dist/styles.css\";\nimport \"./FileDrop.css\";\nimport { base_url } from \"../../config\";\n\nexport default function FileDrop(props) {\n  const [file, setFile] = useState(\"\");\n  const [fileName, setFileName] = useState(\"Choose File\");\n  const [uploadedFile, setUploadedFile] = useState({});\n  const [uploadPercentage, setUploadPercentage] = useState();\n\n  function onChange(e) {\n    setFile(e.target.files[0]);\n    setFileName(e.target.files[0].name);\n  }\n\n  async function onSubmit(e) {\n    e.preventDefault();\n    const data = new FormData();\n    data.append(\"file\", file);\n    const res = await axios.post(`${base_url}/upload`, data, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n      onUploadProgress: (progressEvent) => {\n        setUploadPercentage(\n          parseInt(\n            Math.round((progressEvent.loaded * 100) / progressEvent.total)\n          )\n        );\n      },\n    });\n    const { fileName, filePath } = res.data;\n\n    setUploadedFile({ fileName, filePath });\n  }\n\n  return (\n    <>\n      <div class=\"mb-3\">\n        <input\n          className=\"form-control\"\n          type=\"file\"\n          id=\"formFile\"\n          onChange={onChange}\n        />\n        <label className=\"form-label\" htmlFor=\"formFile\">\n          {fileName}\n        </label>\n        <input\n          type=\"submit\"\n          value=\"Adicionar\"\n          class=\"btn btn-primary btn-block mt-4 col-12\"\n          onSubmit={onSubmit}\n        />\n      </div>\n      {uploadedFile ? (\n        <div className=\"row mt-5\">\n          <div className=\"col-md-6 m-auto \">\n            <h3 className=\"text-center\">{uploadedFile.fileName}</h3>\n            <img style={{ width: \"100%\" }} src={uploadedFile.filePath} alt=\"\" />\n          </div>\n        </div>\n      ) : null}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}