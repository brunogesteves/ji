{"ast":null,"code":"var _jsxFileName = \"/home/bruno/trabalho/ji/src/Pages/CategoryPage/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Search.css\";\nimport SidebarFront from \"../../Components/SidebarFront\";\nimport { InfoContext } from \"../../Contexts/Context\";\nimport Container from \"../../Components/Container/Container\";\nimport { useQuery } from \"@apollo/client\";\nimport { SEARCH_POSTS } from \"../../Graphql/Queries\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Search() {\n  _s();\n\n  const {\n    searchWord,\n    setSearchWord\n  } = useContext(InfoContext);\n  const {\n    data\n  } = useQuery(SEARCH_POSTS, {\n    variables: {\n      search: searchWord\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Procurar\",\n          className: \"search-content-input\",\n          onChange: e => setSearchWord(e.target.value),\n          value: searchWord\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), searchWord !== \"\" ? `Termo buscado é \"${searchWord}\"` : \"\", data && searchWord !== \"\" && data.searchPosts.map((res, i) => {\n          const {\n            thumb,\n            name,\n            slug,\n            category\n          } = res;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"search-content-items\",\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              style: {\n                textDecoration: \"none\",\n                color: \"black\"\n              },\n              to: `/${slug}`,\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: `/${slug}`,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: thumb,\n                alt: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 19\n            }, this), \"Categoria: \", category]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-sidebar\",\n        children: /*#__PURE__*/_jsxDEV(SidebarFront, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Search, \"K9h2JJULNc+GtORp19xLvVhY5mU=\", false, function () {\n  return [useQuery];\n});\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/home/bruno/trabalho/ji/src/Pages/CategoryPage/index.js"],"names":["React","useContext","Link","SidebarFront","InfoContext","Container","useQuery","SEARCH_POSTS","Search","searchWord","setSearchWord","data","variables","search","e","target","value","searchPosts","map","res","i","thumb","name","slug","category","textDecoration","color"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,cAAP;AAEA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AAEA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,YAAT,QAA6B,uBAA7B;;AAEA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAC/B,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAAgCT,UAAU,CAACG,WAAD,CAAhD;AAEA,QAAM;AAAEO,IAAAA;AAAF,MAAWL,QAAQ,CAACC,YAAD,EAAe;AAAEK,IAAAA,SAAS,EAAE;AAAEC,MAAAA,MAAM,EAAEJ;AAAV;AAAb,GAAf,CAAzB;AACA,sBACE,QAAC,SAAD;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,WAAW,EAAC,UAFd;AAGE,UAAA,SAAS,EAAC,sBAHZ;AAIE,UAAA,QAAQ,EAAGK,CAAD,IAAOJ,aAAa,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAJhC;AAKE,UAAA,KAAK,EAAEP;AALT;AAAA;AAAA;AAAA;AAAA,gBADF,EAQGA,UAAU,KAAK,EAAf,GAAqB,oBAAmBA,UAAW,GAAnD,GAAwD,EAR3D,EASGE,IAAI,IACHF,UAAU,KAAK,EADhB,IAECE,IAAI,CAACM,WAAL,CAAiBC,GAAjB,CAAqB,CAACC,GAAD,EAAMC,CAAN,KAAY;AAC/B,gBAAM;AAAEC,YAAAA,KAAF;AAASC,YAAAA,IAAT;AAAeC,YAAAA,IAAf;AAAqBC,YAAAA;AAArB,cAAkCL,GAAxC;AACA,8BACE;AAAa,YAAA,SAAS,EAAC,sBAAvB;AAAA,oCACE,QAAC,IAAD;AAAM,cAAA,KAAK,EAAE;AAAEM,gBAAAA,cAAc,EAAE,MAAlB;AAA0BC,gBAAAA,KAAK,EAAE;AAAjC,eAAb;AAAyD,cAAA,EAAE,EAAG,IAAGH,IAAK,EAAtE;AAAA,wBACGD;AADH;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE,QAAC,IAAD;AAAM,cAAA,EAAE,EAAG,IAAGC,IAAK,EAAnB;AAAA,qCACE;AAAK,gBAAA,GAAG,EAAEF,KAAV;AAAiB,gBAAA,GAAG,EAAEC;AAAtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAJF,iBAOcE,QAPd;AAAA,aAAUJ,CAAV;AAAA;AAAA;AAAA;AAAA,kBADF;AAWD,SAbD,CAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eA2BE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,+BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA3BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD;;GAvCuBZ,M;UAGLF,Q;;;KAHKE,M","sourcesContent":["import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Search.css\";\n\nimport SidebarFront from \"../../Components/SidebarFront\";\nimport { InfoContext } from \"../../Contexts/Context\";\n\nimport Container from \"../../Components/Container/Container\";\nimport { useQuery } from \"@apollo/client\";\nimport { SEARCH_POSTS } from \"../../Graphql/Queries\";\n\nexport default function Search() {\n  const { searchWord, setSearchWord } = useContext(InfoContext);\n\n  const { data } = useQuery(SEARCH_POSTS, { variables: { search: searchWord } });\n  return (\n    <Container>\n      <div className=\"search-area\">\n        <div className=\"search-content\">\n          <input\n            type=\"text\"\n            placeholder=\"Procurar\"\n            className=\"search-content-input\"\n            onChange={(e) => setSearchWord(e.target.value)}\n            value={searchWord}\n          />\n          {searchWord !== \"\" ? `Termo buscado é \"${searchWord}\"` : \"\"}\n          {data &&\n            searchWord !== \"\" &&\n            data.searchPosts.map((res, i) => {\n              const { thumb, name, slug, category } = res;\n              return (\n                <div key={i} className=\"search-content-items\">\n                  <Link style={{ textDecoration: \"none\", color: \"black\" }} to={`/${slug}`}>\n                    {name}\n                  </Link>\n                  <Link to={`/${slug}`}>\n                    <img src={thumb} alt={name} />\n                  </Link>\n                  Categoria: {category}\n                </div>\n              );\n            })}\n        </div>\n        <div className=\"search-sidebar\">\n          <SidebarFront />\n        </div>\n      </div>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}