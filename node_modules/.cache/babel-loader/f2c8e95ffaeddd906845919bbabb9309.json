{"ast":null,"code":"var _jsxFileName = \"/home/bruno/trabalho/ji/frontend/src/Pages/Admin/UpdatePost/UpdatePost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport slugify from \"react-slugify\";\nimport { useParams } from \"react-router-dom\";\nimport SunEditor from \"suneditor-react\";\nimport \"suneditor/dist/css/suneditor.min.css\"; // Import Sun Editor's CSS File\n\nimport axios from \"axios\";\nimport { Button } from \"react-bootstrap\";\nimport Modal from \"@material-ui/core/Modal\";\nimport { base_url } from \"../../../config\";\nimport Admin from \"../Admin\";\nimport ImagesWIndow from \"../../../Components/ImagesWIndow/ImagesWIndow\";\nimport NewCategory from \"../../../Components/NewCategory/NewCategory\";\nimport UpdateService from \"../../../Services/UpdateService\";\nimport \"./UpdatePost.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UpdatePost(props) {\n  _s();\n\n  const nameParams = useParams();\n  let idNumber = nameParams.id;\n  const [id, setId] = useState(\"\");\n  const [namePost, setNamePost] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [currentCategory, setCurrentCategory] = useState(\"\");\n  const [thumb, setThumb] = useState(\"\");\n  const [slide, setSlide] = useState(false);\n  const [gameplay, setGameplay] = useState(false);\n  const [middle, setMiddle] = useState(false);\n  const [gallery, setGallery] = useState(false);\n  const [publicPost, setPublicPost] = useState();\n  const [file, setFile] = useState(\"\");\n  const [categories, setCategories] = useState([]);\n  const [word, setWord] = useState(\"\");\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\n  const [modalShow, setModalShow] = useState(false);\n  const [warning, setWarning] = useState(\"\");\n  const editor = useRef(null);\n  useEffect(() => {\n    UpdateService.getInfo(idNumber).then(res => {\n      setNamePost(res[0].name);\n      setContent(res[0].content);\n      setCurrentCategory(res[0].category);\n      setThumb(res[0].thumb);\n      setId(res[0].id);\n      setSlide(res[0].slide);\n      setGameplay(res[0].id);\n      setMiddle(res[0].middle);\n      setGallery(res[0].gameplay);\n      setPublicPost(res[0].publicpost);\n    }); // eslint-disable-next-line\n  }, []);\n\n  function dataForm(data) {\n    setContent(data);\n  }\n\n  useEffect(() => {\n    UpdateService.category().then(res => {\n      setCategories(res);\n    });\n  }, [word]);\n\n  function update() {\n    namePost && content ? UpdateService.update(id, content, namePost, selectedCategory, publicPost, slugify(namePost, {\n      delimiter: \"-\"\n    })).then(res => {\n      setWarning(res.msg);\n      setInterval(() => {\n        setWarning(\"\");\n      }, 5000);\n    }).catch(error => {\n      console.log(\"erro\");\n    }) : alert(\"HÃ¡ campos vazios\");\n  }\n\n  useEffect(() => {\n    let image = file.name;\n    const url = `${base_url}/upload/${image}`;\n    const data = new FormData();\n    data.append(\"file\", file);\n    const options = {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    };\n    axios.post(url, data, options);\n  }, [file]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Admin, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"updateContent\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"updateContent-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"update-warning\",\n            children: warning\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: update,\n            children: \"Atualizar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), \"Nome:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: e => setNamePost(e.target.value),\n            value: namePost\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Publico\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onClick: e => setPublicPost(e.target.checked),\n              defaultChecked: publicPost ? true : false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Slide\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onClick: e => setSlide(e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), \"Meio\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onClick: e => setMiddle(e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this), \"Gameplay\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onClick: e => setGameplay(e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this), \"Galeria\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onClick: e => setGallery(e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NewCategory, {\n            addCategory: setWord\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: currentCategory,\n            onClick: e => setSelectedCategory(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Escolha uma Categoria\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this), categories.map((res, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: res.name,\n              children: res.name\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `/${thumb}`,\n            alt: thumb\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: () => setModalShow(true),\n            children: \"Adicionar Imagem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Modal, {\n            open: modalShow,\n            onClose: () => setModalShow(false),\n            \"aria-labelledby\": \"simple-modal-title\",\n            \"aria-describedby\": \"simple-modal-description\",\n            children: /*#__PURE__*/_jsxDEV(ImagesWIndow, {\n              show: modalShow,\n              onHide: () => setModalShow(false),\n              setThumb: setThumb,\n              setModalShow: setModalShow\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"updateContent-form\",\n          children: /*#__PURE__*/_jsxDEV(SunEditor, {\n            setContents: content,\n            ref: editor,\n            lang: \"pt_br\",\n            width: \"92%\",\n            height: \"400\",\n            name: \"my-editor\",\n            setOptions: {\n              mode: \"classic\",\n              katex: \"window.katex\",\n              imageWidth: \"(auto)\",\n              imageHeight: \"(auto)\",\n              // imageUploadUrl: `${base_url}/ckimage`,\n              imageAccept: \"*\",\n              imageGalleryUrl: `${base_url}/images`,\n              imageFileInput: true,\n              videoFileInput: false,\n              tabDisable: false,\n              buttonList: [[\"undo\", \"redo\", \"font\", \"fontSize\", \"formatBlock\", \"paragraphStyle\", \"blockquote\", \"bold\", \"underline\", \"italic\", \"strike\", \"subscript\", \"superscript\", \"fontColor\", \"hiliteColor\", \"textStyle\", \"removeFormat\", \"outdent\", \"indent\", \"align\", \"horizontalRule\", \"list\", \"lineHeight\", \"table\", \"link\", \"image\", \"video\", \"audio\", \"math\", \"imageGallery\", \"fullScreen\", \"showBlocks\", \"codeView\", \"preview\", \"print\", \"save\", \"template\"]]\n            },\n            onChange: dataForm,\n            onImageUploadBefore: files => {\n              let nameImage = files[0].name;\n              setFile(files[0]);\n              editor.current.editor.insertHTML(`<img src=\"/${nameImage}\">`);\n              return true;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UpdatePost, \"klKkYtCkUENtq0Rt09gJ6WqGk1E=\", false, function () {\n  return [useParams];\n});\n\n_c = UpdatePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdatePost\");","map":{"version":3,"sources":["/home/bruno/trabalho/ji/frontend/src/Pages/Admin/UpdatePost/UpdatePost.js"],"names":["React","useState","useEffect","useRef","slugify","useParams","SunEditor","axios","Button","Modal","base_url","Admin","ImagesWIndow","NewCategory","UpdateService","UpdatePost","props","nameParams","idNumber","id","setId","namePost","setNamePost","content","setContent","currentCategory","setCurrentCategory","thumb","setThumb","slide","setSlide","gameplay","setGameplay","middle","setMiddle","gallery","setGallery","publicPost","setPublicPost","file","setFile","categories","setCategories","word","setWord","selectedCategory","setSelectedCategory","modalShow","setModalShow","warning","setWarning","editor","getInfo","then","res","name","category","publicpost","dataForm","data","update","delimiter","msg","setInterval","catch","error","console","log","alert","image","url","FormData","append","options","headers","post","e","target","value","checked","map","i","mode","katex","imageWidth","imageHeight","imageAccept","imageGalleryUrl","imageFileInput","videoFileInput","tabDisable","buttonList","files","nameImage","current","insertHTML"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport slugify from \"react-slugify\";\nimport { useParams } from \"react-router-dom\";\nimport SunEditor from \"suneditor-react\";\n\nimport \"suneditor/dist/css/suneditor.min.css\"; // Import Sun Editor's CSS File\nimport axios from \"axios\";\nimport { Button } from \"react-bootstrap\";\nimport Modal from \"@material-ui/core/Modal\";\nimport { base_url } from \"../../../config\";\n\nimport Admin from \"../Admin\";\nimport ImagesWIndow from \"../../../Components/ImagesWIndow/ImagesWIndow\";\nimport NewCategory from \"../../../Components/NewCategory/NewCategory\";\nimport UpdateService from \"../../../Services/UpdateService\";\n\nimport \"./UpdatePost.css\";\n\nexport default function UpdatePost(props) {\n  const nameParams = useParams();\n  let idNumber = nameParams.id;\n\n  const [id, setId] = useState(\"\");\n  const [namePost, setNamePost] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [currentCategory, setCurrentCategory] = useState(\"\");\n  const [thumb, setThumb] = useState(\"\");\n  const [slide, setSlide] = useState(false);\n  const [gameplay, setGameplay] = useState(false);\n  const [middle, setMiddle] = useState(false);\n  const [gallery, setGallery] = useState(false);\n  const [publicPost, setPublicPost] = useState();\n  const [file, setFile] = useState(\"\");\n  const [categories, setCategories] = useState([]);\n  const [word, setWord] = useState(\"\");\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\n  const [modalShow, setModalShow] = useState(false);\n  const [warning, setWarning] = useState(\"\");\n  const editor = useRef(null);\n\n  useEffect(() => {\n    UpdateService.getInfo(idNumber).then((res) => {\n      setNamePost(res[0].name);\n      setContent(res[0].content);\n      setCurrentCategory(res[0].category);\n      setThumb(res[0].thumb);\n      setId(res[0].id);\n      setSlide(res[0].slide);\n      setGameplay(res[0].id);\n      setMiddle(res[0].middle);\n      setGallery(res[0].gameplay);\n      setPublicPost(res[0].publicpost);\n    });\n    // eslint-disable-next-line\n  }, []);\n\n  function dataForm(data) {\n    setContent(data);\n  }\n\n  useEffect(() => {\n    UpdateService.category().then((res) => {\n      setCategories(res);\n    });\n  }, [word]);\n\n  function update() {\n    namePost && content\n      ? UpdateService.update(\n          id,\n          content,\n          namePost,\n          selectedCategory,\n          publicPost,\n          slugify(namePost, { delimiter: \"-\" })\n        )\n          .then((res) => {\n            setWarning(res.msg);\n            setInterval(() => {\n              setWarning(\"\");\n            }, 5000);\n          })\n          .catch((error) => {\n            console.log(\"erro\");\n          })\n      : alert(\"HÃ¡ campos vazios\");\n  }\n\n  useEffect(() => {\n    let image = file.name;\n    const url = `${base_url}/upload/${image}`;\n    const data = new FormData();\n    data.append(\"file\", file);\n    const options = {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n    };\n    axios.post(url, data, options);\n  }, [file]);\n\n  return (\n    <div>\n      <Admin>\n        <div className=\"updateContent\">\n          <div className=\"updateContent-field\">\n            <p className=\"update-warning\">{warning}</p>\n            <button onClick={update}>Atualizar</button>\n            Nome:\n            <input\n              type=\"text\"\n              onChange={(e) => setNamePost(e.target.value)}\n              value={namePost}\n            />\n            <div>\n              Publico\n              <input\n                type=\"checkbox\"\n                onClick={(e) => setPublicPost(e.target.checked)}\n                defaultChecked={publicPost ? true : false}\n              />\n            </div>\n            <div>\n              Slide\n              <input\n                type=\"checkbox\"\n                onClick={(e) => setSlide(e.target.checked)}\n              />\n              Meio\n              <input\n                type=\"checkbox\"\n                onClick={(e) => setMiddle(e.target.checked)}\n              />\n              Gameplay\n              <input\n                type=\"checkbox\"\n                onClick={(e) => setGameplay(e.target.checked)}\n              />\n              Galeria\n              <input\n                type=\"checkbox\"\n                onClick={(e) => setGallery(e.target.checked)}\n              />\n            </div>\n            <NewCategory addCategory={setWord} />\n            <select\n              value={currentCategory}\n              onClick={(e) => setSelectedCategory(e.target.value)}\n            >\n              <option>Escolha uma Categoria</option>\n              {categories.map((res, i) => (\n                <option key={i} value={res.name}>\n                  {res.name}\n                </option>\n              ))}\n            </select>\n            <img src={`/${thumb}`} alt={thumb} />\n            <Button variant=\"primary\" onClick={() => setModalShow(true)}>\n              Adicionar Imagem\n            </Button>\n            <Modal\n              open={modalShow}\n              onClose={() => setModalShow(false)}\n              aria-labelledby=\"simple-modal-title\"\n              aria-describedby=\"simple-modal-description\"\n            >\n              {\n                <ImagesWIndow\n                  show={modalShow}\n                  onHide={() => setModalShow(false)}\n                  setThumb={setThumb}\n                  setModalShow={setModalShow}\n                />\n              }\n            </Modal>\n          </div>\n          <div className=\"updateContent-form\">\n            <SunEditor\n              setContents={content}\n              ref={editor}\n              lang=\"pt_br\"\n              width=\"92%\"\n              height=\"400\"\n              name=\"my-editor\"\n              setOptions={{\n                mode: \"classic\",\n                katex: \"window.katex\",\n                imageWidth: \"(auto)\",\n                imageHeight: \"(auto)\",\n                // imageUploadUrl: `${base_url}/ckimage`,\n                imageAccept: \"*\",\n                imageGalleryUrl: `${base_url}/images`,\n                imageFileInput: true,\n                videoFileInput: false,\n                tabDisable: false,\n                buttonList: [\n                  [\n                    \"undo\",\n                    \"redo\",\n                    \"font\",\n                    \"fontSize\",\n                    \"formatBlock\",\n                    \"paragraphStyle\",\n                    \"blockquote\",\n                    \"bold\",\n                    \"underline\",\n                    \"italic\",\n                    \"strike\",\n                    \"subscript\",\n                    \"superscript\",\n                    \"fontColor\",\n                    \"hiliteColor\",\n                    \"textStyle\",\n                    \"removeFormat\",\n                    \"outdent\",\n                    \"indent\",\n                    \"align\",\n                    \"horizontalRule\",\n                    \"list\",\n                    \"lineHeight\",\n                    \"table\",\n                    \"link\",\n                    \"image\",\n                    \"video\",\n                    \"audio\",\n                    \"math\",\n                    \"imageGallery\",\n                    \"fullScreen\",\n                    \"showBlocks\",\n                    \"codeView\",\n                    \"preview\",\n                    \"print\",\n                    \"save\",\n                    \"template\",\n                  ],\n                ],\n              }}\n              onChange={dataForm}\n              onImageUploadBefore={(files) => {\n                let nameImage = files[0].name;\n                setFile(files[0]);\n                editor.current.editor.insertHTML(`<img src=\"/${nameImage}\">`);\n                return true;\n              }}\n            />\n          </div>\n        </div>\n      </Admin>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}