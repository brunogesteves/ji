{"ast":null,"code":"var _jsxFileName = \"/home/bruno/trabalho/ji/src/Components/FileDrop/FileDrop.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\"; // import \"react-dropzone-uploader/dist/styles.css\";\n\nimport \"./FileDrop.css\";\nimport { FILE_UPLOAD } from \"../../Graphql/Mutations\";\nimport { useMutation } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function FileDrop(props) {\n  _s();\n\n  // const [file, setFile] = useState(\"\");\n  // const [fileName, setFileName] = useState(\"\");\n  // const [uploadedFile, setUploadedFile] = useState({});\n  // const [response, setResponse] = useState(\"\");\n  // const [uploadPercentage, setUploadPercentage] = useState();\n  // function onChange(e) {\n  //   setFile(e.target.files[0]);\n  //   setFileName(e.target.files[0].name);\n  // }\n  // const [uploadImage, { data: fileUploadData }] = useMutation(UPLOAD_IMAGE, {\n  //   onCompleted: (data) => {\n  //     console.log(data);\n  //     if (data.fileUpload?.success) {\n  //       alert(data.fileUpload?.message);\n  //       setResponse(data.fileUpload?.message);\n  //     }\n  //   },\n  // });\n  // async function uploadFile() {\n  //   if (!file) {\n  //     return;\n  //   }\n  //   // let data = {\n  //   //   file:e.target.files[0],\n  //   // }\n  //   uploadImage({\n  //     variables: file,\n  //   });\n  // }\n  const [response, setResponse] = useState < any > '';\n  const [responseMultiple, setResponseMultiple] = useState < any > '';\n  const [fileUpload, {\n    data: fileUploadData,\n    loading: fileUploadLoding\n  }] = useMutation(FILE_UPLOAD, {\n    onError: err => {\n      console.log(err);\n      setResponse(err.message);\n    },\n    onCompleted: data => {\n      var _data$fileUpload;\n\n      console.log(data);\n\n      if ((_data$fileUpload = data.fileUpload) === null || _data$fileUpload === void 0 ? void 0 : _data$fileUpload.success) {\n        var _data$fileUpload2, _data$fileUpload3;\n\n        alert((_data$fileUpload2 = data.fileUpload) === null || _data$fileUpload2 === void 0 ? void 0 : _data$fileUpload2.message);\n        setResponse((_data$fileUpload3 = data.fileUpload) === null || _data$fileUpload3 === void 0 ? void 0 : _data$fileUpload3.message);\n      }\n    }\n  });\n  const [multipleFileUpload, {\n    data: multipleFileUploadData,\n    loading: multipleFileUploadLoading\n  }] = useMutation(MULTIPLE_FILE_UPLOAD, {\n    onError: err => {\n      console.log(err);\n      setResponseMultiple(err.message);\n    },\n    onCompleted: data => {\n      var _data$multipleFileUpl;\n\n      console.log(data);\n\n      if ((_data$multipleFileUpl = data.multipleFileUpload) === null || _data$multipleFileUpl === void 0 ? void 0 : _data$multipleFileUpl.success) {\n        var _data$multipleFileUpl2, _data$multipleFileUpl3;\n\n        alert((_data$multipleFileUpl2 = data.multipleFileUpload) === null || _data$multipleFileUpl2 === void 0 ? void 0 : _data$multipleFileUpl2.message);\n        setResponseMultiple((_data$multipleFileUpl3 = data.multipleFileUpload) === null || _data$multipleFileUpl3 === void 0 ? void 0 : _data$multipleFileUpl3.message);\n      }\n    }\n  });\n\n  const uploadFile = e => {\n    if (!e.target.files) {\n      return;\n    }\n\n    let data = {\n      file: e.target.files[0]\n    };\n    fileUpload({\n      variables: data\n    });\n  };\n\n  const uploadMultiple = e => {\n    if (!e.target.files) {\n      return;\n    }\n\n    let file = e.target.files;\n    let data = {\n      file: file\n    };\n    multipleFileUpload({\n      variables: data\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"mb-3\",\n      children: [response ? response : null, /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control\",\n        type: \"file\",\n        id: \"formFile\",\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        htmlFor: \"formFile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Adicionar\",\n        class: \"btn btn-primary btn-block mt-4 col-12\",\n        onClick: uploadFile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"progress\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"progress-bar\",\n        style: {\n          width: `${uploadPercentage}%`\n        },\n        role: \"progressbar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), uploadedFile ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6 m-auto \",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-center\",\n          children: uploadedFile.fileName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          style: {\n            width: \"100%\"\n          },\n          src: uploadedFile.filePath,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true);\n}\n\n_s(FileDrop, \"DeG5I0K6Gm1anS0ghoB5ntilBNc=\", false, function () {\n  return [useMutation, useMutation];\n});\n\n_c = FileDrop;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileDrop\");","map":{"version":3,"sources":["/home/bruno/trabalho/ji/src/Components/FileDrop/FileDrop.js"],"names":["React","useState","axios","FILE_UPLOAD","useMutation","FileDrop","props","response","setResponse","any","responseMultiple","setResponseMultiple","fileUpload","data","fileUploadData","loading","fileUploadLoding","onError","err","console","log","message","onCompleted","success","alert","multipleFileUpload","multipleFileUploadData","multipleFileUploadLoading","MULTIPLE_FILE_UPLOAD","uploadFile","e","target","files","file","variables","uploadMultiple","onChange","width","uploadPercentage","uploadedFile","fileName","filePath"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport axios from \"axios\";\n// import \"react-dropzone-uploader/dist/styles.css\";\nimport \"./FileDrop.css\";\nimport { FILE_UPLOAD } from \"../../Graphql/Mutations\";\nimport { useMutation } from \"@apollo/client\";\n\nexport default function FileDrop(props) {\n  // const [file, setFile] = useState(\"\");\n  // const [fileName, setFileName] = useState(\"\");\n  // const [uploadedFile, setUploadedFile] = useState({});\n  // const [response, setResponse] = useState(\"\");\n  // const [uploadPercentage, setUploadPercentage] = useState();\n\n  // function onChange(e) {\n  //   setFile(e.target.files[0]);\n  //   setFileName(e.target.files[0].name);\n  // }\n\n  // const [uploadImage, { data: fileUploadData }] = useMutation(UPLOAD_IMAGE, {\n  //   onCompleted: (data) => {\n  //     console.log(data);\n  //     if (data.fileUpload?.success) {\n  //       alert(data.fileUpload?.message);\n  //       setResponse(data.fileUpload?.message);\n  //     }\n  //   },\n  // });\n\n  // async function uploadFile() {\n  //   if (!file) {\n  //     return;\n  //   }\n\n  //   // let data = {\n  //   //   file:e.target.files[0],\n  //   // }\n  //   uploadImage({\n  //     variables: file,\n  //   });\n  // }\n  const [response,setResponse] = useState<any>('');\n  const [responseMultiple,setResponseMultiple] = useState<any>('');\n\n\n  const [fileUpload , {data:fileUploadData,loading:fileUploadLoding}] = useMutation(\n    FILE_UPLOAD,\n    {\n    onError: (err) =>\n    {\n      console.log(err);\n        setResponse(err.message);\n    },\n    onCompleted: (data) =>\n    {\n      console.log(data);\n      if(data.fileUpload?.success)\n      {\n\n        alert(data.fileUpload?.message);\n        setResponse(data.fileUpload?.message);\n      }\n\n\n    },\n\n    \n    \n  });\n\n\n\n\n  const [multipleFileUpload , { data:multipleFileUploadData, loading:multipleFileUploadLoading }] = useMutation(MULTIPLE_FILE_UPLOAD,\n    {\n    onError: (err) =>\n    {\n      console.log(err);\n        setResponseMultiple(err.message);\n    },\n    onCompleted: (data) =>\n    {\n      console.log(data);\n      if(data.multipleFileUpload?.success)\n      {\n\n        alert(data.multipleFileUpload?.message);\n        setResponseMultiple(data.multipleFileUpload?.message);\n      }\n    },\n    \n  });\n\n\n  const uploadFile = (e) =>\n  {\n    if (!e.target.files) \n    {\n      return;\n    }\n\n      let data = {\n        file:e.target.files[0],\n      }\n      fileUpload({\n        variables:data\n      });\n  }\n\n\n  const uploadMultiple = (e) =>\n  {\n    if (!e.target.files) \n    {\n      return;\n    }\n     \n     let file=  e.target.files;\n\n  \n     \n     let data = {\n       file: file\n     }\n\n     multipleFileUpload({\n       variables:data\n     })\n    \n  }\n\n\n  return (\n    <>\n      <div class=\"mb-3\">\n        {response ? response : null}\n        <input className=\"form-control\" type=\"file\" id=\"formFile\" onChange={onChange} />\n        <label className=\"form-label\" htmlFor=\"formFile\">\n          {/* {fileName ? fileName : \"Selecione um arquivo\"} */}\n        </label>\n        <input\n          type=\"submit\"\n          value=\"Adicionar\"\n          class=\"btn btn-primary btn-block mt-4 col-12\"\n          onClick={uploadFile}\n        />\n      </div>\n      <div class=\"progress\">\n        <div\n          class=\"progress-bar\"\n          style={{ width: `${uploadPercentage}%` }}\n          role=\"progressbar\"\n        ></div>\n      </div>\n      {uploadedFile ? (\n        <div className=\"row mt-5\">\n          <div className=\"col-md-6 m-auto \">\n            <h3 className=\"text-center\">{uploadedFile.fileName}</h3>\n            <img style={{ width: \"100%\" }} src={uploadedFile.filePath} alt=\"\" />\n          </div>\n        </div>\n      ) : null}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}