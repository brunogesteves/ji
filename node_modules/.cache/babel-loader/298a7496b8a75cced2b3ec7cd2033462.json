{"ast":null,"code":"/* global window */\nfunction attrobj(key, el) {\n  var values = {};\n  Object.keys(el.dataset).forEach(function (data) {\n    if (data.match(new RegExp(\"^\" + key)) && data !== key) {\n      var optionName = data.replace(key, '');\n      var isGlobal = false;\n\n      if (optionName.match(/^Global/)) {\n        optionName = optionName.replace('Global', '');\n        isGlobal = true;\n      }\n\n      optionName = \"\" + optionName[0].toLowerCase() + optionName.slice(1);\n\n      if (isGlobal) {\n        values[optionName] = window[el.dataset[data]];\n      } else {\n        values[optionName] = el.dataset[data];\n      }\n\n      if (typeof values[optionName] === 'undefined' || values[optionName] === '') {\n        values[optionName] = true;\n      }\n    }\n  });\n  return values;\n}\n\nexport default attrobj;","map":{"version":3,"sources":["/home/bruno/trabalho/ji/node_modules/attrobj/dist/attrobj.js"],"names":["attrobj","key","el","values","Object","keys","dataset","forEach","data","match","RegExp","optionName","replace","isGlobal","toLowerCase","slice","window"],"mappings":"AAAA;AACA,SAASA,OAAT,CAAkBC,GAAlB,EAAuBC,EAAvB,EAA2B;AACzB,MAAIC,MAAM,GAAG,EAAb;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYH,EAAE,CAACI,OAAf,EAAwBC,OAAxB,CAAgC,UAAUC,IAAV,EAAgB;AAC9C,QAAIA,IAAI,CAACC,KAAL,CAAW,IAAIC,MAAJ,CAAW,MAAMT,GAAjB,CAAX,KAAqCO,IAAI,KAAKP,GAAlD,EAAuD;AACrD,UAAIU,UAAU,GAAGH,IAAI,CAACI,OAAL,CAAaX,GAAb,EAAkB,EAAlB,CAAjB;AACA,UAAIY,QAAQ,GAAG,KAAf;;AAEA,UAAIF,UAAU,CAACF,KAAX,CAAiB,SAAjB,CAAJ,EAAiC;AAC/BE,QAAAA,UAAU,GAAGA,UAAU,CAACC,OAAX,CAAmB,QAAnB,EAA6B,EAA7B,CAAb;AACAC,QAAAA,QAAQ,GAAG,IAAX;AACD;;AAEDF,MAAAA,UAAU,GAAG,KAAKA,UAAU,CAAC,CAAD,CAAV,CAAcG,WAAd,EAAL,GAAmCH,UAAU,CAACI,KAAX,CAAiB,CAAjB,CAAhD;;AAEA,UAAIF,QAAJ,EAAc;AACZV,QAAAA,MAAM,CAACQ,UAAD,CAAN,GAAqBK,MAAM,CAACd,EAAE,CAACI,OAAH,CAAWE,IAAX,CAAD,CAA3B;AACD,OAFD,MAEO;AACLL,QAAAA,MAAM,CAACQ,UAAD,CAAN,GAAqBT,EAAE,CAACI,OAAH,CAAWE,IAAX,CAArB;AACD;;AAED,UAAI,OAAOL,MAAM,CAACQ,UAAD,CAAb,KAA8B,WAA9B,IAA6CR,MAAM,CAACQ,UAAD,CAAN,KAAuB,EAAxE,EAA4E;AAC1ER,QAAAA,MAAM,CAACQ,UAAD,CAAN,GAAqB,IAArB;AACD;AACF;AACF,GAtBD;AAuBA,SAAOR,MAAP;AACD;;AAED,eAAeH,OAAf","sourcesContent":["/* global window */\nfunction attrobj (key, el) {\n  var values = {};\n  Object.keys(el.dataset).forEach(function (data) {\n    if (data.match(new RegExp(\"^\" + key)) && data !== key) {\n      var optionName = data.replace(key, '');\n      var isGlobal = false;\n\n      if (optionName.match(/^Global/)) {\n        optionName = optionName.replace('Global', '');\n        isGlobal = true;\n      }\n\n      optionName = \"\" + optionName[0].toLowerCase() + optionName.slice(1);\n\n      if (isGlobal) {\n        values[optionName] = window[el.dataset[data]];\n      } else {\n        values[optionName] = el.dataset[data];\n      }\n\n      if (typeof values[optionName] === 'undefined' || values[optionName] === '') {\n        values[optionName] = true;\n      }\n    }\n  });\n  return values;\n}\n\nexport default attrobj;\n//# sourceMappingURL=attrobj.js.map\n"]},"metadata":{},"sourceType":"module"}